/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const REVISION="143",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,NoColorSpace="",SRGBColorSpace="srgb",LinearSRGBColorSpace="srgb-linear",ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042,GLSL1="100",GLSL3="300 es",_SRGBAFormat=1035;class EventDispatcher{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){var r;return void 0!==this._listeners&&void 0!==(r=this._listeners)[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){var r;void 0!==this._listeners&&void 0!==(e=this._listeners[e])&&-1!==(r=e.indexOf(t))&&e.splice(r,1)}dispatchEvent(r){if(void 0!==this._listeners){var e=this._listeners[r.type];if(void 0!==e){r.target=this;var i=e.slice(0);for(let e=0,t=i.length;e<t;e++)i[e].call(this,r);r.target=null}}}}const _lut=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let _seed=1234567;const DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI;function generateUUID(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(_lut[255&e]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[255&t]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[63&r|128]+_lut[r>>8&255]+"-"+_lut[r>>16&255]+_lut[r>>24&255]+_lut[255&i]+_lut[i>>8&255]+_lut[i>>16&255]+_lut[i>>24&255]).toLowerCase()}function clamp(e,t,r){return Math.max(t,Math.min(r,e))}function euclideanModulo(e,t){return(e%t+t)%t}function mapLinear(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)}function inverseLerp(e,t,r){return e!==t?(r-e)/(t-e):0}function lerp(e,t,r){return(1-r)*e+r*t}function damp(e,t,r,i){return lerp(e,t,1-Math.exp(-r*i))}function pingpong(e,t=1){return t-Math.abs(euclideanModulo(e,2*t)-t)}function smoothstep(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*(3-2*e)}function smootherstep(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)}function randInt(e,t){return e+Math.floor(Math.random()*(t-e+1))}function randFloat(e,t){return e+Math.random()*(t-e)}function randFloatSpread(e){return e*(.5-Math.random())}function seededRandom(e){void 0!==e&&(_seed=e);e=_seed+=1831565813,e=Math.imul(e^e>>>15,1|e);return(((e^=e+Math.imul(e^e>>>7,61|e))^e>>>14)>>>0)/4294967296}function degToRad(e){return e*DEG2RAD}function radToDeg(e){return e*RAD2DEG}function isPowerOfTwo(e){return 0==(e&e-1)&&0!==e}function ceilPowerOfTwo(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function floorPowerOfTwo(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function setQuaternionFromProperEuler(e,t,r,i,n){var a=Math.cos,s=Math.sin,o=a(r/2),l=s(r/2),h=a((t+i)/2),c=s((t+i)/2),u=a((t-i)/2),d=s((t-i)/2),p=a((i-t)/2),m=s((i-t)/2);switch(n){case"XYX":e.set(o*c,l*u,l*d,o*h);break;case"YZY":e.set(l*d,o*c,l*u,o*h);break;case"ZXZ":e.set(l*u,l*d,o*c,o*h);break;case"XZX":e.set(o*c,l*m,l*p,o*h);break;case"YXY":e.set(l*p,o*c,l*m,o*h);break;case"ZYZ":e.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function denormalize$1(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function normalize(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var MathUtils=Object.freeze({__proto__:null,DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:mapLinear,inverseLerp:inverseLerp,lerp:lerp,damp:damp,pingpong:pingpong,smoothstep:smoothstep,smootherstep:smootherstep,randInt:randInt,randFloat:randFloat,randFloatSpread:randFloatSpread,seededRandom:seededRandom,degToRad:degToRad,radToDeg:radToDeg,isPowerOfTwo:isPowerOfTwo,ceilPowerOfTwo:ceilPowerOfTwo,floorPowerOfTwo:floorPowerOfTwo,setQuaternionFromProperEuler:setQuaternionFromProperEuler,normalize:normalize,denormalize:denormalize$1});class Vector2{constructor(e=0,t=0){Vector2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,r=this.y,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6],this.y=e[1]*t+e[4]*r+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var r=Math.cos(t),t=Math.sin(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*t+e.x,this.y=i*t+n*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Matrix3{constructor(){Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,r,i,n,a,s,o,l){var h=this.elements;return h[0]=e,h[1]=i,h[2]=s,h[3]=t,h[4]=n,h[5]=o,h[6]=r,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,r=this.elements,i=e[0],n=e[3],a=e[6],s=e[1],o=e[4],l=e[7],h=e[2],c=e[5],e=e[8],u=t[0],d=t[3],p=t[6],m=t[1],f=t[4],g=t[7],v=t[2],_=t[5],t=t[8];return r[0]=i*u+n*m+a*v,r[3]=i*d+n*f+a*_,r[6]=i*p+n*g+a*t,r[1]=s*u+o*m+l*v,r[4]=s*d+o*f+l*_,r[7]=s*p+o*g+l*t,r[2]=h*u+c*m+e*v,r[5]=h*d+c*f+e*_,r[8]=h*p+c*g+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-r*n*e+r*s*o+i*n*l-i*a*o}invert(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=h*a-s*l,u=s*o-h*n,d=l*n-a*o,p=t*c+r*u+i*d;return 0==p?this.set(0,0,0,0,0,0,0,0,0):(e[0]=c*(c=1/p),e[1]=(i*l-h*r)*c,e[2]=(s*r-i*a)*c,e[3]=u*c,e[4]=(h*t-i*o)*c,e[5]=(i*n-s*t)*c,e[6]=d*c,e[7]=(r*o-l*t)*c,e[8]=(a*t-r*n)*c,this)}transpose(){var e=this.elements,t=e[1];return e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,i,n,a,s){var o=Math.cos(n),n=Math.sin(n);return this.set(r*o,r*n,-r*(o*a+n*s)+a+e,-i*n,i*o,-i*(-n*a+o*s)+s+t,0,0,1),this}scale(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){var t=Math.cos(e),e=Math.sin(e),r=this.elements,i=r[0],n=r[3],a=r[6],s=r[1],o=r[4],l=r[7];return r[0]=t*i+e*s,r[3]=t*n+e*o,r[6]=t*a+e*l,r[1]=-e*i+t*s,r[4]=-e*n+t*o,r[7]=-e*a+t*l,this}translate(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<9;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function arrayNeedsUint32(t){for(let e=t.length-1;0<=e;--e)if(65535<t[e])return!0;return!1}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(e,t){return new TYPED_ARRAYS[e](t)}function createElementNS(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function SRGBToLinear(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const FN={[SRGBColorSpace]:{[LinearSRGBColorSpace]:SRGBToLinear},[LinearSRGBColorSpace]:{[SRGBColorSpace]:LinearToSRGB}},ColorManagement={legacyMode:!0,get workingColorSpace(){return LinearSRGBColorSpace},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,r){if(this.legacyMode||t===r||!t||!r)return e;if(FN[t]&&void 0!==FN[t][r])return t=FN[t][r],e.r=t(e.r),e.g=t(e.g),e.b=t(e.b),e;throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},_colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_rgb={r:0,g:0,b:0},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(e,t,r){return r<0&&(r+=1),1<r&&--r,r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function toComponents(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class Color{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=SRGBColorSpace){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,ColorManagement.toWorkingColorSpace(this,t),this}setRGB(e,t,r,i=LinearSRGBColorSpace){return this.r=e,this.g=t,this.b=r,ColorManagement.toWorkingColorSpace(this,i),this}setHSL(e,t,r,i=LinearSRGBColorSpace){return e=euclideanModulo(e,1),t=clamp(t,0,1),r=clamp(r,0,1),0===t?this.r=this.g=this.b=r:(this.r=hue2rgb(t=2*r-(r=r<=.5?r*(1+t):r+t-r*t),r,e+1/3),this.g=hue2rgb(t,r,e),this.b=hue2rgb(t,r,e-1/3)),ColorManagement.toWorkingColorSpace(this,i),this}setStyle(t,r=SRGBColorSpace){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}if(h=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var n,a,s,o=h[1],l=h[2];switch(o){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,ColorManagement.toWorkingColorSpace(this,r),i(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,ColorManagement.toWorkingColorSpace(this,r),i(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n=parseFloat(e[1])/360,a=parseInt(e[2],10)/100,s=parseInt(e[3],10)/100,i(e[4]),this.setHSL(n,a,s,r)}}else if(h=/^\#([A-Fa-f\d]+)$/.exec(t)){var o=h[1],h=o.length;if(3===h)return this.r=parseInt(o.charAt(0)+o.charAt(0),16)/255,this.g=parseInt(o.charAt(1)+o.charAt(1),16)/255,this.b=parseInt(o.charAt(2)+o.charAt(2),16)/255,ColorManagement.toWorkingColorSpace(this,r),this;if(6===h)return this.r=parseInt(o.charAt(0)+o.charAt(1),16)/255,this.g=parseInt(o.charAt(2)+o.charAt(3),16)/255,this.b=parseInt(o.charAt(4)+o.charAt(5),16)/255,ColorManagement.toWorkingColorSpace(this,r),this}return t&&0<t.length?this.setColorName(t,r):this}setColorName(e,t=SRGBColorSpace){var r=_colorKeywords[e.toLowerCase()];return void 0!==r?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=SRGBColorSpace){return ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),e),clamp(255*_rgb.r,0,255)<<16^clamp(255*_rgb.g,0,255)<<8^clamp(255*_rgb.b,0,255)<<0}getHexString(e=SRGBColorSpace){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=LinearSRGBColorSpace){ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),t);var r=_rgb.r,i=_rgb.g,n=_rgb.b,t=Math.max(r,i,n),a=Math.min(r,i,n);let s,o;var l=(a+t)/2;if(a===t)s=0,o=0;else{var h=t-a;switch(o=l<=.5?h/(t+a):h/(2-t-a),t){case r:s=(i-n)/h+(i<n?6:0);break;case i:s=(n-r)/h+2;break;case n:s=(r-i)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getRGB(e,t=LinearSRGBColorSpace){return ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),t),e.r=_rgb.r,e.g=_rgb.g,e.b=_rgb.b,e}getStyle(e=SRGBColorSpace){return ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),e),e!==SRGBColorSpace?`color(${e} ${_rgb.r} ${_rgb.g} ${_rgb.b})`:`rgb(${255*_rgb.r|0},${255*_rgb.g|0},${255*_rgb.b|0})`}offsetHSL(e,t,r){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=r,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);var e=lerp(_hslA.h,_hslB.h,t),r=lerp(_hslA.s,_hslB.s,t),t=lerp(_hslA.l,_hslB.l,t);return this.setHSL(e,r,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Color.NAMES=_colorKeywords;let _canvas;class ImageUtils{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;var r;return 2048<(t=e instanceof HTMLCanvasElement?e:((_canvas=void 0===_canvas?createElementNS("canvas"):_canvas).width=e.width,_canvas.height=e.height,r=_canvas.getContext("2d"),e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),_canvas)).width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var t=createElementNS("canvas"),r=(t.width=e.width,t.height=e.height,t.getContext("2d")),i=(r.drawImage(e,0,0,e.width,e.height),r.getImageData(0,0,e.width,e.height)),n=i.data;for(let e=0;e<n.length;e++)n[e]=255*SRGBToLinear(n[e]/255);return r.putImageData(i,0,0),t}if(e.data){var a=e.data.slice(0);for(let e=0;e<a.length;e++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[e]=Math.floor(255*SRGBToLinear(a[e]/255)):a[e]=SRGBToLinear(a[e]);return{data:a,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Source{constructor(e=null){this.isSource=!0,this.uuid=generateUUID(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];var i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let r;if(Array.isArray(n)){r=[];for(let e=0,t=n.length;e<t;e++)n[e].isDataTexture?r.push(serializeImage(n[e].image)):r.push(serializeImage(n[e]))}else r=serializeImage(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function serializeImage(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ImageUtils.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let textureId=0;class Texture extends EventDispatcher{constructor(e=Texture.DEFAULT_IMAGE,t=Texture.DEFAULT_MAPPING,r=ClampToEdgeWrapping,i=ClampToEdgeWrapping,n=LinearFilter,a=LinearMipmapLinearFilter,s=RGBAFormat,o=UnsignedByteType,l=1,h=LinearEncoding){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:textureId++}),this.uuid=generateUUID(),this.name="",this.source=new Source(e),this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=i,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){var t,r=void 0===e||"string"==typeof e;return r||void 0===e.textures[this.uuid]?(t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment},"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),r||(e.textures[this.uuid]=t),t):e.textures[this.uuid]}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping===UVMapping){if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}return e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}Texture.DEFAULT_IMAGE=null,Texture.DEFAULT_MAPPING=UVMapping;class Vector4{constructor(e=0,t=0,r=0,i=1){Vector4.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,r=this.y,i=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*i+e[12]*n,this.y=e[1]*t+e[5]*r+e[9]*i+e[13]*n,this.z=e[2]*t+e[6]*r+e[10]*i+e[14]*n,this.w=e[3]*t+e[7]*r+e[11]*i+e[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(t){let e,r,i,n;var a,s,o,l,h,c,t=t.elements,u=t[0],d=t[4],p=t[8],m=t[1],f=t[5],g=t[9],v=t[2],_=t[6],t=t[10];if(Math.abs(d-m)<.01&&Math.abs(p-v)<.01&&Math.abs(g-_)<.01)Math.abs(d+m)<.1&&Math.abs(p+v)<.1&&Math.abs(g+_)<.1&&Math.abs(u+f+t-3)<.1?this.set(1,0,0,0):(e=Math.PI,o=(t+1)/2,l=(d+m)/4,h=(p+v)/4,c=(g+_)/4,(s=(f+1)/2)<(a=(u+1)/2)&&o<a?n=a<.01?(r=0,i=.707106781):(r=Math.sqrt(a),i=l/r,h/r):o<s?n=s<.01?(r=.707106781,i=0,.707106781):(i=Math.sqrt(s),r=l/i,c/i):o<.01?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(o),r=h/n,i=c/n),this.set(r,i,n,e));else{let e=Math.sqrt((_-g)*(_-g)+(p-v)*(p-v)+(m-d)*(m-d));Math.abs(e)<.001&&(e=1),this.x=(_-g)/e,this.y=(p-v)/e,this.z=(m-d)/e,this.w=Math.acos((u+f+t-1)/2)}return this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class WebGLRenderTarget extends EventDispatcher{constructor(e,t,r={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t);e={width:e,height:t,depth:1};this.texture=new Texture(e,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.internalFormat=void 0!==r.internalFormat?r.internalFormat:null,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:LinearFilter,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null,this.samples=void 0!==r.samples?r.samples:0}setSize(e,t,r=1){this.width===e&&this.height===t&&this.depth===r||(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;var t=Object.assign({},e.texture.image);return this.texture.source=new Source(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class DataArrayTexture extends Texture{constructor(e=null,t=1,r=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:i},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WebGLArrayRenderTarget extends WebGLRenderTarget{constructor(e,t,r){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=r,this.texture=new DataArrayTexture(null,e,t,r),this.texture.isRenderTargetTexture=!0}}class Data3DTexture extends Texture{constructor(e=null,t=1,r=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:i},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WebGL3DRenderTarget extends WebGLRenderTarget{constructor(e,t,r){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=r,this.texture=new Data3DTexture(null,e,t,r),this.texture.isRenderTargetTexture=!0}}class WebGLMultipleRenderTargets extends WebGLRenderTarget{constructor(e,t,r,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;var n=this.texture;this.texture=[];for(let e=0;e<r;e++)this.texture[e]=n.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(r,i,n=1){if(this.width!==r||this.height!==i||this.depth!==n){this.width=r,this.height=i,this.depth=n;for(let e=0,t=this.texture.length;e<t;e++)this.texture[e].image.width=r,this.texture[e].image.height=i,this.texture[e].image.depth=n;this.dispose()}return this.viewport.set(0,0,r,i),this.scissor.set(0,0,r,i),this}copy(r){this.dispose(),this.width=r.width,this.height=r.height,this.depth=r.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,null!==r.depthTexture&&(this.depthTexture=r.depthTexture.clone());for(let e=this.texture.length=0,t=r.texture.length;e<t;e++)this.texture[e]=r.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}}class Quaternion{constructor(e=0,t=0,r=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=i}static slerpFlat(e,t,r,i,n,a,s){let o=r[i+0],l=r[i+1],h=r[i+2],c=r[i+3];var r=n[a+0],i=n[a+1],u=n[a+2],n=n[a+3];if(0===s)e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c;else if(1===s)e[t+0]=r,e[t+1]=i,e[t+2]=u,e[t+3]=n;else{if(c!==n||o!==r||l!==i||h!==u){let e=1-s;var a=o*r+l*i+h*u+c*n,d=0<=a?1:-1,p=1-a*a,a=(p>Number.EPSILON&&(p=Math.sqrt(p),a=Math.atan2(p,a*d),e=Math.sin(e*a)/p,s=Math.sin(s*a)/p),s*d);o=o*e+r*a,l=l*e+i*a,h=h*e+u*a,c=c*e+n*a,e===1-s&&(p=1/Math.sqrt(o*o+l*l+h*h+c*c),o*=p,l*=p,h*=p,c*=p)}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}}static multiplyQuaternionsFlat(e,t,r,i,n,a){var s=r[i],o=r[i+1],l=r[i+2],r=r[i+3],i=n[a],h=n[a+1],c=n[a+2],n=n[a+3];return e[t]=s*n+r*i+o*c-l*h,e[t+1]=o*n+r*h+l*i-s*c,e[t+2]=l*n+r*c+s*h-o*i,e[t+3]=r*n-s*i-o*h-l*c,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,i=e._y,n=e._z,a=e._order,e=Math.cos,s=Math.sin,o=e(r/2),l=e(i/2),h=e(n/2),c=s(r/2),u=s(i/2),d=s(n/2);switch(a){case"XYZ":this._x=c*l*h+o*u*d,this._y=o*u*h-c*l*d,this._z=o*l*d+c*u*h,this._w=o*l*h-c*u*d;break;case"YXZ":this._x=c*l*h+o*u*d,this._y=o*u*h-c*l*d,this._z=o*l*d-c*u*h,this._w=o*l*h+c*u*d;break;case"ZXY":this._x=c*l*h-o*u*d,this._y=o*u*h+c*l*d,this._z=o*l*d+c*u*h,this._w=o*l*h-c*u*d;break;case"ZYX":this._x=c*l*h-o*u*d,this._y=o*u*h+c*l*d,this._z=o*l*d-c*u*h,this._w=o*l*h+c*u*d;break;case"YZX":this._x=c*l*h+o*u*d,this._y=o*u*h+c*l*d,this._z=o*l*d-c*u*h,this._w=o*l*h-c*u*d;break;case"XZY":this._x=c*l*h-o*u*d,this._y=o*u*h-c*l*d,this._z=o*l*d+c*u*h,this._w=o*l*h+c*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var t=t/2,r=Math.sin(t);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(t),this._onChangeCallback(),this}setFromRotationMatrix(e){var e=e.elements,t=e[0],r=e[4],i=e[8],n=e[1],a=e[5],s=e[9],o=e[2],l=e[6],e=e[10],h=t+a+e;return 0<h?(h=.5/Math.sqrt(h+1),this._w=.25/h,this._x=(l-s)*h,this._y=(i-o)*h,this._z=(n-r)*h):a<t&&e<t?(h=2*Math.sqrt(1+t-a-e),this._w=(l-s)/h,this._x=.25*h,this._y=(r+n)/h,this._z=(i+o)/h):e<a?(h=2*Math.sqrt(1+a-t-e),this._w=(i-o)/h,this._x=(r+n)/h,this._y=.25*h,this._z=(s+l)/h):(h=2*Math.sqrt(1+e-t-a),this._w=(n-r)/h,this._x=(i+o)/h,this._y=(s+l)/h,this._z=.25*h),this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(clamp(this.dot(e),-1,1)))}rotateTowards(e,t){var r=this.angleTo(e);return 0!==r&&(t=Math.min(1,t/r),this.slerp(e,t)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var r=e._x,i=e._y,n=e._z,e=e._w,a=t._x,s=t._y,o=t._z,t=t._w;return this._x=r*t+e*a+i*o-n*s,this._y=i*t+e*s+n*a-r*o,this._z=n*t+e*o+r*s-i*a,this._w=e*t-r*a-i*s-n*o,this._onChangeCallback(),this}slerp(t,r){if(0!==r){if(1===r)return this.copy(t);var i,n,a=this._x,s=this._y,o=this._z,l=this._w;let e=l*t._w+a*t._x+s*t._y+o*t._z;e<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,e=-e):this.copy(t),1<=e?(this._w=l,this._x=a,this._y=s,this._z=o):((t=1-e*e)<=Number.EPSILON?(this._w=(i=1-r)*l+r*this._w,this._x=i*a+r*this._x,this._y=i*s+r*this._y,this._z=i*o+r*this._z,this.normalize()):(i=Math.sqrt(t),t=Math.atan2(i,e),n=Math.sin((1-r)*t)/i,r=Math.sin(r*t)/i,this._w=l*n+this._w*r,this._x=a*n+this._x*r,this._y=s*n+this._y*r,this._z=o*n+this._z*r),this._onChangeCallback())}return this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){var e=Math.random(),t=Math.sqrt(1-e),e=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),e*Math.sin(i),e*Math.cos(i),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3{constructor(e=0,t=0,r=0){Vector3.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(_quaternion$4.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,r=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6]*i,this.y=e[1]*t+e[4]*r+e[7]*i,this.z=e[2]*t+e[5]*r+e[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,r=this.y,i=this.z,e=e.elements,n=1/(e[3]*t+e[7]*r+e[11]*i+e[15]);return this.x=(e[0]*t+e[4]*r+e[8]*i+e[12])*n,this.y=(e[1]*t+e[5]*r+e[9]*i+e[13])*n,this.z=(e[2]*t+e[6]*r+e[10]*i+e[14])*n,this}applyQuaternion(e){var t=this.x,r=this.y,i=this.z,n=e.x,a=e.y,s=e.z,e=e.w,o=e*t+a*i-s*r,l=e*r+s*t-n*i,h=e*i+n*r-a*t,t=-n*t-a*r-s*i;return this.x=o*e+t*-n+l*-s-h*-a,this.y=l*e+t*-a+h*-n-o*-s,this.z=h*e+t*-s+o*-a-l*-n,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,r=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*i,this.y=e[1]*t+e[5]*r+e[9]*i,this.z=e[2]*t+e[6]*r+e[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){var r=e.x,i=e.y,e=e.z,n=t.x,a=t.y,t=t.z;return this.x=i*t-e*a,this.y=e*n-r*t,this.z=r*a-i*n,this}projectOnVector(e){var t=e.lengthSq();return 0===t?this.set(0,0,0):(t=e.dot(this)/t,this.copy(e).multiplyScalar(t))}projectOnPlane(e){return _vector$c.copy(this).projectOnVector(e),this.sub(_vector$c)}reflect(e){return this.sub(_vector$c.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:(e=this.dot(e)/t,Math.acos(clamp(e,-1,1)))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y,e=this.z-e.z;return t*t+r*r+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){var i=Math.sin(t)*e;return this.x=i*Math.sin(r),this.y=Math.cos(t)*e,this.z=i*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _vector$c=new Vector3,_quaternion$4=new Quaternion;class Box3{constructor(e=new Vector3(1/0,1/0,1/0),t=new Vector3(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(r){let i=1/0,n=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.length;e<t;e+=3){var h=r[e],c=r[e+1],u=r[e+2];h<i&&(i=h),c<n&&(n=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(i,n,a),this.max.set(s,o,l),this}setFromBufferAttribute(r){let i=1/0,n=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.count;e<t;e++){var h=r.getX(e),c=r.getY(e),u=r.getZ(e);h<i&&(i=h),c<n&&(n=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(i,n,a),this.max.set(s,o,l),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=_vector$b.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(r,i=!1){r.updateWorldMatrix(!1,!1);var e=r.geometry;if(void 0!==e)if(i&&null!=e.attributes&&void 0!==e.attributes.position){var n=e.attributes.position;for(let e=0,t=n.count;e<t;e++)_vector$b.fromBufferAttribute(n,e).applyMatrix4(r.matrixWorld),this.expandByPoint(_vector$b)}else null===e.boundingBox&&e.computeBoundingBox(),_box$3.copy(e.boundingBox),_box$3.applyMatrix4(r.matrixWorld),this.union(_box$3);var a=r.children;for(let e=0,t=a.length;e<t;e++)this.expandByObject(a[e],i);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_vector$b),_vector$b.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return r=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(_center),_extents.subVectors(this.max,_center),_v0$2.subVectors(e.a,_center),_v1$7.subVectors(e.b,_center),_v2$3.subVectors(e.c,_center),_f0.subVectors(_v1$7,_v0$2),_f1.subVectors(_v2$3,_v1$7),_f2.subVectors(_v0$2,_v2$3),!!satForAxes([0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0],_v0$2,_v1$7,_v2$3,_extents))&&!!satForAxes([1,0,0,0,1,0,0,0,1],_v0$2,_v1$7,_v2$3,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),satForAxes([_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],_v0$2,_v1$7,_v2$3,_extents))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$b.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(_vector$b).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$b=new Vector3,_box$3=new Box3,_v0$2=new Vector3,_v1$7=new Vector3,_v2$3=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function satForAxes(r,i,n,a,s){for(let e=0,t=r.length-3;e<=t;e+=3){_testAxis.fromArray(r,e);var o=s.x*Math.abs(_testAxis.x)+s.y*Math.abs(_testAxis.y)+s.z*Math.abs(_testAxis.z),l=i.dot(_testAxis),h=n.dot(_testAxis),c=a.dot(_testAxis);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const _box$2=new Box3,_v1$6=new Vector3,_toFarthestPoint=new Vector3,_toPoint=new Vector3;class Sphere{constructor(e=new Vector3,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(r,e){var i=this.center;void 0!==e?i.copy(e):_box$2.setFromPoints(r).getCenter(i);let n=0;for(let e=0,t=r.length;e<t;e++)n=Math.max(n,i.distanceToSquared(r[e]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){_toPoint.subVectors(e,this.center);var t,e=_toPoint.lengthSq();return e>this.radius*this.radius&&(t=.5*((e=Math.sqrt(e))-this.radius),this.center.add(_toPoint.multiplyScalar(t/e)),this.radius+=t),this}union(e){return(!0===this.center.equals(e.center)?_toFarthestPoint.set(0,0,1):_toFarthestPoint.subVectors(e.center,this.center).normalize()).multiplyScalar(e.radius),this.expandByPoint(_v1$6.copy(e.center).add(_toFarthestPoint)),this.expandByPoint(_v1$6.copy(e.center).sub(_toFarthestPoint)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _vector$a=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal$1=new Vector3;class Ray{constructor(e=new Vector3,t=new Vector3(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$a)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=_vector$a.subVectors(e,this.origin).dot(this.direction);return(t<0?this.origin:(_vector$a.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$a)).distanceToSquared(e)}distanceSqToSegment(e,t,r,i){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);var e=.5*e.distanceTo(t),t=-this.direction.dot(_segDir),n=_diff.dot(this.direction),a=-_diff.dot(_segDir),s=_diff.lengthSq(),o=Math.abs(1-t*t);let l,h,c,u;return c=0<o?(l=t*a-n,h=t*n-a,u=e*o,0<=l?h>=-u?h<=u?(o=1/o,l*=o,h*=o,l*(l+t*h+2*n)+h*(t*l+h+2*a)+s):(h=e,-(l=Math.max(0,-(t*h+n)))*l+h*(h+2*a)+s):(h=-e,-(l=Math.max(0,-(t*h+n)))*l+h*(h+2*a)+s):h<=-u?(l=Math.max(0,-(-t*e+n)),h=0<l?-e:Math.min(Math.max(-e,-a),e),-l*l+h*(h+2*a)+s):h<=u?(l=0,(h=Math.min(Math.max(-e,-a),e))*(h+2*a)+s):(l=Math.max(0,-(t*e+n)),h=0<l?e:Math.min(Math.max(-e,-a),e),-l*l+h*(h+2*a)+s)):(h=0<t?-e:e,-(l=Math.max(0,-(t*h+n)))*l+h*(h+2*a)+s),r&&r.copy(this.direction).multiplyScalar(l).add(this.origin),i&&i.copy(_segDir).multiplyScalar(h).add(_segCenter),c}intersectSphere(e,t){_vector$a.subVectors(e.center,this.origin);var r=_vector$a.dot(this.direction),i=_vector$a.dot(_vector$a)-r*r,e=e.radius*e.radius;return e<i||(i=r+(e=Math.sqrt(e-i)),(r=r-e)<0&&i<0)?null:r<0?this.at(i,t):this.at(r,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:0<=(e=-(this.origin.dot(e.normal)+e.constant)/t)?e:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,i,n,a,s,o;var l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return i=0<=l?(r=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(r=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=h?(n=(e.min.y-u.y)*h,(e.max.y-u.y)*h):(n=(e.max.y-u.y)*h,(e.min.y-u.y)*h),r>a||n>i||((n>r||r!=r)&&(r=n),(a<i||i!=i)&&(i=a),o=0<=c?(s=(e.min.z-u.z)*c,(e.max.z-u.z)*c):(s=(e.max.z-u.z)*c,(e.min.z-u.z)*c),r>o)||s>i||((s>r||r!=r)&&(r=s),(i=o<i||i!=i?o:i)<0)?null:this.at(0<=r?r:i,t)}intersectsBox(e){return null!==this.intersectBox(e,_vector$a)}intersectTriangle(e,t,r,i,n){_edge1.subVectors(t,e),_edge2.subVectors(r,e),_normal$1.crossVectors(_edge1,_edge2);let a=this.direction.dot(_normal$1),s;if(0<a){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}_diff.subVectors(this.origin,e);t=s*this.direction.dot(_edge2.crossVectors(_diff,_edge2));return t<0||(r=s*this.direction.dot(_edge1.cross(_diff)))<0||t+r>a||(i=-s*_diff.dot(_normal$1))<0?null:this.at(i/a,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Matrix4{constructor(){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,r,i,n,a,s,o,l,h,c,u,d,p,m,f){var g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=i,g[1]=n,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){var t=this.elements,r=e.elements,i=1/_v1$5.setFromMatrixColumn(e,0).length(),n=1/_v1$5.setFromMatrixColumn(e,1).length(),e=1/_v1$5.setFromMatrixColumn(e,2).length();return t[0]=r[0]*i,t[1]=r[1]*i,t[2]=r[2]*i,t[3]=0,t[4]=r[4]*n,t[5]=r[5]*n,t[6]=r[6]*n,t[7]=0,t[8]=r[8]*e,t[9]=r[9]*e,t[10]=r[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){var t,r,i,n,a=this.elements,s=e.x,o=e.y,l=e.z,h=Math.cos(s),s=Math.sin(s),c=Math.cos(o),o=Math.sin(o),u=Math.cos(l),l=Math.sin(l);return"XYZ"===e.order?(r=h*u,i=h*l,n=s*u,t=s*l,a[0]=c*u,a[4]=-c*l,a[8]=o,a[1]=i+n*o,a[5]=r-t*o,a[9]=-s*c,a[2]=t-r*o,a[6]=n+i*o,a[10]=h*c):"YXZ"===e.order?(t=c*l,r=o*u,a[0]=(n=c*u)+(i=o*l)*s,a[4]=r*s-t,a[8]=h*o,a[1]=h*l,a[5]=h*u,a[9]=-s,a[2]=t*s-r,a[6]=i+n*s,a[10]=h*c):"ZXY"===e.order?(t=c*l,r=o*u,a[0]=(i=c*u)-(n=o*l)*s,a[4]=-h*l,a[8]=r+t*s,a[1]=t+r*s,a[5]=h*u,a[9]=n-i*s,a[2]=-h*o,a[6]=s,a[10]=h*c):"ZYX"===e.order?(t=h*u,r=h*l,n=s*u,i=s*l,a[0]=c*u,a[4]=n*o-r,a[8]=t*o+i,a[1]=c*l,a[5]=i*o+t,a[9]=r*o-n,a[2]=-o,a[6]=s*c,a[10]=h*c):"YZX"===e.order?(i=h*c,t=h*o,r=s*c,n=s*o,a[0]=c*u,a[4]=n-i*l,a[8]=r*l+t,a[1]=l,a[5]=h*u,a[9]=-s*u,a[2]=-o*u,a[6]=t*l+r,a[10]=i-n*l):"XZY"===e.order&&(t=h*c,r=h*o,i=s*c,n=s*o,a[0]=c*u,a[4]=-l,a[8]=o*u,a[1]=t*l+n,a[5]=h*u,a[9]=r*l-i,a[2]=i*l-r,a[6]=s*u,a[10]=n*l+t),a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,r){var i=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(r,_z),0===_x.lengthSq()&&(1===Math.abs(r.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(r,_z)),_x.normalize(),_y.crossVectors(_z,_x),i[0]=_x.x,i[4]=_y.x,i[8]=_z.x,i[1]=_x.y,i[5]=_y.y,i[9]=_z.y,i[2]=_x.z,i[6]=_y.z,i[10]=_z.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,r=this.elements,i=e[0],n=e[4],a=e[8],s=e[12],o=e[1],l=e[5],h=e[9],c=e[13],u=e[2],d=e[6],p=e[10],m=e[14],f=e[3],g=e[7],v=e[11],e=e[15],_=t[0],y=t[4],x=t[8],M=t[12],b=t[1],S=t[5],w=t[9],T=t[13],A=t[2],C=t[6],E=t[10],L=t[14],R=t[3],P=t[7],D=t[11],t=t[15];return r[0]=i*_+n*b+a*A+s*R,r[4]=i*y+n*S+a*C+s*P,r[8]=i*x+n*w+a*E+s*D,r[12]=i*M+n*T+a*L+s*t,r[1]=o*_+l*b+h*A+c*R,r[5]=o*y+l*S+h*C+c*P,r[9]=o*x+l*w+h*E+c*D,r[13]=o*M+l*T+h*L+c*t,r[2]=u*_+d*b+p*A+m*R,r[6]=u*y+d*S+p*C+m*P,r[10]=u*x+d*w+p*E+m*D,r[14]=u*M+d*T+p*L+m*t,r[3]=f*_+g*b+v*A+e*R,r[7]=f*y+g*S+v*C+e*P,r[11]=f*x+g*w+v*E+e*D,r[15]=f*M+g*T+v*L+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+n*o*c-i*l*c-n*s*u+r*l*u+i*s*d-r*o*d)+e[7]*(+t*o*d-t*l*u+n*a*u-i*a*d+i*l*h-n*o*h)+e[11]*(+t*l*c-t*s*d-n*a*c+r*a*d+n*s*h-r*l*h)+e[15]*(-i*s*h-t*o*c+t*s*u+i*a*c-r*a*u+r*o*h)}transpose(){var e=this.elements,t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){var i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=r),this}invert(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=c*f*l-m*u*l+m*o*d-s*f*d-c*o*g+s*u*g,_=p*u*l-h*f*l-p*o*d+a*f*d+h*o*g-a*u*g,y=h*m*l-p*c*l+p*s*d-a*m*d-h*s*g+a*c*g,x=p*c*o-h*m*o-p*s*u+a*m*u+h*s*f-a*c*f,M=t*v+r*_+i*y+n*x;return 0==M?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(e[0]=v*(v=1/M),e[1]=(m*u*n-c*f*n-m*i*d+r*f*d+c*i*g-r*u*g)*v,e[2]=(s*f*n-m*o*n+m*i*l-r*f*l-s*i*g+r*o*g)*v,e[3]=(c*o*n-s*u*n-c*i*l+r*u*l+s*i*d-r*o*d)*v,e[4]=_*v,e[5]=(h*f*n-p*u*n+p*i*d-t*f*d-h*i*g+t*u*g)*v,e[6]=(p*o*n-a*f*n-p*i*l+t*f*l+a*i*g-t*o*g)*v,e[7]=(a*u*n-h*o*n+h*i*l-t*u*l-a*i*d+t*o*d)*v,e[8]=y*v,e[9]=(p*c*n-h*m*n-p*r*d+t*m*d+h*r*g-t*c*g)*v,e[10]=(a*m*n-p*s*n+p*r*l-t*m*l-a*r*g+t*s*g)*v,e[11]=(h*s*n-a*c*n-h*r*l+t*c*l+a*r*d-t*s*d)*v,e[12]=x*v,e[13]=(h*m*i-p*c*i+p*r*u-t*m*u-h*r*f+t*c*f)*v,e[14]=(p*s*i-a*m*i-p*r*o+t*m*o+a*r*f-t*s*f)*v,e[15]=(a*c*i-h*s*i+h*r*o-t*c*o-a*r*u+t*s*u)*v,this)}scale(e){var t=this.elements,r=e.x,i=e.y,e=e.z;return t[0]*=r,t[4]*=i,t[8]*=e,t[1]*=r,t[5]*=i,t[9]*=e,t[2]*=r,t[6]*=i,t[10]*=e,t[3]*=r,t[7]*=i,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];return Math.sqrt(Math.max(t,e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var r=Math.cos(t),t=Math.sin(t),i=1-r,n=e.x,a=e.y,e=e.z,s=i*n,o=i*a;return this.set(s*n+r,s*a-t*e,s*e+t*a,0,s*a+t*e,o*a+r,o*e-t*n,0,s*e-t*a,o*e+t*n,i*e*e+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,i,n,a){return this.set(1,r,n,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,r){var i=this.elements,n=t._x,a=t._y,s=t._z,t=t._w,o=n+n,l=a+a,h=s+s,c=n*o,u=n*l,n=n*h,d=a*l,a=a*h,s=s*h,o=t*o,l=t*l,t=t*h,h=r.x,p=r.y,r=r.z;return i[0]=(1-(d+s))*h,i[1]=(u+t)*h,i[2]=(n-l)*h,i[3]=0,i[4]=(u-t)*p,i[5]=(1-(c+s))*p,i[6]=(a+o)*p,i[7]=0,i[8]=(n+l)*r,i[9]=(a-o)*r,i[10]=(1-(c+d))*r,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,r){var i=this.elements;let n=_v1$5.set(i[0],i[1],i[2]).length();var a=_v1$5.set(i[4],i[5],i[6]).length(),s=_v1$5.set(i[8],i[9],i[10]).length(),e=(this.determinant()<0&&(n=-n),e.x=i[12],e.y=i[13],e.z=i[14],_m1$2.copy(this),1/n),i=1/a,o=1/s;return _m1$2.elements[0]*=e,_m1$2.elements[1]*=e,_m1$2.elements[2]*=e,_m1$2.elements[4]*=i,_m1$2.elements[5]*=i,_m1$2.elements[6]*=i,_m1$2.elements[8]*=o,_m1$2.elements[9]*=o,_m1$2.elements[10]*=o,t.setFromRotationMatrix(_m1$2),r.x=n,r.y=a,r.z=s,this}makePerspective(e,t,r,i,n,a){var s=this.elements,o=2*n/(r-i),l=(t+e)/(t-e),r=(r+i)/(r-i),i=-(a+n)/(a-n),a=-2*a*n/(a-n);return s[0]=2*n/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=r,s[13]=0,s[2]=0,s[6]=0,s[10]=i,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,r,i,n,a){var s=this.elements,o=1/(t-e),l=1/(r-i),h=1/(a-n),t=(t+e)*o,e=(r+i)*l,r=(a+n)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-t,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-e,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-r,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<16;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const _v1$5=new Vector3,_m1$2=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix$1=new Matrix4,_quaternion$3=new Quaternion;class Euler{constructor(e=0,t=0,r=0,i=Euler.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,i=this._order){return this._x=e,this._y=t,this._z=r,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){var e=e.elements,i=e[0],n=e[4],a=e[8],s=e[1],o=e[5],l=e[9],h=e[2],c=e[6],u=e[10];switch(t){case"XYZ":this._y=Math.asin(clamp(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-n,i)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-clamp(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(clamp(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-clamp(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(c,u),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(clamp(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-clamp(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return _matrix$1.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix$1,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _quaternion$3.setFromEuler(this),this.setFromQuaternion(_quaternion$3,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Euler.DefaultOrder="XYZ",Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Layers{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let _object3DId=0;const _v1$4=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};class Object3D extends EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();var e=new Vector3;const t=new Euler,r=new Quaternion;var i=new Vector3(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this}rotateOnWorldAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this}rotateX(e){return this.rotateOnAxis(_xAxis,e)}rotateY(e){return this.rotateOnAxis(_yAxis,e)}rotateZ(e){return this.rotateOnAxis(_zAxis,e)}translateOnAxis(e,t){return _v1$4.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$4.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_xAxis,e)}translateY(e){return this.translateOnAxis(_yAxis,e)}translateZ(e){return this.translateOnAxis(_zAxis,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_m1$1.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?_target.copy(e):_target.set(e,t,r);e=this.parent;this.updateWorldMatrix(!0,!1),_position$3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position$3,_target,this.up):_m1$1.lookAt(_target,_position$3,this.up),this.quaternion.setFromRotationMatrix(_m1$1),e&&(_m1$1.extractRotation(e.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.invert()))}add(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.add(arguments[e]);else e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e);return this}remove(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);else{var t=this.children.indexOf(e);-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent))}return this}removeFromParent(){var e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(_removedEvent)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_m1$1.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(r,i){if(this[r]===i)return this;for(let e=0,t=this.children.length;e<t;e++){var n=this.children[e].getObjectByProperty(r,i);if(void 0!==n)return n}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,e,_scale$2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,_quaternion$2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(r){r(this);var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverse(r)}traverseVisible(r){if(!1!==this.visible){r(this);var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverseVisible(r)}}traverseAncestors(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(r){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||r)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),r=!(this.matrixWorldNeedsUpdate=!1));var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(r)}updateWorldMatrix(e,t){var r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateWorldMatrix(!1,!0)}}toJSON(r){var e,t,i,n,a,s,o=void 0===r||"string"==typeof r,l={},h=(o&&(r={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},l.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function c(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(r)),t.uuid}if(h.uuid=this.uuid,h.type=this.type,""!==this.name&&(h.name=this.name),!0===this.castShadow&&(h.castShadow=!0),!0===this.receiveShadow&&(h.receiveShadow=!0),!1===this.visible&&(h.visible=!1),!1===this.frustumCulled&&(h.frustumCulled=!1),0!==this.renderOrder&&(h.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(h.userData=this.userData),h.layers=this.layers.mask,h.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(h.matrixAutoUpdate=!1),this.isInstancedMesh&&(h.type="InstancedMesh",h.count=this.count,h.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor)&&(h.instanceColor=this.instanceColor.toJSON()),this.isScene)this.background&&(this.background.isColor?h.background=this.background.toJSON():this.background.isTexture&&(h.background=this.background.toJSON(r).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(h.environment=this.environment.toJSON(r).uuid);else if(this.isMesh||this.isLine||this.isPoints){h.geometry=c(r.geometries,this.geometry);var u=this.geometry.parameters;if(void 0!==u&&void 0!==u.shapes){var d=u.shapes;if(Array.isArray(d))for(let e=0,t=d.length;e<t;e++){var p=d[e];c(r.shapes,p)}else c(r.shapes,d)}}if(this.isSkinnedMesh&&(h.bindMode=this.bindMode,h.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton)&&(c(r.skeletons,this.skeleton),h.skeleton=this.skeleton.uuid),void 0!==this.material)if(Array.isArray(this.material)){var m=[];for(let e=0,t=this.material.length;e<t;e++)m.push(c(r.materials,this.material[e]));h.material=m}else h.material=c(r.materials,this.material);if(0<this.children.length){h.children=[];for(let e=0;e<this.children.length;e++)h.children.push(this.children[e].toJSON(r).object)}if(0<this.animations.length){h.animations=[];for(let e=0;e<this.animations.length;e++){var f=this.animations[e];h.animations.push(c(r.animations,f))}}return o&&(u=g(r.geometries),o=g(r.materials),e=g(r.textures),t=g(r.images),i=g(r.shapes),n=g(r.skeletons),a=g(r.animations),s=g(r.nodes),0<u.length&&(l.geometries=u),0<o.length&&(l.materials=o),0<e.length&&(l.textures=e),0<t.length&&(l.images=t),0<i.length&&(l.shapes=i),0<n.length&&(l.skeletons=n),0<a.length&&(l.animations=a),0<s.length)&&(l.nodes=s),l.object=h,l;function g(e){var t=[];for(const i in e){var r=e[i];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){var r=t.children[e];this.add(r.clone())}return this}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0;const _v0$1=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$1=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;class Triangle{constructor(e=new Vector3,t=new Vector3,r=new Vector3){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,i){i.subVectors(r,t),_v0$1.subVectors(e,t),i.cross(_v0$1);r=i.lengthSq();return 0<r?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,r,i,n){_v0$1.subVectors(i,t),_v1$3.subVectors(r,t),_v2$2.subVectors(e,t);var i=_v0$1.dot(_v0$1),r=_v0$1.dot(_v1$3),e=_v0$1.dot(_v2$2),t=_v1$3.dot(_v1$3),a=_v1$3.dot(_v2$2),s=i*t-r*r;return 0==s?n.set(-2,-1,-1):n.set(1-(t=(t*e-r*a)*(n=1/s))-(s=(i*a-r*e)*n),s,t)}static containsPoint(e,t,r,i){return this.getBarycoord(e,t,r,i,_v3$1),0<=_v3$1.x&&0<=_v3$1.y&&_v3$1.x+_v3$1.y<=1}static getUV(e,t,r,i,n,a,s,o){return this.getBarycoord(e,t,r,i,_v3$1),o.set(0,0),o.addScaledVector(n,_v3$1.x),o.addScaledVector(a,_v3$1.y),o.addScaledVector(s,_v3$1.z),o}static isFrontFacing(e,t,r,i){return _v0$1.subVectors(r,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(i)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,r,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,i,n){return Triangle.getUV(e,this.a,this.b,this.c,t,r,i,n)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){var r=this.a,i=this.b,n=this.c;let a,s;_vab.subVectors(i,r),_vac.subVectors(n,r),_vap.subVectors(e,r);var o=_vab.dot(_vap),l=_vac.dot(_vap);if(o<=0&&l<=0)return t.copy(r);_vbp.subVectors(e,i);var h=_vab.dot(_vbp),c=_vac.dot(_vbp);if(0<=h&&c<=h)return t.copy(i);var u=o*c-h*l;if(u<=0&&0<=o&&h<=0)return a=o/(o-h),t.copy(r).addScaledVector(_vab,a);_vcp.subVectors(e,n);var e=_vab.dot(_vcp),d=_vac.dot(_vcp);return 0<=d&&e<=d?t.copy(n):(o=e*l-o*d)<=0&&0<=l&&d<=0?(s=l/(l-d),t.copy(r).addScaledVector(_vac,s)):(l=h*d-e*c)<=0&&0<=c-h&&0<=e-d?(_vbc.subVectors(n,i),s=(c-h)/(c-h+(e-d)),t.copy(i).addScaledVector(_vbc,s)):(n=1/(l+o+u),a=o*n,s=u*n,t.copy(r).addScaledVector(_vab,a).addScaledVector(_vac,s))}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let materialId=0;class Material extends EventDispatcher{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:materialId++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.blending=NormalBlending,this.side=FrontSide,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){0<this._alphaTest!=0<e&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const i in e){var t,r=e[i];void 0===r?console.warn("THREE.Material: '"+i+"' parameter is undefined."):"shading"===i?(console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===FlatShading):void 0===(t=this[i])?console.warn("THREE."+this.type+": '"+i+"' is not a property of this material."):t&&t.isColor?t.set(r):t&&t.isVector3&&r&&r.isVector3?t.copy(r):this[i]=r}}toJSON(e){var t=void 0===e||"string"==typeof e,r=(t&&(e={textures:{},images:{}}),{metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}});function i(e){var t=[];for(const i in e){var r=e[i];delete r.metadata,t.push(r)}return t}return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),void 0!==this.sheen&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(r.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(r.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine)&&(r.combine=this.combine),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(r.blending=this.blending),this.side!==FrontSide&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),!1===this.fog&&(r.fog=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t&&(t=i(e.textures),e=i(e.images),0<t.length&&(r.textures=t),0<e.length)&&(r.images=e),r}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes;let r=null;if(null!==t){var i=t.length;r=new Array(i);for(let e=0;e!==i;++e)r[e]=t[e].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class MeshBasicMaterial extends Material{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const _vector$9=new Vector3,_vector2$1=new Vector2;class BufferAttribute{constructor(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(r,i,n){r*=this.itemSize,n*=i.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[r+e]=i.array[n+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new Color),i[n++]=e.r,i[n++]=e.g,i[n++]=e.b}return this}copyVector2sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Vector2),i[n++]=e.x,i[n++]=e.y}return this}copyVector3sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new Vector3),i[n++]=e.x,i[n++]=e.y,i[n++]=e.z}return this}copyVector4sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Vector4),i[n++]=e.x,i[n++]=e.y,i[n++]=e.z,i[n++]=e.w}return this}applyMatrix3(r){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)_vector2$1.fromBufferAttribute(this,e),_vector2$1.applyMatrix3(r),this.setXY(e,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)_vector$9.fromBufferAttribute(this,e),_vector$9.applyMatrix3(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyMatrix4(r){for(let e=0,t=this.count;e<t;e++)_vector$9.fromBufferAttribute(this,e),_vector$9.applyMatrix4(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)_vector$9.fromBufferAttribute(this,e),_vector$9.applyNormalMatrix(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)_vector$9.fromBufferAttribute(this,e),_vector$9.transformDirection(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this}setXYZW(e,t,r,i,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==StaticDrawUsage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}class Int8BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int8Array(e),t,r)}}class Uint8BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint8Array(e),t,r)}}class Uint8ClampedBufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint8ClampedArray(e),t,r)}}class Int16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int16Array(e),t,r)}}class Uint16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Int32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int32Array(e),t,r)}}class Uint32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Float16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint16Array(e),t,r),this.isFloat16BufferAttribute=!0}}class Float32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Float32Array(e),t,r)}}class Float64BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Float64Array(e),t,r)}}let _id$1=0;const _m1=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$1=new Box3,_boxMorphTargets=new Box3,_vector$8=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_id$1++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(arrayNeedsUint32(e)?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){var t=this.attributes.position,t=(void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0),this.attributes.normal),r=(void 0!==t&&(r=(new Matrix3).getNormalMatrix(e),t.applyNormalMatrix(r),t.needsUpdate=!0),this.attributes.tangent);return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return _m1.makeRotationFromQuaternion(e),this.applyMatrix4(_m1),this}rotateX(e){return _m1.makeRotationX(e),this.applyMatrix4(_m1),this}rotateY(e){return _m1.makeRotationY(e),this.applyMatrix4(_m1),this}rotateZ(e){return _m1.makeRotationZ(e),this.applyMatrix4(_m1),this}translate(e,t,r){return _m1.makeTranslation(e,t,r),this.applyMatrix4(_m1),this}scale(e,t,r){return _m1.makeScale(e,t,r),this.applyMatrix4(_m1),this}lookAt(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this}setFromPoints(r){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Float32BufferAttribute(i,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Box3);var e=this.attributes.position,r=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));else{if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),r)for(let e=0,t=r.length;e<t;e++){var i=r[e];_box$1.setFromBufferAttribute(i),this.morphTargetsRelative?(_vector$8.addVectors(this.boundingBox.min,_box$1.min),this.boundingBox.expandByPoint(_vector$8),_vector$8.addVectors(this.boundingBox.max,_box$1.max),this.boundingBox.expandByPoint(_vector$8)):(this.boundingBox.expandByPoint(_box$1.min),this.boundingBox.expandByPoint(_box$1.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var i=this.attributes.position,n=this.morphAttributes.position;if(i&&i.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Vector3,1/0);else if(i){var a=this.boundingSphere.center;if(_box$1.setFromBufferAttribute(i),n)for(let e=0,t=n.length;e<t;e++){var s=n[e];_boxMorphTargets.setFromBufferAttribute(s),this.morphTargetsRelative?(_vector$8.addVectors(_box$1.min,_boxMorphTargets.min),_box$1.expandByPoint(_vector$8),_vector$8.addVectors(_box$1.max,_boxMorphTargets.max),_box$1.expandByPoint(_vector$8)):(_box$1.expandByPoint(_boxMorphTargets.min),_box$1.expandByPoint(_boxMorphTargets.max))}_box$1.getCenter(a);let r=0;for(let e=0,t=i.count;e<t;e++)_vector$8.fromBufferAttribute(i,e),r=Math.max(r,a.distanceToSquared(_vector$8));if(n)for(let e=0,t=n.length;e<t;e++){var o=n[e],l=this.morphTargetsRelative;for(let e=0,t=o.count;e<t;e++)_vector$8.fromBufferAttribute(o,e),l&&(_offset.fromBufferAttribute(i,e),_vector$8.add(_offset)),r=Math.max(r,a.distanceToSquared(_vector$8))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){var e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");else{var i=e.array;const m=t.position.array,f=t.normal.array,g=t.uv.array;var n,a,s,o,l=m.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*l),4));const v=this.getAttribute("tangent").array,_=[],y=[];for(let e=0;e<l;e++)_[e]=new Vector3,y[e]=new Vector3;const x=new Vector3,M=new Vector3,b=new Vector3,S=new Vector2,w=new Vector2,T=new Vector2,A=new Vector3,C=new Vector3;let r=this.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:i.length}]:r).length;e<t;++e){var h=r[e],c=h.start;for(let e=c,t=c+h.count;e<t;e+=3)n=i[e+0],a=i[e+1],s=i[e+2],o=void 0,x.fromArray(m,3*n),M.fromArray(m,3*a),b.fromArray(m,3*s),S.fromArray(g,2*n),w.fromArray(g,2*a),T.fromArray(g,2*s),M.sub(x),b.sub(x),w.sub(S),T.sub(S),o=1/(w.x*T.y-T.x*w.y),isFinite(o)&&(A.copy(M).multiplyScalar(T.y).addScaledVector(b,-w.y).multiplyScalar(o),C.copy(b).multiplyScalar(w.x).addScaledVector(M,-T.x).multiplyScalar(o),_[n].add(A),_[a].add(A),_[s].add(A),y[n].add(C),y[a].add(C),y[s].add(C))}const E=new Vector3,L=new Vector3,R=new Vector3,P=new Vector3;for(let e=0,t=r.length;e<t;++e){var u=r[e],d=u.start;for(let e=d,t=d+u.count;e<t;e+=3)p(i[e+0]),p(i[e+1]),p(i[e+2])}function p(e){R.fromArray(f,3*e),P.copy(R);var t=_[e],t=(E.copy(t),E.sub(R.multiplyScalar(R.dot(t))).normalize(),L.crossVectors(P,t),L.dot(y[e])),t=t<0?-1:1;v[4*e]=E.x,v[4*e+1]=E.y,v[4*e+2]=E.z,v[4*e+3]=t}}}computeVertexNormals(){var i=this.index,n=this.getAttribute("position");if(void 0!==n){let r=this.getAttribute("normal");if(void 0===r)r=new BufferAttribute(new Float32Array(3*n.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);var a=new Vector3,s=new Vector3,o=new Vector3,l=new Vector3,h=new Vector3,c=new Vector3,u=new Vector3,d=new Vector3;if(i)for(let e=0,t=i.count;e<t;e+=3){var p=i.getX(e+0),m=i.getX(e+1),f=i.getX(e+2);a.fromBufferAttribute(n,p),s.fromBufferAttribute(n,m),o.fromBufferAttribute(n,f),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),l.fromBufferAttribute(r,p),h.fromBufferAttribute(r,m),c.fromBufferAttribute(r,f),l.add(u),h.add(u),c.add(u),r.setXYZ(p,l.x,l.y,l.z),r.setXYZ(m,h.x,h.y,h.z),r.setXYZ(f,c.x,c.y,c.z)}else for(let e=0,t=n.count;e<t;e+=3)a.fromBufferAttribute(n,e+0),s.fromBufferAttribute(n,e+1),o.fromBufferAttribute(n,e+2),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),r.setXYZ(e+0,u.x,u.y,u.z),r.setXYZ(e+1,u.x,u.y,u.z),r.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(const o in r)if(void 0!==e.attributes[o]){var i=r[o].array,n=e.attributes[o],a=n.array,n=n.itemSize*t,s=Math.min(a.length,i.length-n);for(let e=0,t=n;e<s;e++,t++)i[t]=a[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){var r=this.attributes.normal;for(let e=0,t=r.count;e<t;e++)_vector$8.fromBufferAttribute(r,e),_vector$8.normalize(),r.setXYZ(e,_vector$8.x,_vector$8.y,_vector$8.z)}toNonIndexed(){function r(r,i){var n=r.array,a=r.itemSize,e=r.normalized,s=new n.constructor(i.length*a);let o=0,l=0;for(let e=0,t=i.length;e<t;e++){o=r.isInterleavedBufferAttribute?i[e]*r.data.stride+r.offset:i[e]*a;for(let e=0;e<a;e++)s[l++]=n[o++]}return new BufferAttribute(s,a,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var i=new BufferGeometry,n=this.index.array,e=this.attributes;for(const u in e){var t=r(e[u],n);i.setAttribute(u,t)}var a=this.morphAttributes;for(const d in a){var s=[],o=a[d];for(let e=0,t=o.length;e<t;e++){var l=r(o[e],n);s.push(l)}i.morphAttributes[d]=s}i.morphTargetsRelative=this.morphTargetsRelative;var h=this.groups;for(let e=0,t=h.length;e<t;e++){var c=h[e];i.addGroup(c.start,c.count,c.materialIndex)}return i}toJSON(){var r={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),0<Object.keys(this.userData).length&&(r.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const h in e)void 0!==e[h]&&(r[h]=e[h])}else{r.data={attributes:{}};var t=this.index,i=(null!==t&&(r.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)}),this.attributes);for(const c in i){var n=i[c];r.data.attributes[c]=n.toJSON(r.data)}var a={};let e=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u],o=[];for(let e=0,t=s.length;e<t;e++){var l=s[e];o.push(l.toJSON(r.data))}0<o.length&&(a[u]=o,e=!0)}e&&(r.data.morphAttributes=a,r.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups,t=(0<t.length&&(r.data.groups=JSON.parse(JSON.stringify(t))),this.boundingSphere);null!==t&&(r.data.boundingSphere={center:t.center.toArray(),radius:t.radius})}return r}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var r={},t=(this.name=e.name,e.index),i=(null!==t&&this.setIndex(t.clone(r)),e.attributes);for(const c in i){var n=i[c];this.setAttribute(c,n.clone(r))}var a=e.morphAttributes;for(const u in a){var s=[],o=a[u];for(let e=0,t=o.length;e<t;e++)s.push(o[e].clone(r));this.morphAttributes[u]=s}this.morphTargetsRelative=e.morphTargetsRelative;var l=e.groups;for(let e=0,t=l.length;e<t;e++){var h=l[e];this.addGroup(h.start,h.count,h.materialIndex)}t=e.boundingBox,null!==t&&(this.boundingBox=t.clone()),t=e.boundingSphere;return null!==t&&(this.boundingSphere=t.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;class Mesh extends Object3D{constructor(e=new BufferGeometry,t=new MeshBasicMaterial){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(0<t.length){var r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}raycast(i,n){var e=this.geometry,a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere$3.copy(e.boundingSphere),_sphere$3.applyMatrix4(t),!1!==i.ray.intersectsSphere(_sphere$3))&&(_inverseMatrix$2.copy(t).invert(),_ray$2.copy(i.ray).applyMatrix4(_inverseMatrix$2),null===e.boundingBox||!1!==_ray$2.intersectsBox(e.boundingBox))){let r;var s=e.index,o=e.attributes.position,l=e.morphAttributes.position,h=e.morphTargetsRelative,c=e.attributes.uv,u=e.attributes.uv2,d=e.groups,p=e.drawRange;if(null!==s)if(Array.isArray(a))for(let e=0,t=d.length;e<t;e++){var m=d[e],f=a[m.materialIndex];for(let e=Math.max(m.start,p.start),t=Math.min(s.count,Math.min(m.start+m.count,p.start+p.count));e<t;e+=3){var g=s.getX(e),v=s.getX(e+1),_=s.getX(e+2);(r=checkBufferGeometryIntersection(this,f,i,_ray$2,o,l,h,c,u,g,v,_))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=m.materialIndex,n.push(r))}}else for(let e=Math.max(0,p.start),t=Math.min(s.count,p.start+p.count);e<t;e+=3){var y=s.getX(e),x=s.getX(e+1),M=s.getX(e+2);(r=checkBufferGeometryIntersection(this,a,i,_ray$2,o,l,h,c,u,y,x,M))&&(r.faceIndex=Math.floor(e/3),n.push(r))}else if(void 0!==o)if(Array.isArray(a))for(let e=0,t=d.length;e<t;e++){var b=d[e],S=a[b.materialIndex];for(let e=Math.max(b.start,p.start),t=Math.min(o.count,Math.min(b.start+b.count,p.start+p.count));e<t;e+=3){var w=e,T=e+1,A=e+2;(r=checkBufferGeometryIntersection(this,S,i,_ray$2,o,l,h,c,u,w,T,A))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=b.materialIndex,n.push(r))}}else for(let e=Math.max(0,p.start),t=Math.min(o.count,p.start+p.count);e<t;e+=3){var C=e,E=e+1,L=e+2;(r=checkBufferGeometryIntersection(this,a,i,_ray$2,o,l,h,c,u,C,E,L))&&(r.faceIndex=Math.floor(e/3),n.push(r))}}}}function checkIntersection(e,t,r,i,n,a,s,o){let l;if(null===(l=t.side===BackSide?i.intersectTriangle(s,a,n,!0,o):i.intersectTriangle(n,a,s,t.side!==DoubleSide,o)))return null;_intersectionPointWorld.copy(o),_intersectionPointWorld.applyMatrix4(e.matrixWorld);i=r.ray.origin.distanceTo(_intersectionPointWorld);return i<r.near||r.far<i?null:{distance:i,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,r,i,n,a,s,o,l,h,c,u){_vA$1.fromBufferAttribute(n,h),_vB$1.fromBufferAttribute(n,c),_vC$1.fromBufferAttribute(n,u);var d=e.morphTargetInfluences;if(a&&d){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],m=a[e];0!==p&&(_tempA.fromBufferAttribute(m,h),_tempB.fromBufferAttribute(m,c),_tempC.fromBufferAttribute(m,u),s?(_morphA.addScaledVector(_tempA,p),_morphB.addScaledVector(_tempB,p),_morphC.addScaledVector(_tempC,p)):(_morphA.addScaledVector(_tempA.sub(_vA$1),p),_morphB.addScaledVector(_tempB.sub(_vB$1),p),_morphC.addScaledVector(_tempC.sub(_vC$1),p)))}_vA$1.add(_morphA),_vB$1.add(_morphB),_vC$1.add(_morphC)}e.isSkinnedMesh&&(e.boneTransform(h,_vA$1),e.boneTransform(c,_vB$1),e.boneTransform(u,_vC$1));n=checkIntersection(e,t,r,i,_vA$1,_vB$1,_vC$1,_intersectionPoint);return n&&(o&&(_uvA$1.fromBufferAttribute(o,h),_uvB$1.fromBufferAttribute(o,c),_uvC$1.fromBufferAttribute(o,u),n.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),l&&(_uvA$1.fromBufferAttribute(l,h),_uvB$1.fromBufferAttribute(l,c),_uvC$1.fromBufferAttribute(l,u),n.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),e={a:h,b:c,c:u,normal:new Vector3,materialIndex:0},Triangle.getNormal(_vA$1,_vB$1,_vC$1,e.normal),n.face=e),n}class BoxGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,i=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:a};const C=this,E=(i=Math.floor(i),n=Math.floor(n),a=Math.floor(a),[]),L=[],R=[],P=[];let D=0,I=0;function s(r,i,n,a,s,e,t,o,l,h,c){var u=e/l,d=t/h,p=e/2,m=t/2,f=o/2,g=l+1,v=h+1;let _=0,y=0;var x=new Vector3;for(let t=0;t<v;t++){var M=t*d-m;for(let e=0;e<g;e++){var b=e*u-p;x[r]=b*a,x[i]=M*s,x[n]=f,L.push(x.x,x.y,x.z),x[r]=0,x[i]=0,x[n]=0<o?1:-1,R.push(x.x,x.y,x.z),P.push(e/l),P.push(1-t/h),_+=1}}for(let t=0;t<h;t++)for(let e=0;e<l;e++){var S=D+e+g*t,w=D+e+g*(t+1),T=D+(e+1)+g*(t+1),A=D+(e+1)+g*t;E.push(S,w,A),E.push(w,T,A),y+=6}C.addGroup(I,y,c),I+=y,D+=_}s("z","y","x",-1,-1,r,t,e,a,n,0),s("z","y","x",1,-1,r,t,-e,a,n,1),s("x","z","y",1,1,e,r,t,i,a,2),s("x","z","y",1,-1,e,r,-t,i,a,3),s("x","y","z",1,-1,e,t,r,i,n,4),s("x","y","z",-1,-1,e,t,-r,i,n,5),this.setIndex(E),this.setAttribute("position",new Float32BufferAttribute(L,3)),this.setAttribute("normal",new Float32BufferAttribute(R,3)),this.setAttribute("uv",new Float32BufferAttribute(P,2))}static fromJSON(e){return new BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function cloneUniforms(e){var t={};for(const i in e){t[i]={};for(const n in e[i]){var r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function mergeUniforms(t){var r={};for(let e=0;e<t.length;e++){var i=cloneUniforms(t[e]);for(const n in i)r[n]=i[n]}return r}function cloneUniformsGroups(t){var r=[];for(let e=0;e<t.length;e++)r.push(t[e].clone());return r}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class ShaderMaterial extends Material{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.uniformsGroups=cloneUniformsGroups(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){var t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){var r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var i={};for(const a in this.extensions)!0===this.extensions[a]&&(i[a]=!0);return 0<Object.keys(i).length&&(t.extensions=i),t}}class Camera extends Object3D{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class PerspectiveCamera extends Camera{constructor(e=50,t=1,r=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*RAD2DEG*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*DEG2RAD*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*RAD2DEG*Math.atan(Math.tan(.5*DEG2RAD*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,i,n,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*DEG2RAD*this.fov)/this.zoom,r=2*t,i=this.aspect*r,n=-.5*i;var a,s=this.view,o=(null!==this.view&&this.view.enabled&&(o=s.fullWidth,a=s.fullHeight,n+=s.offsetX*i/o,t-=s.offsetY*r/a,i*=s.width/o,r*=s.height/a),this.filmOffset);0!==o&&(n+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+i,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){e=super.toJSON(e);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const fov=90,aspect=1;class CubeCamera extends Object3D{constructor(e,t,r){super(),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget?console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."):(this.renderTarget=r,(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(1,0,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(-1,0,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,0,1),r.lookAt(new Vector3(0,1,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,0,-1),r.lookAt(new Vector3(0,-1,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(0,0,1)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(0,0,-1)),this.add(r))}update(e,t){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,[i,n,a,s,o,l]=this.children,h=e.getRenderTarget(),c=e.toneMapping,u=e.xr.enabled,d=(e.toneMapping=NoToneMapping,e.xr.enabled=!1,r.texture.generateMipmaps);r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,i),e.setRenderTarget(r,1),e.render(t,n),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,s),e.setRenderTarget(r,4),e.render(t,o),r.texture.generateMipmaps=d,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(h),e.toneMapping=c,e.xr.enabled=u,r.texture.needsPMREMUpdate=!0}}class CubeTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:CubeReflectionMapping,r,i,n,a,s,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;e={width:e,height:e,depth:1},e=[e,e,e,e,e,e];this.texture=new CubeTexture(e,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:LinearFilter}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new BoxGeometry(5,5,5),r=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:BackSide,blending:NoBlending}),i=(r.uniforms.tEquirect.value=t,new Mesh(i,r)),r=t.minFilter;return t.minFilter===LinearMipmapLinearFilter&&(t.minFilter=LinearFilter),new CubeCamera(1,10,this).update(e,i),t.minFilter=r,i.geometry.dispose(),i.material.dispose(),this}clear(t,r,i,n){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(r,i,n);t.setRenderTarget(e)}}const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e=new Vector3(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){r=_vector1.subVectors(r,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){var r=e.delta(_vector1),i=this.normal.dot(r);return 0===i?0===this.distanceToPoint(e.start)?t.copy(e.start):null:(i=-(e.start.dot(this.normal)+this.constant)/i)<0||1<i?null:t.copy(r).multiplyScalar(i).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||_normalMatrix.getNormalMatrix(e),e=this.coplanarPoint(_vector1).applyMatrix4(e),t=this.normal.applyMatrix3(t).normalize();return this.constant=-e.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const _sphere$2=new Sphere,_vector$7=new Vector3;class Frustum{constructor(e=new Plane,t=new Plane,r=new Plane,i=new Plane,n=new Plane,a=new Plane){this.planes=[e,t,r,i,n,a]}set(e,t,r,i,n,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(i),s[4].copy(n),s[5].copy(a),this}copy(t){var r=this.planes;for(let e=0;e<6;e++)r[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){var t=this.planes,e=e.elements,r=e[0],i=e[1],n=e[2],a=e[3],s=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=e[9],d=e[10],p=e[11],m=e[12],f=e[13],g=e[14],e=e[15];return t[0].setComponents(a-r,h-s,p-c,e-m).normalize(),t[1].setComponents(a+r,h+s,p+c,e+m).normalize(),t[2].setComponents(a+i,h+o,p+u,e+f).normalize(),t[3].setComponents(a-i,h-o,p-u,e-f).normalize(),t[4].setComponents(a-n,h-l,p-d,e-g).normalize(),t[5].setComponents(a+n,h+l,p+d,e+g).normalize(),this}intersectsObject(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$2.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSprite(e){return _sphere$2.center.set(0,0,0),_sphere$2.radius=.7071067811865476,_sphere$2.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSphere(e){var t=this.planes,r=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<i)return!1;return!0}intersectsBox(t){var r=this.planes;for(let e=0;e<6;e++){var i=r[e];if(_vector$7.x=(0<i.normal.x?t.max:t.min).x,_vector$7.y=(0<i.normal.y?t.max:t.min).y,_vector$7.z=(0<i.normal.z?t.max:t.min).z,i.distanceToPoint(_vector$7)<0)return!1}return!0}containsPoint(t){var r=this.planes;for(let e=0;e<6;e++)if(r[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function WebGLAnimation(){let r=null,e=!1,i=null,n=null;function a(e,t){i(e,t),n=r.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==i&&(n=r.requestAnimationFrame(a),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(e){i=e},setContext:function(e){r=e}}}function WebGLAttributes(s,e){const o=e.isWebGL2,l=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),l.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=l.get(e);t&&(s.deleteBuffer(t.buffer),l.delete(e))},update:function(e,t){var r,i,n,a;e.isGLBufferAttribute?(!(r=l.get(e))||r.version<e.version)&&l.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}):(e.isInterleavedBufferAttribute&&(e=e.data),void 0===(r=l.get(e))?l.set(e,function(e,t){var r=e.array,i=e.usage,n=s.createBuffer();s.bindBuffer(t,n),s.bufferData(t,r,i),e.onUploadCallback();let a;if(r instanceof Float32Array)a=5126;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!o)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=5131}else a=5123;else if(r instanceof Int16Array)a=5122;else if(r instanceof Uint32Array)a=5125;else if(r instanceof Int32Array)a=5124;else if(r instanceof Int8Array)a=5120;else{if(!(r instanceof Uint8Array||r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);a=5121}return{buffer:n,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,t)):r.version<e.version&&(i=r.buffer,t=t,a=(n=e).array,n=n.updateRange,s.bindBuffer(t,i),-1===n.count?s.bufferSubData(t,0,a):(o?s.bufferSubData(t,n.offset*a.BYTES_PER_ELEMENT,a,n.offset,n.count):s.bufferSubData(t,n.offset*a.BYTES_PER_ELEMENT,a.subarray(n.offset,n.offset+n.count)),n.count=-1),r.version=e.version))}}}class PlaneGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=e/2,a=t/2,s=Math.floor(r),o=Math.floor(i),l=s+1,h=o+1,c=e/s,u=t/o,d=[],p=[],m=[],f=[];for(let t=0;t<h;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*c-n;p.push(v,-g,0),m.push(0,0,1),f.push(e/s),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var _=e+l*t,y=e+l*(t+1),x=e+1+l*(t+1),M=e+1+l*t;d.push(_,y,M),d.push(y,x,M)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}static fromJSON(e){return new PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)}}var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment="#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex="#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment="#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment="#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";const vertex$g="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",fragment$g="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",vertex$f="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",fragment$f="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",vertex$e="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",fragment$e="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",vertex$d="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",fragment$d="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",vertex$c="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragment$c="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",vertex$b="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",fragment$b="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",vertex$a="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",fragment$a="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$9="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragment$9="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$8="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",fragment$8="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$7="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",fragment$7="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",vertex$6="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragment$6="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$5="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",fragment$5="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$4="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragment$4="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vertex$3="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",fragment$3="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",vertex$2="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragment$2="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",vertex$1="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",fragment$1="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,alphatest_pars_fragment:alphatest_pars_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,iridescence_fragment:iridescence_fragment,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphcolor_vertex:morphcolor_vertex,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normal_pars_fragment:normal_pars_fragment,normal_pars_vertex:normal_pars_vertex,normal_vertex:normal_vertex,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,iridescence_pars_fragment:iridescence_pars_fragment,output_fragment:output_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmission_fragment:transmission_fragment,transmission_pars_fragment:transmission_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_vert:vertex$g,background_frag:fragment$g,cube_vert:vertex$f,cube_frag:fragment$f,depth_vert:vertex$e,depth_frag:fragment$e,distanceRGBA_vert:vertex$d,distanceRGBA_frag:fragment$d,equirect_vert:vertex$c,equirect_frag:fragment$c,linedashed_vert:vertex$b,linedashed_frag:fragment$b,meshbasic_vert:vertex$a,meshbasic_frag:fragment$a,meshlambert_vert:vertex$9,meshlambert_frag:fragment$9,meshmatcap_vert:vertex$8,meshmatcap_frag:fragment$8,meshnormal_vert:vertex$7,meshnormal_frag:fragment$7,meshphong_vert:vertex$6,meshphong_frag:fragment$6,meshphysical_vert:vertex$5,meshphysical_frag:fragment$5,meshtoon_vert:vertex$4,meshtoon_frag:fragment$4,points_vert:vertex$3,points_frag:fragment$3,shadow_vert:vertex$2,shadow_frag:fragment$2,sprite_vert:vertex$1,sprite_frag:fragment$1},UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};function WebGLBackground(n,a,r,s,e,i){const o=new Color(0);let l=!0===e?0:1,h,c,u=null,d=0,p=null;function m(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),l=t,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,m(o,l)},render:function(e,t){let r=!1,i=!0===t.isScene?t.background:null;i&&i.isTexture&&(i=a.get(i)),t=(t=n.xr).getSession&&t.getSession(),null===(i=t&&"additive"===t.environmentBlendMode?null:i)?m(o,l):i&&i.isColor&&(m(i,1),r=!0),(n.autoClear||r)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),i&&(i.isCubeTexture||i.mapping===CubeUVReflectionMapping)?(void 0===c&&((c=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,u===i&&d===i.version&&p===n.toneMapping||(c.material.needsUpdate=!0,u=i,d=i.version,p=n.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===h&&((h=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(h)),!0===(h.material.uniforms.t2D.value=i).matrixAutoUpdate&&i.updateMatrix(),h.material.uniforms.uvTransform.value.copy(i.matrix),u===i&&d===i.version&&p===n.toneMapping||(h.material.needsUpdate=!0,u=i,d=i.version,p=n.toneMapping),h.layers.enableAll(),e.unshift(h,h.geometry,h.material,0,0,null))}}}function WebGLBindingStates(y,x,M,b){const n=y.getParameter(34921),m=b.isWebGL2?null:x.get("OES_vertex_array_object"),f=b.isWebGL2||null!==m,g={},e=w(null);let v=e,_=!1;function S(e){if(b.isWebGL2)return y.bindVertexArray(e);m.bindVertexArrayOES(e)}function a(e){if(b.isWebGL2)return y.deleteVertexArray(e);m.deleteVertexArrayOES(e)}function w(e){var t=[],r=[],i=[];for(let e=0;e<n;e++)t[e]=0,r[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:i,object:e,attributes:{},index:null}}function T(){var r=v.newAttributes;for(let e=0,t=r.length;e<t;e++)r[e]=0}function A(e){C(e,0)}function C(e,t){var r=v.newAttributes,i=v.enabledAttributes,n=v.attributeDivisors;r[e]=1,0===i[e]&&(y.enableVertexAttribArray(e),i[e]=1),n[e]!==t&&((b.isWebGL2?y:x.get("ANGLE_instanced_arrays"))[b.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),n[e]=t)}function E(){var r=v.newAttributes,i=v.enabledAttributes;for(let e=0,t=i.length;e<t;e++)i[e]!==r[e]&&(y.disableVertexAttribArray(e),i[e]=0)}function L(e,t,r,i,n,a){!0!==b.isWebGL2||5124!==r&&5125!==r?y.vertexAttribPointer(e,t,r,i,n,a):y.vertexAttribIPointer(e,t,r,n,a)}function s(){t(),_=!0,v!==e&&S((v=e).object)}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,r,i,n){let a=!1;if(f){var s=function(e,t,r){r=!0===r.wireframe;let i=g[e.id];void 0===i&&(i={},g[e.id]=i);let n=i[t.id];void 0===n&&(n={},i[t.id]=n);let a=n[r];void 0===a&&(a=w(b.isWebGL2?y.createVertexArray():m.createVertexArrayOES()),n[r]=a);return a}(i,r,t);if(v!==s&&S((v=s).object),a=function(t,e,r,i){var n=v.attributes,a=e.attributes;let s=0;var o=r.getAttributes();for(const h in o)if(0<=o[h].location){var l=n[h];let e=a[h];if(void 0===e&&("instanceMatrix"===h&&t.instanceMatrix&&(e=t.instanceMatrix),"instanceColor"===h)&&t.instanceColor&&(e=t.instanceColor),void 0===l)return!0;if(l.attribute!==e)return!0;if(e&&l.data!==e.data)return!0;s++}return v.attributesNum!==s||v.index!==i}(e,i,r,n)){var o=e,s=r,l=n,h={},c=i.attributes;let t=0;var u=s.getAttributes();for(const p in u)if(0<=u[p].location){let e=c[p];void 0===e&&("instanceMatrix"===p&&o.instanceMatrix&&(e=o.instanceMatrix),"instanceColor"===p)&&o.instanceColor&&(e=o.instanceColor);var d={};(d.attribute=e)&&e.data&&(d.data=e.data),h[p]=d,t++}v.attributes=h,v.attributesNum=t,v.index=l}}else{s=!0===t.wireframe;v.geometry===i.id&&v.program===r.id&&v.wireframe===s||(v.geometry=i.id,v.program=r.id,v.wireframe=s,a=!0)}null!==n&&M.update(n,34963),(a||_)&&(_=!1,function(e,t,r,i){if(!1===b.isWebGL2&&(e.isInstancedMesh||i.isInstancedBufferGeometry)&&null===x.get("ANGLE_instanced_arrays"))return;T();var n=i.attributes,a=r.getAttributes(),s=t.defaultAttributeValues;for(const _ in a){var o=a[_];if(0<=o.location){let t=n[_];if(void 0!==(t=void 0===t&&("instanceMatrix"===_&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===_)&&e.instanceColor?e.instanceColor:t)){var l=t.normalized,h=t.itemSize,c=M.get(t);if(void 0!==c){var u=c.buffer,d=c.type,p=c.bytesPerElement;if(t.isInterleavedBufferAttribute){var m=t.data,f=m.stride,g=t.offset;if(m.isInstancedInterleavedBuffer){for(let e=0;e<o.locationSize;e++)C(o.location+e,m.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=m.meshPerAttribute*m.count)}else for(let e=0;e<o.locationSize;e++)A(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)L(o.location+e,h/o.locationSize,d,l,f*p,(g+h/o.locationSize*e)*p)}else{if(t.isInstancedBufferAttribute){for(let e=0;e<o.locationSize;e++)C(o.location+e,t.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<o.locationSize;e++)A(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)L(o.location+e,h/o.locationSize,d,l,h*p,h/o.locationSize*e*p)}}}else if(void 0!==s){var v=s[_];if(void 0!==v)switch(v.length){case 2:y.vertexAttrib2fv(o.location,v);break;case 3:y.vertexAttrib3fv(o.location,v);break;case 4:y.vertexAttrib4fv(o.location,v);break;default:y.vertexAttrib1fv(o.location,v)}}}}E()}(e,t,r,i),null!==n)&&y.bindBuffer(34963,M.get(n).buffer)},reset:s,resetDefaultState:t,dispose:function(){s();for(const r in g){var e=g[r];for(const i in e){var t=e[i];for(const n in t)a(t[n].object),delete t[n];delete e[i]}delete g[r]}},releaseStatesOfGeometry:function(e){if(void 0!==g[e.id]){var t=g[e.id];for(const i in t){var r=t[i];for(const n in r)a(r[n].object),delete r[n];delete t[i]}delete g[e.id]}},releaseStatesOfProgram:function(e){for(const i in g){var t=g[i];if(void 0!==t[e.id]){var r=t[e.id];for(const n in r)a(r[n].object),delete r[n];delete t[e.id]}}},initAttributes:T,enableAttribute:A,disableUnusedAttributes:E}}function WebGLBufferRenderer(a,s,o,e){const l=e.isWebGL2;let h;this.setMode=function(e){h=e},this.render=function(e,t){a.drawArrays(h,e,t),o.update(t,h,1)},this.renderInstances=function(r,i,n){if(0!==n){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,r,i,n),o.update(i,h,n)}}}function WebGLCapabilities(t,r,e){let i;function n(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=n(s),o=(o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o),a||r.has("WEBGL_draw_buffers")),e=!0===e.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),c=t.getParameter(3379),u=t.getParameter(34076),d=t.getParameter(34921),p=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),g=0<h,v=a||r.has("OES_texture_float"),_=g&&v,y=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){var e;return i=void 0===i?!0===r.has("EXT_texture_filter_anisotropic")?(e=r.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0:i},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:e,maxTextures:l,maxVertexTextures:h,maxTextureSize:c,maxCubemapSize:u,maxAttributes:d,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:_,maxSamples:y}}function WebGLClipping(l){const o=this;let h=null,c=0,u=!1,d=!1;const p=new Plane,m=new Matrix3,f={value:null,needsUpdate:!1};function g(){f.value!==h&&(f.value=h,f.needsUpdate=0<c),o.numPlanes=c,o.numIntersection=0}function v(r,e,i,t){var n=null!==r?r.length:0;let a=null;if(0!==n){if(a=f.value,!0!==t||null===a){var t=i+4*n,s=e.matrixWorldInverse;m.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=i;e!==n;++e,t+=4)p.copy(r[e]).applyMatrix4(s,m),p.normal.toArray(a,t),a[t+3]=p.constant}f.value=a,f.needsUpdate=!0}return o.numPlanes=n,o.numIntersection=0,a}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){var i=0!==e.length||t||0!==c||u;return u=t,h=v(e,r,0),c=e.length,i},this.beginShadows=function(){d=!0,v(null)},this.endShadows=function(){d=!1,g()},this.setState=function(e,t,r){var i=e.clippingPlanes,n=e.clipIntersection,a=e.clipShadows,e=l.get(e);if(!u||null===i||0===i.length||d&&!a)d?v(null):g();else{var a=d?0:c,s=4*a,o=e.clippingState||null;f.value=o,o=v(i,t,s,r);for(let e=0;e!==s;++e)o[e]=h[e];e.clippingState=o,this.numIntersection=n?this.numPlanes:0,this.numPlanes+=a}}}function WebGLCubeMaps(r){let i=new WeakMap;function n(e,t){return t===EquirectangularReflectionMapping?e.mapping=CubeReflectionMapping:t===EquirectangularRefractionMapping&&(e.mapping=CubeRefractionMapping),e}function a(e){var e=e.target,t=(e.removeEventListener("dispose",a),i.get(e));void 0!==t&&(i.delete(e),t.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t=e.mapping;if(t===EquirectangularReflectionMapping||t===EquirectangularRefractionMapping)return i.has(e)?n(i.get(e).texture,e.mapping):(t=e.image)&&0<t.height?((t=new WebGLCubeRenderTarget(t.height/2)).fromEquirectangularTexture(r,e),i.set(e,t),e.addEventListener("dispose",a),n(t.texture,e.mapping)):null}return e},dispose:function(){i=new WeakMap}}}ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};class OrthographicCamera extends Camera{constructor(e=-1,t=1,r=1,i=-1,n=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,i,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let n=r-e,a=r+e,s=i+t,o=i-t;null!==this.view&&this.view.enabled&&(r=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom,n+=r*this.view.offsetX,a=n+r*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height),this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){e=super.toJSON(e);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const LOD_MIN=4,EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],MAX_SAMPLES=20,_flatCamera=new OrthographicCamera,_clearColor=new Color;let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,i=100){_oldTarget=this._renderer.getRenderTarget(),this._setSize(256);var n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,r,i,n),0<t&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_oldTarget=this._renderer.getRenderTarget();t=t||this._allocateTargets();return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(){var e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:LinearFilter,minFilter:LinearFilter,generateMipmaps:!1,type:HalfFloatType,format:RGBAFormat,encoding:LinearEncoding,depthBuffer:!1},i=_createRenderTarget(e,t,r);return null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.width===e||(null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=_createRenderTarget(e,t,r),r=this._lodMax,{sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=_createPlanes(r),this._blurMaterial=_getBlurShader(r,e,t)),i}_compileMaterial(e){e=new Mesh(this._lodPlanes[0],e);this._renderer.compile(e,_flatCamera)}_sceneToCubeUV(t,e,r,i){var n=new PerspectiveCamera(90,1,e,r),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,e=o.autoClear,r=o.toneMapping,l=(o.getClearColor(_clearColor),o.toneMapping=NoToneMapping,o.autoClear=!1,new MeshBasicMaterial({name:"PMREM.Background",side:BackSide,depthWrite:!1,depthTest:!1})),h=new Mesh(new BoxGeometry,l);let c=!1;var u=t.background;u?u.isColor&&(l.color.copy(u),t.background=null,c=!0):(l.color.copy(_clearColor),c=!0);for(let e=0;e<6;e++){var d=e%3,p=(0==d?(n.up.set(0,a[e],0),n.lookAt(s[e],0,0)):1==d?(n.up.set(0,0,a[e]),n.lookAt(0,s[e],0)):(n.up.set(0,a[e],0),n.lookAt(0,0,s[e])),this._cubeSize);_setViewport(i,d*p,2<e?p:0,p,p),o.setRenderTarget(i),c&&o.render(h,n),o.render(t,n)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=r,o.autoClear=e,t.background=u}_textureToCubeUV(e,t){var r=this._renderer,i=e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping,i=(i?(null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial()),i?this._cubemapMaterial:this._equirectMaterial),n=new Mesh(this._lodPlanes[0],i),i=(i.uniforms.envMap.value=e,this._cubeSize);_setViewport(t,0,0,3*i,2*i),r.setRenderTarget(t),r.render(n,_flatCamera)}_applyPMREM(t){var e=this._renderer,r=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){var i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),n=_axisDirections[(e-1)%_axisDirections.length];this._blur(t,e-1,e,i,n)}e.autoClear=r}_blur(e,t,r,i,n){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,i,"latitudinal",n),this._halfBlur(a,e,r,r,i,"longitudinal",n)}_halfBlur(e,t,r,i,n,a,s){var o=this._renderer,l=this._blurMaterial,h=("latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!"),new Mesh(this._lodPlanes[i],l)),l=l.uniforms,c=this._sizeLods[r]-1,c=isFinite(n)?Math.PI/(2*c):2*Math.PI/(2*MAX_SAMPLES-1),u=n/c,d=isFinite(n)?1+Math.floor(3*u):MAX_SAMPLES,p=(d>MAX_SAMPLES&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${d} samples when the maximum is set to `+MAX_SAMPLES),[]);let m=0;for(let e=0;e<MAX_SAMPLES;++e){const g=e/u;var f=Math.exp(-g*g/2);p.push(f),0===e?m+=f:e<d&&(m+=2*f)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;l.envMap.value=e.texture,l.samples.value=d,l.weights.value=p,l.latitudinal.value="latitudinal"===a,s&&(l.poleAxis.value=s);n=this._lodMax,l.dTheta.value=c,l.mipInt.value=n-r,e=this._sizeLods[i];const g=3*e*(i>n-LOD_MIN?i-n+LOD_MIN:0);a=4*(this._cubeSize-e);_setViewport(t,g,a,3*e,2*e),o.setRenderTarget(t),o.render(h,_flatCamera)}}function _createPlanes(r){var i=[],n=[],a=[];let s=r;var e=r-LOD_MIN+1+EXTRA_LOD_SIGMA.length;for(let t=0;t<e;t++){var o=Math.pow(2,s);n.push(o);let e=1/o;t>r-LOD_MIN?e=EXTRA_LOD_SIGMA[t-r+LOD_MIN-1]:0===t&&(e=0),a.push(e);var o=1/(o-2),l=-o,o=1+o,h=[l,l,o,l,o,o,l,l,o,o,l,o],c=new Float32Array(108),u=new Float32Array(72),d=new Float32Array(36);for(let e=0;e<6;e++){var p=e%3*2/3-1,m=2<e?0:-1,p=(c.set([p,m,0,p+2/3,m,0,p+2/3,1+m,0,p,m,0,p+2/3,1+m,0,p,1+m,0],18*e),u.set(h,12*e),[e,e,e,e,e,e]);d.set(p,6*e)}l=new BufferGeometry;l.setAttribute("position",new BufferAttribute(c,3)),l.setAttribute("uv",new BufferAttribute(u,2)),l.setAttribute("faceIndex",new BufferAttribute(d,1)),i.push(l),s>LOD_MIN&&s--}return{lodPlanes:i,sizeLods:n,sigmas:a}}function _createRenderTarget(e,t,r){e=new WebGLRenderTarget(e,t,r);return e.texture.mapping=CubeUVReflectionMapping,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function _setViewport(e,t,r,i,n){e.viewport.set(t,r,i,n),e.scissor.set(t,r,i,n)}function _getBlurShader(e,t,r){var i=new Float32Array(MAX_SAMPLES),n=new Vector3(0,1,0);return new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:MAX_SAMPLES,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/r,CUBEUV_MAX_MIP:e+".0"},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function WebGLCubeUVMaps(n){let a=new WeakMap,s=null;function o(e){var e=e.target,t=(e.removeEventListener("dispose",o),a.get(e));void 0!==t&&(a.delete(e),t.dispose())}return{get:function(e){if(e&&e.isTexture){var t,r=e.mapping,i=r===EquirectangularReflectionMapping||r===EquirectangularRefractionMapping,r=r===CubeReflectionMapping||r===CubeRefractionMapping;if(i||r)return e.isRenderTargetTexture&&!0===e.needsPMREMUpdate?(e.needsPMREMUpdate=!1,t=a.get(e),null===s&&(s=new PMREMGenerator(n)),t=i?s.fromEquirectangular(e,t):s.fromCubemap(e,t),a.set(e,t),t.texture):a.has(e)?a.get(e).texture:(t=e.image,i&&t&&0<t.height||r&&t&&function(t){let r=0;for(let e=0;e<6;e++)void 0!==t[e]&&r++;return 6===r}(t)?(null===s&&(s=new PMREMGenerator(n)),r=i?s.fromEquirectangular(e):s.fromCubemap(e),a.set(e,r),e.addEventListener("dispose",o),r.texture):null)}return e},dispose:function(){a=new WeakMap,null!==s&&(s.dispose(),s=null)}}}function WebGLExtensions(r){const i={};function n(e){if(void 0!==i[e])return i[e];let t;switch(e){case"WEBGL_depth_texture":t=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=r.getExtension(e)}return i[e]=t}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){var t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function WebGLGeometries(e,d,i,n){const a={},p=new WeakMap;function s(e){var t=e.target;null!==t.index&&d.remove(t.index);for(const r in t.attributes)d.remove(t.attributes[r]);t.removeEventListener("dispose",s),delete a[t.id];e=p.get(t);e&&(d.remove(e),p.delete(t)),n.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,i.memory.geometries--}function o(e){var r=[],i=e.index,t=e.attributes.position;let n=0;if(null!==i){var a=i.array;n=i.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];r.push(s,o,o,l,l,s)}}else{i=t.array;n=t.version;for(let e=0,t=i.length/3-1;e<t;e+=3){var h=e+0,c=e+1,u=e+2;r.push(h,c,c,u,u,h)}}t=new(arrayNeedsUint32(r)?Uint32BufferAttribute:Uint16BufferAttribute)(r,1),t.version=n,i=p.get(e);i&&d.remove(i),p.set(e,t)}return{get:function(e,t){return!0!==a[t.id]&&(t.addEventListener("dispose",s),a[t.id]=!0,i.memory.geometries++),t},update:function(e){var t=e.attributes;for(const n in t)d.update(t[n],34962);var r=e.morphAttributes;for(const a in r){var i=r[a];for(let e=0,t=i.length;e<t;e++)d.update(i[e],34962)}},getWireframeAttribute:function(e){var t,r=p.get(e);return(!r||null!==(t=e.index)&&r.version<t.version)&&o(e),p.get(e)}}}function WebGLIndexedBufferRenderer(a,s,o,e){const l=e.isWebGL2;let h;let c,u;this.setMode=function(e){h=e},this.setIndex=function(e){c=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(h,t,c,e*u),o.update(t,h,1)},this.renderInstances=function(r,i,n){if(0!==n){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,i,c,r*u,n),o.update(i,h,n)}}}function WebGLInfo(e){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(e,t,r){switch(i.calls++,t){case 4:i.triangles+=r*(e/3);break;case 1:i.lines+=r*(e/2);break;case 3:i.lines+=r*(e-1);break;case 2:i.lines+=r*e;break;case 0:i.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function numericalSort(e,t){return e[0]-t[0]}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function denormalize(e,t){let r=1;t=(t.isInterleavedBufferAttribute?t.data:t).array;t instanceof Int8Array?r=127:t instanceof Uint8Array?r=255:t instanceof Uint16Array?r=65535:t instanceof Int16Array?r=32767:t instanceof Int32Array?r=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",t),e.divideScalar(r)}function WebGLMorphtargets(C,E,r){const L={},R=new Float32Array(8),P=new WeakMap,D=new Vector4,I=[];for(let e=0;e<8;e++)I[e]=[e,0];return{update:function(e,n,t,a){var s=e.morphTargetInfluences;if(!0===E.isWebGL2){var e=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,o=void 0!==e?e.length:0;let i=P.get(n);if(void 0===i||i.count!==o){void 0!==i&&i.texture.dispose();var l=void 0!==n.morphAttributes.position,h=void 0!==n.morphAttributes.normal,c=void 0!==n.morphAttributes.color,u=n.morphAttributes.position||[],d=n.morphAttributes.normal||[],p=n.morphAttributes.color||[];let e=!0==c?3:!0==h?2:!0==l?1:0,t=n.attributes.position.count*e,r=1;t>E.maxTextureSize&&(r=Math.ceil(t/E.maxTextureSize),t=E.maxTextureSize);var m=new Float32Array(t*r*4*o);const A=new DataArrayTexture(m,t,r,o);A.type=FloatType,A.needsUpdate=!0;var f=4*e;for(let e=0;e<o;e++){var g=u[e],v=d[e],_=p[e],y=t*r*4*e;for(let e=0;e<g.count;e++){var x=e*f;!0==l&&(D.fromBufferAttribute(g,e),!0===g.normalized&&denormalize(D,g),m[y+x]=D.x,m[y+x+1]=D.y,m[y+x+2]=D.z,m[y+x+3]=0),!0==h&&(D.fromBufferAttribute(v,e),!0===v.normalized&&denormalize(D,v),m[y+x+4]=D.x,m[y+x+5]=D.y,m[y+x+6]=D.z,m[y+x+7]=0),!0==c&&(D.fromBufferAttribute(_,e),!0===_.normalized&&denormalize(D,_),m[y+x+8]=D.x,m[y+x+9]=D.y,m[y+x+10]=D.z,m[y+x+11]=4===_.itemSize?D.w:1)}}i={count:o,texture:A,size:new Vector2(t,r)},P.set(n,i),n.addEventListener("dispose",function e(){A.dispose(),P.delete(n),n.removeEventListener("dispose",e)})}let t=0;for(let e=0;e<s.length;e++)t+=s[e];e=n.morphTargetsRelative?1:1-t;a.getUniforms().setValue(C,"morphTargetBaseInfluence",e),a.getUniforms().setValue(C,"morphTargetInfluences",s),a.getUniforms().setValue(C,"morphTargetsTexture",i.texture,r),a.getUniforms().setValue(C,"morphTargetsTextureSize",i.size)}else{var i=void 0===s?0:s.length;let t=L[n.id];if(void 0===t||t.length!==i){t=[];for(let e=0;e<i;e++)t[e]=[e,0];L[n.id]=t}for(let e=0;e<i;e++){var M=t[e];M[0]=e,M[1]=s[e]}t.sort(absNumericalSort);for(let e=0;e<8;e++)e<i&&t[e][1]?(I[e][0]=t[e][0],I[e][1]=t[e][1]):(I[e][0]=Number.MAX_SAFE_INTEGER,I[e][1]=0);I.sort(numericalSort);var b=n.morphAttributes.position,S=n.morphAttributes.normal;let r=0;for(let e=0;e<8;e++){var w=I[e],T=w[0],w=w[1];T!==Number.MAX_SAFE_INTEGER&&w?(b&&n.getAttribute("morphTarget"+e)!==b[T]&&n.setAttribute("morphTarget"+e,b[T]),S&&n.getAttribute("morphNormal"+e)!==S[T]&&n.setAttribute("morphNormal"+e,S[T]),R[e]=w,r+=w):(b&&!0===n.hasAttribute("morphTarget"+e)&&n.deleteAttribute("morphTarget"+e),S&&!0===n.hasAttribute("morphNormal"+e)&&n.deleteAttribute("morphNormal"+e),R[e]=0)}e=n.morphTargetsRelative?1:1-r;a.getUniforms().setValue(C,"morphTargetBaseInfluence",e),a.getUniforms().setValue(C,"morphTargetInfluences",R)}}}}function WebGLObjects(e,i,n,a){let s=new WeakMap;function o(e){e=e.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(e){var t=a.render.frame,r=e.geometry,r=i.get(e,r);return s.get(r)!==t&&(i.update(r),s.set(r,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",o)&&e.addEventListener("dispose",o),n.update(e.instanceMatrix,34962),null!==e.instanceColor)&&n.update(e.instanceColor,34962),r},dispose:function(){s=new WeakMap}}}const emptyTexture=new Texture,emptyArrayTexture=new DataArrayTexture,empty3dTexture=new Data3DTexture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(r,i,n){var e=r[0];if(e<=0||0<e)return r;var t=i*n;let a=arrayCacheF32[t];if(void 0===a&&(a=new Float32Array(t),arrayCacheF32[t]=a),0!==i){e.toArray(a,0);for(let e=1,t=0;e!==i;++e)t+=n,r[e].toArray(a,t)}return a}function arraysEqual(r,i){if(r.length!==i.length)return!1;for(let e=0,t=r.length;e<t;e++)if(r[e]!==i[e])return!1;return!0}function copyArray(r,i){for(let e=0,t=i.length;e<t;e++)r[e]=i[e]}function allocTexUnits(t,r){let i=arrayCacheI32[r];void 0===i&&(i=new Int32Array(r),arrayCacheI32[r]=i);for(let e=0;e!==r;++e)i[e]=t.allocateTextureUnit();return i}function setValueV1f(e,t){var r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function setValueV2f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y):arraysEqual(r,t)||(e.uniform2fv(this.addr,t),copyArray(r,t))}function setValueV3f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z):void 0!==t.r?r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b):arraysEqual(r,t)||(e.uniform3fv(this.addr,t),copyArray(r,t))}function setValueV4f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w):arraysEqual(r,t)||(e.uniform4fv(this.addr,t),copyArray(r,t))}function setValueM2(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix2fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat2array.set(i),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(r,i))}function setValueM3(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix3fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat3array.set(i),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(r,i))}function setValueM4(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix4fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat4array.set(i),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(r,i))}function setValueV1i(e,t){var r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function setValueV2i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform2iv(this.addr,t),copyArray(r,t))}function setValueV3i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform3iv(this.addr,t),copyArray(r,t))}function setValueV4i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform4iv(this.addr,t),copyArray(r,t))}function setValueV1ui(e,t){var r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function setValueV2ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform2uiv(this.addr,t),copyArray(r,t))}function setValueV3ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform3uiv(this.addr,t),copyArray(r,t))}function setValueV4ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform4uiv(this.addr,t),copyArray(r,t))}function setValueT1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTexture2D(t||emptyTexture,n)}function setValueT3D1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTexture3D(t||empty3dTexture,n)}function setValueT6(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTextureCube(t||emptyCubeTexture,n)}function setValueT2DArray1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTexture2DArray(t||emptyArrayTexture,n)}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV2fArray(e,t){t=flatten(t,this.size,2);e.uniform2fv(this.addr,t)}function setValueV3fArray(e,t){t=flatten(t,this.size,3);e.uniform3fv(this.addr,t)}function setValueV4fArray(e,t){t=flatten(t,this.size,4);e.uniform4fv(this.addr,t)}function setValueM2Array(e,t){t=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function setValueM3Array(e,t){t=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function setValueM4Array(e,t){t=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV1uiArray(e,t){e.uniform1uiv(this.addr,t)}function setValueV2uiArray(e,t){e.uniform2uiv(this.addr,t)}function setValueV3uiArray(e,t){e.uniform3uiv(this.addr,t)}function setValueV4uiArray(e,t){e.uniform4uiv(this.addr,t)}function setValueT1Array(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.setTexture2D(t[e]||emptyTexture,n[e])}function setValueT3DArray(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.setTexture3D(t[e]||empty3dTexture,n[e])}function setValueT6Array(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.setTextureCube(t[e]||emptyCubeTexture,n[e])}function setValueT2DArrayArray(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.setTexture2DArray(t[e]||emptyArrayTexture,n[e])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}class SingleUniform{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=getSingularSetter(t.type)}}class PureArrayUniform{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}}class StructuredUniform{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(r,i,n){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){var s=a[e];s.setValue(r,i[s.id],n)}}}const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,r,i){var n=e.name,a=n.length;for(RePathPart.lastIndex=0;;){var s=RePathPart.exec(n),o=RePathPart.lastIndex;let t=s[1];var l=s[3];if("]"===s[2]&&(t|=0),void 0===l||"["===l&&o+2===a){addUniform(i,new(void 0===l?SingleUniform:PureArrayUniform)(t,e,r));break}{let e=i.map[t];void 0===e&&addUniform(i,e=new StructuredUniform(t)),i=e}}}class WebGLUniforms{constructor(t,r){this.seq=[],this.map={};var i=t.getProgramParameter(r,35718);for(let e=0;e<i;++e){var n=t.getActiveUniform(r,e);parseUniform(n,t.getUniformLocation(r,n.name),this)}}setValue(e,t,r,i){t=this.map[t];void 0!==t&&t.setValue(e,r,i)}setOptional(e,t,r){t=t[r];void 0!==t&&this.setValue(e,r,t)}static upload(r,i,n,a){for(let e=0,t=i.length;e!==t;++e){var s=i[e],o=n[s.id];!1!==o.needsUpdate&&s.setValue(r,o.value,a)}}static seqWithValue(r,i){var n=[];for(let e=0,t=r.length;e!==t;++e){var a=r[e];a.id in i&&n.push(a)}return n}}function WebGLShader(e,t,r){t=e.createShader(t);return e.shaderSource(t,r),e.compileShader(t),t}let programIdCount=0;function handleSource(t,r){var i=t.split("\n"),n=[],t=Math.max(r-6,0),a=Math.min(r+6,i.length);for(let e=t;e<a;e++){var s=e+1;n.push(`${s===r?">":" "} ${s}: `+i[e])}return n.join("\n")}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function getShaderErrors(e,t,r){var i=e.getShaderParameter(t,35713),n=e.getShaderInfoLog(t).trim();return i&&""===n?"":(i=/ERROR: 0:(\d+)/.exec(n))?(i=parseInt(i[1]),r.toUpperCase()+"\n\n"+n+"\n\n"+handleSource(e.getShaderSource(t),i)):n}function getTexelEncodingFunction(e,t){t=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function getToneMappingFunction(e,t){let r;switch(t){case LinearToneMapping:r="Linear";break;case ReinhardToneMapping:r="Reinhard";break;case CineonToneMapping:r="OptimizedCineon";break;case ACESFilmicToneMapping:r="ACESFilmic";break;case CustomToneMapping:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){var t=[];for(const i in e){var r=e[i];!1!==r&&t.push("#define "+i+" "+r)}return t.join("\n")}function fetchAttributeLocations(r,i){var n={},e=r.getProgramParameter(i,35721);for(let t=0;t<e;t++){var a=r.getActiveAttrib(i,t),s=a.name;let e=35676===a.type?4:35675===a.type?3:35674===a.type?2:1;n[s]={type:a.type,location:r.getAttribLocation(i,s),locationSize:e}}return n}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){var r=ShaderChunk[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(r)}const deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,r,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,r,i)}function loopReplacer(e,t,r,i){let n="";for(let e=parseInt(t);e<parseInt(r);e++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return n}function generatePrecision(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===PCFShadowMap?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===PCFSoftShadowMap?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===VSMShadowMap&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:t="ENVMAP_TYPE_CUBE_UV"}return t}function generateEnvMapModeDefine(e){let t="ENVMAP_MODE_REFLECTION";return t=e.envMap&&e.envMapMode===CubeRefractionMapping?"ENVMAP_MODE_REFRACTION":t}function generateEnvMapBlendingDefine(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:t="ENVMAP_BLENDING_MIX";break;case AddOperation:t="ENVMAP_BLENDING_ADD"}return t}function generateCubeUVSize(e){var t,e=e.envMapCubeUVHeight;return null===e?null:(t=Math.log2(e)-2,e=1/e,{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:e,maxMip:t})}function WebGLProgram(e,t,r,i){const n=e.getContext();var a=r.defines,s=r.vertexShader,o=r.fragmentShader,l=generateShadowMapTypeDefine(r),h=generateEnvMapTypeDefine(r),c=generateEnvMapModeDefine(r),u=generateEnvMapBlendingDefine(r),d=generateCubeUVSize(r),p=r.isWebGL2?"":generateExtensions(r),a=generateDefines(a);const m=n.createProgram();let f,g,v=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(0<(f=[a].filter(filterEmptyLine).join("\n")).length&&(f+="\n"),0<(g=[p,a].filter(filterEmptyLine).join("\n")).length&&(g+="\n")):(f=[generatePrecision(r),"#define SHADER_NAME "+r.shaderName,a,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"",r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.morphColors&&r.isWebGL2?"#define USE_MORPHCOLORS":"",0<r.morphTargetsCount&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",0<r.morphTargetsCount&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+r.morphTextureStride:"",0<r.morphTargetsCount&&r.isWebGL2?"#define MORPHTARGETS_COUNT "+r.morphTargetsCount:"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),g=[p,generatePrecision(r),"#define SHADER_NAME "+r.shaderName,a,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+h:"",r.envMap?"#define "+c:"",r.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescence?"#define USE_IRIDESCENCE":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.sheen?"#define USE_SHEEN":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",r.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",r.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.opaque?"#define OPAQUE":"",ShaderChunk.encodings_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",r.outputEncoding),r.useDepthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),s=replaceClippingPlaneNums(replaceLightNums(resolveIncludes(s),r),r),o=replaceClippingPlaneNums(replaceLightNums(resolveIncludes(o),r),r),s=unrollLoops(s),o=unrollLoops(o),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(v="#version 300 es\n",f=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+f,g=["#define varying in",r.glslVersion===GLSL3?"":"layout(location = 0) out highp vec4 pc_fragColor;",r.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);p=v+f+s,a=v+g+o,h=WebGLShader(n,35633,p),c=WebGLShader(n,35632,a);if(n.attachShader(m,h),n.attachShader(m,c),void 0!==r.index0AttributeName?n.bindAttribLocation(m,0,r.index0AttributeName):!0===r.morphTargets&&n.bindAttribLocation(m,0,"position"),n.linkProgram(m),e.debug.checkShaderErrors){u=n.getProgramInfoLog(m).trim(),d=n.getShaderInfoLog(h).trim(),l=n.getShaderInfoLog(c).trim();let e=!0,t=!0;!1===n.getProgramParameter(m,35714)?(e=!1,s=getShaderErrors(n,h,"vertex"),o=getShaderErrors(n,c,"fragment"),console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+u+"\n"+s+"\n"+o)):""!==u?console.warn("THREE.WebGLProgram: Program Info Log:",u):""!==d&&""!==l||(t=!1),t&&(this.diagnostics={runnable:e,programLog:u,vertexShader:{log:d,prefix:f},fragmentShader:{log:l,prefix:g}})}n.deleteShader(h),n.deleteShader(c);let _;this.getUniforms=function(){return _=void 0===_?new WebGLUniforms(n,m):_};let y;return this.getAttributes=function(){return y=void 0===y?fetchAttributeLocations(n,m):y},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(m),this.program=void 0},this.name=r.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=m,this.vertexShader=h,this.fragmentShader=c,this}let _id=0;class WebGLShaderCache{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){var t=e.vertexShader,r=e.fragmentShader,t=this._getShaderStage(t),r=this._getShaderStage(r),e=this._getShaderCacheForMaterial(e);return!1===e.has(t)&&(e.add(t),t.usedTimes++),!1===e.has(r)&&(e.add(r),r.usedTimes++),this}remove(e){for(const t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){var t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){var t,r=this.shaderCache;return!1===r.has(e)&&(t=new WebGLShaderStage(e),r.set(e,t)),r.get(e)}}class WebGLShaderStage{constructor(e){this.id=_id++,this.code=e,this.usedTimes=0}}function WebGLPrograms(y,x,M,b,S,t,w){const a=new Layers,T=new WebGLShaderCache,s=[],A=S.isWebGL2,C=S.logarithmicDepthBuffer,E=S.vertexTextures;let L=S.precision;const R={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(e,t,r,i,n){var a=i.fog,s=n.geometry,i=e.isMeshStandardMaterial?i.environment:null,o=(i=(e.isMeshStandardMaterial?M:x).get(e.envMap||i))&&i.mapping===CubeUVReflectionMapping?i.image.height:null,l=R[e.type];null!==e.precision&&(L=S.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",L,"instead.");var h=void 0!==(h=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)?h.length:0;let c=0;void 0!==s.morphAttributes.position&&(c=1),void 0!==s.morphAttributes.normal&&(c=2),void 0!==s.morphAttributes.color&&(c=3);let u,d,p,m;l?(f=ShaderLib[l],u=f.vertexShader,d=f.fragmentShader):(u=e.vertexShader,d=e.fragmentShader,T.update(e),p=T.getVertexShaderID(e),m=T.getFragmentShaderID(e));var f=y.getRenderTarget(),g=0<e.alphaTest,v=0<e.clearcoat,_=0<e.iridescence;return{isWebGL2:A,shaderID:l,shaderName:e.type,vertexShader:u,fragmentShader:d,defines:e.defines,customVertexShaderID:p,customFragmentShaderID:m,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:L,instancing:!0===n.isInstancedMesh,instancingColor:!0===n.isInstancedMesh&&null!==n.instanceColor,supportsVertexTextures:E,outputEncoding:null===f?y.outputEncoding:!0===f.isXRRenderTarget?f.texture.encoding:LinearEncoding,map:!!e.map,matcap:!!e.matcap,envMap:!!i,envMapMode:i&&i.mapping,envMapCubeUVHeight:o,lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:e.normalMapType===TangentSpaceNormalMap,decodeVideoTexture:!!e.map&&!0===e.map.isVideoTexture&&e.map.encoding===sRGBEncoding,clearcoat:v,clearcoatMap:v&&!!e.clearcoatMap,clearcoatRoughnessMap:v&&!!e.clearcoatRoughnessMap,clearcoatNormalMap:v&&!!e.clearcoatNormalMap,iridescence:_,iridescenceMap:_&&!!e.iridescenceMap,iridescenceThicknessMap:_&&!!e.iridescenceThicknessMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,specularIntensityMap:!!e.specularIntensityMap,specularColorMap:!!e.specularColorMap,opaque:!1===e.transparent&&e.blending===NormalBlending,alphaMap:!!e.alphaMap,alphaTest:g,gradientMap:!!e.gradientMap,sheen:0<e.sheen,sheenColorMap:!!e.sheenColorMap,sheenRoughnessMap:!!e.sheenRoughnessMap,transmission:0<e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:!!e.normalMap&&!!s.attributes.tangent,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&!!s.attributes.color&&4===s.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.iridescenceMap||e.iridescenceThicknessMap||e.displacementMap||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||e.sheenColorMap||e.sheenRoughnessMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.iridescenceMap||e.iridescenceThicknessMap||0<e.transmission||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||0<e.sheen||e.sheenColorMap||e.sheenRoughnessMap||!e.displacementMap),fog:!!a,useFog:!0===e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:C,skinning:!0===n.isSkinnedMesh,morphTargets:void 0!==s.morphAttributes.position,morphNormals:void 0!==s.morphAttributes.normal,morphColors:void 0!==s.morphAttributes.color,morphTargetsCount:h,morphTextureStride:c,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:w.numPlanes,numClipIntersection:w.numIntersection,dithering:e.dithering,shadowMapEnabled:y.shadowMap.enabled&&0<r.length,shadowMapType:y.shadowMap.type,toneMapping:e.toneMapped?y.toneMapping:NoToneMapping,physicallyCorrectLights:y.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,doubleSided:e.side===DoubleSide,flipSided:e.side===BackSide,useDepthPacking:!!e.depthPacking,depthPacking:e.depthPacking||0,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:A||b.has("EXT_frag_depth"),rendererExtensionDrawBuffers:A||b.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:A||b.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(e){var t,r,i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const n in e.defines)i.push(n),i.push(e.defines[n]);return!1===e.isRawShaderMaterial&&((t=i).push((r=e).precision),t.push(r.outputEncoding),t.push(r.envMapMode),t.push(r.envMapCubeUVHeight),t.push(r.combine),t.push(r.vertexUvs),t.push(r.fogExp2),t.push(r.sizeAttenuation),t.push(r.morphTargetsCount),t.push(r.morphAttributeCount),t.push(r.numDirLights),t.push(r.numPointLights),t.push(r.numSpotLights),t.push(r.numHemiLights),t.push(r.numRectAreaLights),t.push(r.numDirLightShadows),t.push(r.numPointLightShadows),t.push(r.numSpotLightShadows),t.push(r.shadowMapType),t.push(r.toneMapping),t.push(r.numClippingPlanes),t.push(r.numClipIntersection),t.push(r.depthPacking),t=i,r=e,a.disableAll(),r.isWebGL2&&a.enable(0),r.supportsVertexTextures&&a.enable(1),r.instancing&&a.enable(2),r.instancingColor&&a.enable(3),r.map&&a.enable(4),r.matcap&&a.enable(5),r.envMap&&a.enable(6),r.lightMap&&a.enable(7),r.aoMap&&a.enable(8),r.emissiveMap&&a.enable(9),r.bumpMap&&a.enable(10),r.normalMap&&a.enable(11),r.objectSpaceNormalMap&&a.enable(12),r.tangentSpaceNormalMap&&a.enable(13),r.clearcoat&&a.enable(14),r.clearcoatMap&&a.enable(15),r.clearcoatRoughnessMap&&a.enable(16),r.clearcoatNormalMap&&a.enable(17),r.iridescence&&a.enable(18),r.iridescenceMap&&a.enable(19),r.iridescenceThicknessMap&&a.enable(20),r.displacementMap&&a.enable(21),r.specularMap&&a.enable(22),r.roughnessMap&&a.enable(23),r.metalnessMap&&a.enable(24),r.gradientMap&&a.enable(25),r.alphaMap&&a.enable(26),r.alphaTest&&a.enable(27),r.vertexColors&&a.enable(28),r.vertexAlphas&&a.enable(29),r.vertexUvs&&a.enable(30),r.vertexTangents&&a.enable(31),r.uvsVertexOnly&&a.enable(32),r.fog&&a.enable(33),t.push(a.mask),a.disableAll(),r.useFog&&a.enable(0),r.flatShading&&a.enable(1),r.logarithmicDepthBuffer&&a.enable(2),r.skinning&&a.enable(3),r.morphTargets&&a.enable(4),r.morphNormals&&a.enable(5),r.morphColors&&a.enable(6),r.premultipliedAlpha&&a.enable(7),r.shadowMapEnabled&&a.enable(8),r.physicallyCorrectLights&&a.enable(9),r.doubleSided&&a.enable(10),r.flipSided&&a.enable(11),r.useDepthPacking&&a.enable(12),r.dithering&&a.enable(13),r.specularIntensityMap&&a.enable(14),r.specularColorMap&&a.enable(15),r.transmission&&a.enable(16),r.transmissionMap&&a.enable(17),r.thicknessMap&&a.enable(18),r.sheen&&a.enable(19),r.sheenColorMap&&a.enable(20),r.sheenRoughnessMap&&a.enable(21),r.decodeVideoTexture&&a.enable(22),r.opaque&&a.enable(23),t.push(a.mask),i.push(y.outputEncoding)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(e){var t=R[e.type];let r;return r=t?(t=ShaderLib[t],UniformsUtils.clone(t.uniforms)):e.uniforms},acquireProgram:function(e,r){let i;for(let e=0,t=s.length;e<t;e++){var n=s[e];if(n.cacheKey===r){++(i=n).usedTimes;break}}return void 0===i&&(i=new WebGLProgram(y,r,e,t),s.push(i)),i},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=s.indexOf(e),s[t]=s[s.length-1],s.pop(),e.destroy())},releaseShaderCache:function(e){T.remove(e)},programs:s,dispose:function(){T.dispose()}}}function WebGLProperties(){let i=new WeakMap;return{get:function(e){let t=i.get(e);return void 0===t&&(t={},i.set(e,t)),t},remove:function(e){i.delete(e)},update:function(e,t,r){i.get(e)[t]=r},dispose:function(){i=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(){const o=[];let l=0;const s=[],h=[],c=[];function u(e,t,r,i,n,a){let s=o[l];return void 0===s?(s={id:e.id,object:e,geometry:t,material:r,groupOrder:i,renderOrder:e.renderOrder,z:n,group:a},o[l]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.groupOrder=i,s.renderOrder=e.renderOrder,s.z=n,s.group=a),l++,s}return{opaque:s,transmissive:h,transparent:c,init:function(){l=0,s.length=0,h.length=0,c.length=0},push:function(e,t,r,i,n,a){e=u(e,t,r,i,n,a),(0<r.transmission?h:!0===r.transparent?c:s).push(e)},unshift:function(e,t,r,i,n,a){e=u(e,t,r,i,n,a),(0<r.transmission?h:!0===r.transparent?c:s).unshift(e)},finish:function(){for(let e=l,t=o.length;e<t;e++){var r=o[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function(e,t){1<s.length&&s.sort(e||painterSortStable),1<h.length&&h.sort(t||reversePainterSortStable),1<c.length&&c.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(){let i=new WeakMap;return{get:function(e,t){let r;return!1===i.has(e)?(r=new WebGLRenderList,i.set(e,[r])):t>=i.get(e).length?(r=new WebGLRenderList,i.get(e).push(r)):r=i.get(e)[t],r},dispose:function(){i=new WeakMap}}}function UniformsCache(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Vector3,color:new Color};break;case"SpotLight":t={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":t={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return r[e.id]=t}}}function ShadowUniformsCache(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t}}}let nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(t,w){const T=new UniformsCache,A=ShadowUniformsCache(),C={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)C.probe.push(new Vector3);const p=new Vector3,m=new Matrix4,f=new Matrix4;return{setup:function(r,e){let i=0,n=0,a=0;for(let e=0;e<9;e++)C.probe[e].set(0,0,0);let s=0,o=0,l=0,h=0,c=0,u=0,d=0,p=0;r.sort(shadowCastingLightsFirst);var m=!0!==e?Math.PI:1;for(let e=0,t=r.length;e<t;e++){var f,g,v,_,y=r[e],x=y.color,M=y.intensity,b=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)i+=x.r*M*m,n+=x.g*M*m,a+=x.b*M*m;else if(y.isLightProbe)for(let e=0;e<9;e++)C.probe[e].addScaledVector(y.sh.coefficients[e],M);else y.isDirectionalLight?((v=T.get(y)).color.copy(y.color).multiplyScalar(y.intensity*m),y.castShadow&&(f=y.shadow,(g=A.get(y)).shadowBias=f.bias,g.shadowNormalBias=f.normalBias,g.shadowRadius=f.radius,g.shadowMapSize=f.mapSize,C.directionalShadow[s]=g,C.directionalShadowMap[s]=S,C.directionalShadowMatrix[s]=y.shadow.matrix,u++),C.directional[s]=v,s++):y.isSpotLight?((f=T.get(y)).position.setFromMatrixPosition(y.matrixWorld),f.color.copy(x).multiplyScalar(M*m),f.distance=b,f.coneCos=Math.cos(y.angle),f.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),f.decay=y.decay,y.castShadow&&(g=y.shadow,(v=A.get(y)).shadowBias=g.bias,v.shadowNormalBias=g.normalBias,v.shadowRadius=g.radius,v.shadowMapSize=g.mapSize,C.spotShadow[l]=v,C.spotShadowMap[l]=S,C.spotShadowMatrix[l]=y.shadow.matrix,p++),C.spot[l]=f,l++):y.isRectAreaLight?((b=T.get(y)).color.copy(x).multiplyScalar(M),b.halfWidth.set(.5*y.width,0,0),b.halfHeight.set(0,.5*y.height,0),C.rectArea[h]=b,h++):y.isPointLight?((x=T.get(y)).color.copy(y.color).multiplyScalar(y.intensity*m),x.distance=y.distance,x.decay=y.decay,y.castShadow&&(b=y.shadow,(_=A.get(y)).shadowBias=b.bias,_.shadowNormalBias=b.normalBias,_.shadowRadius=b.radius,_.shadowMapSize=b.mapSize,_.shadowCameraNear=b.camera.near,_.shadowCameraFar=b.camera.far,C.pointShadow[o]=_,C.pointShadowMap[o]=S,C.pointShadowMatrix[o]=y.shadow.matrix,d++),C.point[o]=x,o++):y.isHemisphereLight&&((b=T.get(y)).skyColor.copy(y.color).multiplyScalar(M*m),b.groundColor.copy(y.groundColor).multiplyScalar(M*m),C.hemi[c]=b,c++)}0<h&&(w.isWebGL2||!0===t.has("OES_texture_float_linear")?(C.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,C.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(C.rectAreaLTC1=UniformsLib.LTC_HALF_1,C.rectAreaLTC2=UniformsLib.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),C.ambient[0]=i,C.ambient[1]=n,C.ambient[2]=a,(e=C.hash).directionalLength===s&&e.pointLength===o&&e.spotLength===l&&e.rectAreaLength===h&&e.hemiLength===c&&e.numDirectionalShadows===u&&e.numPointShadows===d&&e.numSpotShadows===p||(C.directional.length=s,C.spot.length=l,C.rectArea.length=h,C.point.length=o,C.hemi.length=c,C.directionalShadow.length=u,C.directionalShadowMap.length=u,C.pointShadow.length=d,C.pointShadowMap.length=d,C.spotShadow.length=p,C.spotShadowMap.length=p,C.directionalShadowMatrix.length=u,C.pointShadowMatrix.length=d,C.spotShadowMatrix.length=p,e.directionalLength=s,e.pointLength=o,e.spotLength=l,e.rectAreaLength=h,e.hemiLength=c,e.numDirectionalShadows=u,e.numPointShadows=d,e.numSpotShadows=p,C.version=nextVersion++)},setupView:function(r,e){let i=0,n=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=r.length;e<t;e++){var h,c,u,d=r[e];d.isDirectionalLight?((h=C.directional[i]).direction.setFromMatrixPosition(d.matrixWorld),p.setFromMatrixPosition(d.target.matrixWorld),h.direction.sub(p),h.direction.transformDirection(l),i++):d.isSpotLight?((h=C.spot[a]).position.setFromMatrixPosition(d.matrixWorld),h.position.applyMatrix4(l),h.direction.setFromMatrixPosition(d.matrixWorld),p.setFromMatrixPosition(d.target.matrixWorld),h.direction.sub(p),h.direction.transformDirection(l),a++):d.isRectAreaLight?((c=C.rectArea[s]).position.setFromMatrixPosition(d.matrixWorld),c.position.applyMatrix4(l),f.identity(),m.copy(d.matrixWorld),m.premultiply(l),f.extractRotation(m),c.halfWidth.set(.5*d.width,0,0),c.halfHeight.set(0,.5*d.height,0),c.halfWidth.applyMatrix4(f),c.halfHeight.applyMatrix4(f),s++):d.isPointLight?((c=C.point[n]).position.setFromMatrixPosition(d.matrixWorld),c.position.applyMatrix4(l),n++):d.isHemisphereLight&&((u=C.hemi[o]).direction.setFromMatrixPosition(d.matrixWorld),u.direction.transformDirection(l),o++)}},state:C}}function WebGLRenderState(e,t){const r=new WebGLLights(e,t),i=[],n=[];return{init:function(){i.length=0,n.length=0},state:{lightsArray:i,shadowsArray:n,lights:r},setupLights:function(e){r.setup(i,e)},setupLightsView:function(e){r.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){n.push(e)}}}function WebGLRenderStates(i,n){let a=new WeakMap;return{get:function(e,t=0){let r;return!1===a.has(e)?(r=new WebGLRenderState(i,n),a.set(e,[r])):t>=a.get(e).length?(r=new WebGLRenderState(i,n),a.get(e).push(r)):r=a.get(e)[t],r},dispose:function(){a=new WeakMap}}}class MeshDepthMaterial extends Material{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class MeshDistanceMaterial extends Material{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const vertex="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragment="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function WebGLShadowMap(f,g,e){let v=new Frustum;const m=new Vector2,_=new Vector2,y=new Vector4,l=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),h=new MeshDistanceMaterial,c={},x=e.maxTextureSize,u={0:BackSide,1:FrontSide,2:DoubleSide},M=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vertex,fragmentShader:fragment}),b=M.clone();b.defines.HORIZONTAL_PASS=1;e=new BufferGeometry;e.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new Mesh(e,M),w=this;function T(r,i,e,t,n,a){let s=null;r=!0===e.isPointLight?r.customDistanceMaterial:r.customDepthMaterial;if(s=void 0!==r?r:!0===e.isPointLight?h:l,f.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&0<i.alphaTest){var r=s.uuid,o=i.uuid;let e=c[r],t=(void 0===e&&(e={},c[r]=e),e[o]);void 0===t&&(t=s.clone(),e[o]=t),s=t}return s.visible=i.visible,s.wireframe=i.wireframe,a===VSMShadowMap?s.side=null!==i.shadowSide?i.shadowSide:i.side:s.side=null!==i.shadowSide?i.shadowSide:u[i.side],s.alphaMap=i.alphaMap,s.alphaTest=i.alphaTest,s.clipShadows=i.clipShadows,s.clippingPlanes=i.clippingPlanes,s.clipIntersection=i.clipIntersection,s.displacementMap=i.displacementMap,s.displacementScale=i.displacementScale,s.displacementBias=i.displacementBias,s.wireframeLinewidth=i.wireframeLinewidth,s.linewidth=i.linewidth,!0===e.isPointLight&&!0===s.isMeshDistanceMaterial&&(s.referencePosition.setFromMatrixPosition(e.matrixWorld),s.nearDistance=t,s.farDistance=n),s}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(r,i,n){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)&&0!==r.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),a=f.getActiveMipmapLevel(),s=f.state;s.setBlending(NoBlending),s.buffers.color.setClear(1,1,1,1),s.buffers.depth.setTest(!0),s.setScissorTest(!1);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.shadow;if(void 0===l)console.warn("THREE.WebGLShadowMap:",o,"has no shadow.");else if(!1!==l.autoUpdate||!1!==l.needsUpdate){m.copy(l.mapSize);var h,c,u=l.getFrameExtents(),d=(m.multiply(u),_.copy(l.mapSize),(m.x>x||m.y>x)&&(m.x>x&&(_.x=Math.floor(x/u.x),m.x=_.x*u.x,l.mapSize.x=_.x),m.y>x)&&(_.y=Math.floor(x/u.y),m.y=_.y*u.y,l.mapSize.y=_.y),null===l.map&&(u=this.type!==VSMShadowMap?{minFilter:NearestFilter,magFilter:NearestFilter}:{},l.map=new WebGLRenderTarget(m.x,m.y,u),l.map.texture.name=o.name+".shadowMap",l.camera.updateProjectionMatrix()),f.setRenderTarget(l.map),f.clear(),l.getViewportCount());for(let e=0;e<d;e++){var p=l.getViewport(e);y.set(_.x*p.x,_.y*p.y,_.x*p.z,_.y*p.w),s.viewport(y),l.updateMatrices(o,e),v=l.getFrustum(),!function r(i,n,a,s,o){if(!1===i.visible)return;const e=i.layers.test(n.layers);if(e&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===VSMShadowMap)&&(!i.frustumCulled||v.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const h=g.update(i),c=i.material;if(Array.isArray(c)){const u=h.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=c[d.materialIndex];if(p&&p.visible){const m=T(i,p,s,a.near,a.far,o);f.renderBufferDirect(a,null,h,m,i,d)}}}else if(c.visible){const t=T(i,c,s,a.near,a.far,o);f.renderBufferDirect(a,null,h,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)r(l[e],n,a,s,o)}(i,n,l.camera,o,this.type)}!0!==l.isPointLightShadow&&this.type===VSMShadowMap&&(c=h=u=void 0,u=l,h=n,c=g.update(S),M.defines.VSM_SAMPLES!==u.blurSamples&&(M.defines.VSM_SAMPLES=u.blurSamples,b.defines.VSM_SAMPLES=u.blurSamples,M.needsUpdate=!0,b.needsUpdate=!0),null===u.mapPass&&(u.mapPass=new WebGLRenderTarget(m.x,m.y)),M.uniforms.shadow_pass.value=u.map.texture,M.uniforms.resolution.value=u.mapSize,M.uniforms.radius.value=u.radius,f.setRenderTarget(u.mapPass),f.clear(),f.renderBufferDirect(h,null,c,M,S,null),b.uniforms.shadow_pass.value=u.mapPass.texture,b.uniforms.resolution.value=u.mapSize,b.uniforms.radius.value=u.radius,f.setRenderTarget(u.map),f.clear(),f.renderBufferDirect(h,null,c,b,S,null)),l.needsUpdate=!1}}w.needsUpdate=!1,f.setRenderTarget(e,t,a)}}}function WebGLState(c,V,N){const r=N.isWebGL2;const i=new function(){let t=!1;const a=new Vector4;let r=null;const s=new Vector4(0,0,0,0);return{setMask:function(e){r===e||t||(c.colorMask(e,e,e,e),r=e)},setLocked:function(e){t=e},setClear:function(e,t,r,i,n){!0===n&&(e*=i,t*=i,r*=i),a.set(e,t,r,i),!1===s.equals(a)&&(c.clearColor(e,t,r,i),s.copy(a))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},n=new function(){let t=!1,r=null,i=null,n=null;return{setTest:function(e){(e?P:D)(2929)},setMask:function(e){r===e||t||(c.depthMask(e),r=e)},setFunc:function(e){if(i!==e){if(e)switch(e){case NeverDepth:c.depthFunc(512);break;case AlwaysDepth:c.depthFunc(519);break;case LessDepth:c.depthFunc(513);break;case LessEqualDepth:c.depthFunc(515);break;case EqualDepth:c.depthFunc(514);break;case GreaterEqualDepth:c.depthFunc(518);break;case GreaterDepth:c.depthFunc(516);break;case NotEqualDepth:c.depthFunc(517);break;default:c.depthFunc(515)}else c.depthFunc(515);i=e}},setLocked:function(e){t=e},setClear:function(e){n!==e&&(c.clearDepth(e),n=e)},reset:function(){t=!1,r=null,i=null,n=null}}},a=new function(){let t=!1,r=null,i=null,n=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?P:D)(2960)},setMask:function(e){r===e||t||(c.stencilMask(e),r=e)},setFunc:function(e,t,r){i===e&&n===t&&a===r||(c.stencilFunc(e,t,r),i=e,n=t,a=r)},setOp:function(e,t,r){s===e&&o===t&&l===r||(c.stencilOp(e,t,r),s=e,o=t,l=r)},setLocked:function(e){t=e},setClear:function(e){h!==e&&(c.clearStencil(e),h=e)},reset:function(){t=!1,r=null,i=null,n=null,a=null,s=null,o=null,l=null,h=null}}},G=new WeakMap,s=new WeakMap;let t={},o={},l=new WeakMap,O=[],h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,_=null,y=!1,x=null,M=null,b=null,S=null,w=null;const U=c.getParameter(35661);let T=!1,e=0;var A=c.getParameter(7938);-1!==A.indexOf("WebGL")?(e=parseFloat(/^WebGL (\d)/.exec(A)[1]),T=1<=e):-1!==A.indexOf("OpenGL ES")&&(e=parseFloat(/^OpenGL ES (\d)/.exec(A)[1]),T=2<=e);let C=null,E={};var A=c.getParameter(3088),z=c.getParameter(2978);const L=(new Vector4).fromArray(A),R=(new Vector4).fromArray(z);function k(e,t,r){var i=new Uint8Array(4),n=c.createTexture();c.bindTexture(e,n),c.texParameteri(e,10241,9728),c.texParameteri(e,10240,9728);for(let e=0;e<r;e++)c.texImage2D(t+e,0,6408,1,1,0,6408,5121,i);return n}const W={};function P(e){!0!==t[e]&&(c.enable(e),t[e]=!0)}function D(e){!1!==t[e]&&(c.disable(e),t[e]=!1)}W[3553]=k(3553,3553,1),W[34067]=k(34067,34069,6),i.setClear(0,0,0,1),n.setClear(1),a.setClear(0),P(2929),n.setFunc(LessEqualDepth),H(!1),$(CullFaceBack),P(2884),F(NoBlending);const I={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779},B=(r?(I[MinEquation]=32775,I[MaxEquation]=32776):null!==(A=V.get("EXT_blend_minmax"))&&(I[MinEquation]=A.MIN_EXT,I[MaxEquation]=A.MAX_EXT),{[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773});function F(e,t,r,i,n,a,s,o){if(e===NoBlending)!0===u&&(D(3042),u=!1);else if(!1===u&&(P(3042),u=!0),e!==CustomBlending){if(e!==d||o!==y){if(p===AddEquation&&g===AddEquation||(c.blendEquation(32774),p=AddEquation,g=AddEquation),o)switch(e){case NormalBlending:c.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:c.blendFunc(1,1);break;case SubtractiveBlending:c.blendFuncSeparate(0,769,0,1);break;case MultiplyBlending:c.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case NormalBlending:c.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:c.blendFunc(770,1);break;case SubtractiveBlending:c.blendFuncSeparate(0,769,0,1);break;case MultiplyBlending:c.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}m=null,f=null,v=null,_=null,d=e,y=o}}else n=n||t,a=a||r,s=s||i,t===p&&n===g||(c.blendEquationSeparate(I[t],I[n]),p=t,g=n),r===m&&i===f&&a===v&&s===_||(c.blendFuncSeparate(B[r],B[i],B[a],B[s]),m=r,f=i,v=a,_=s),d=e,y=null}function H(e){x!==e&&(e?c.frontFace(2304):c.frontFace(2305),x=e)}function $(e){e!==CullFaceNone?(P(2884),e!==M&&(e===CullFaceBack?c.cullFace(1029):e===CullFaceFront?c.cullFace(1028):c.cullFace(1032))):D(2884),M=e}function j(e,t,r){e?(P(32823),S===t&&w===r||(c.polygonOffset(t,r),S=t,w=r)):D(32823)}function q(e){void 0===e&&(e=33984+U-1),C!==e&&(c.activeTexture(e),C=e)}return{buffers:{color:i,depth:n,stencil:a},enable:P,disable:D,bindFramebuffer:function(e,t){return o[e]!==t&&(c.bindFramebuffer(e,t),o[e]=t,r&&(36009===e&&(o[36160]=t),36160===e)&&(o[36009]=t),!0)},drawBuffers:function(e,r){let i=O,t=!1;if(e)if(void 0===(i=l.get(r))&&(i=[],l.set(r,i)),e.isWebGLMultipleRenderTargets){r=e.texture;if(i.length!==r.length||36064!==i[0]){for(let e=0,t=r.length;e<t;e++)i[e]=36064+e;i.length=r.length,t=!0}}else 36064!==i[0]&&(i[0]=36064,t=!0);else 1029!==i[0]&&(i[0]=1029,t=!0);t&&(N.isWebGL2?c.drawBuffers(i):V.get("WEBGL_draw_buffers").drawBuffersWEBGL(i))},useProgram:function(e){return h!==e&&(c.useProgram(e),h=e,!0)},setBlending:F,setMaterial:function(e,t){(e.side===DoubleSide?D:P)(2884);let r=e.side===BackSide;H(r=t?!r:r),e.blending===NormalBlending&&!1===e.transparent?F(NoBlending):F(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),n.setFunc(e.depthFunc),n.setTest(e.depthTest),n.setMask(e.depthWrite),i.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),j(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?P:D)(32926)},setFlipSided:H,setCullFace:$,setLineWidth:function(e){e!==b&&(T&&c.lineWidth(e),b=e)},setPolygonOffset:j,setScissorTest:function(e){(e?P:D)(3089)},activeTexture:q,bindTexture:function(e,t){null===C&&q();let r=E[C];void 0===r&&(r={type:void 0,texture:void 0},E[C]=r),r.type===e&&r.texture===t||(c.bindTexture(e,t||W[e]),r.type=e,r.texture=t)},unbindTexture:function(){var e=E[C];void 0!==e&&void 0!==e.type&&(c.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{c.texImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{c.texImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(e,t){let r=s.get(t);void 0===r&&(r=new WeakMap,s.set(t,r)),void 0===r.get(e)&&(t=c.getUniformBlockIndex(t,e.name),r.set(e,t))},uniformBlockBinding:function(e,t){var r=s.get(t).get(e);G.get(e)!==r&&(c.uniformBlockBinding(t,r,e.__bindingPointIndex),G.set(e,r))},texStorage2D:function(){try{c.texStorage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{c.texStorage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{c.texSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{c.texSubImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{c.compressedTexSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===L.equals(e)&&(c.scissor(e.x,e.y,e.z,e.w),L.copy(e))},viewport:function(e){!1===R.equals(e)&&(c.viewport(e.x,e.y,e.z,e.w),R.copy(e))},reset:function(){c.disable(3042),c.disable(2884),c.disable(2929),c.disable(32823),c.disable(3089),c.disable(2960),c.disable(32926),c.blendEquation(32774),c.blendFunc(1,0),c.blendFuncSeparate(1,0,1,0),c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.depthMask(!0),c.depthFunc(513),c.clearDepth(1),c.stencilMask(4294967295),c.stencilFunc(519,0,4294967295),c.stencilOp(7680,7680,7680),c.clearStencil(0),c.cullFace(1029),c.frontFace(2305),c.polygonOffset(0,0),c.activeTexture(33984),c.bindFramebuffer(36160,null),!0===r&&(c.bindFramebuffer(36009,null),c.bindFramebuffer(36008,null)),c.useProgram(null),c.lineWidth(1),c.scissor(0,0,c.canvas.width,c.canvas.height),c.viewport(0,0,c.canvas.width,c.canvas.height),t={},C=null,E={},o={},l=new WeakMap,O=[],h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,_=null,y=!1,x=null,M=null,b=null,S=null,w=null,L.set(0,0,c.canvas.width,c.canvas.height),R.set(0,0,c.canvas.width,c.canvas.height),i.reset(),n.reset(),a.reset()}}}function WebGLTextures(_,s,y,x,f,M,g){const b=f.isWebGL2,t=f.maxTextures,N=f.maxCubemapSize,G=f.maxTextureSize,O=f.maxSamples,h=s.has("WEBGL_multisampled_render_to_texture")?s.get("WEBGL_multisampled_render_to_texture"):null,U=/OculusBrowser/g.test(navigator.userAgent),a=new WeakMap;let o;const l=new WeakMap;let r=!1;try{r="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function c(e,t){return r?new OffscreenCanvas(e,t):createElementNS("canvas")}function S(e,t,r,i){let n=1;return(n=e.width>i||i<e.height?i/Math.max(e.width,e.height):n)<1||!0===t?"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?(t=(i=t?floorPowerOfTwo:Math.floor)(n*e.width),i=i(n*e.height),void 0===o&&(o=c(t,i)),(r=r?c(t,i):o).width=t,r.height=i,r.getContext("2d").drawImage(e,0,0,t,i),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+t+"x"+i+")."),r):("data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e):e}function w(e){return isPowerOfTwo(e.width)&&isPowerOfTwo(e.height)}function T(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function A(e){_.generateMipmap(e)}function C(e,t,r,i,n=!1){if(!1===b)return t;if(null!==e){if(void 0!==_[e])return _[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return 6403===t&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r)&&(a=33321),33319===t&&(5126===r&&(a=33328),5131===r&&(a=33327),5121===r)&&(a=33323),33325!==(a=6408===t&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=i===sRGBEncoding&&!1===n?35907:32856),32819===r&&(a=32854),32820===r)?32855:a)&&33326!==a&&33327!==a&&33328!==a&&34842!==a&&34836!==a||s.get("EXT_color_buffer_float"),a}function E(e,t,r){return!0===T(e,r)||e.isFramebufferTexture&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&0<e.mipmaps.length?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function i(e){return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?9728:9729}function u(e){var t,r,i,n,e=e.target;e.removeEventListener("dispose",u),t=e,void 0!==(r=x.get(t)).__webglInit&&(i=t.source,(n=l.get(i))&&((r=n[r.__cacheKey]).usedTimes--,0===r.usedTimes&&d(t),0===Object.keys(n).length)&&l.delete(i),x.remove(t)),e.isVideoTexture&&a.delete(e)}function v(e){var e=e.target,r=(e.removeEventListener("dispose",v),e.texture),t=x.get(e),i=x.get(r);if(void 0!==i.__webglTexture&&(_.deleteTexture(i.__webglTexture),g.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)_.deleteFramebuffer(t.__webglFramebuffer[e]),t.__webglDepthbuffer&&_.deleteRenderbuffer(t.__webglDepthbuffer[e]);else{if(_.deleteFramebuffer(t.__webglFramebuffer),t.__webglDepthbuffer&&_.deleteRenderbuffer(t.__webglDepthbuffer),t.__webglMultisampledFramebuffer&&_.deleteFramebuffer(t.__webglMultisampledFramebuffer),t.__webglColorRenderbuffer)for(let e=0;e<t.__webglColorRenderbuffer.length;e++)t.__webglColorRenderbuffer[e]&&_.deleteRenderbuffer(t.__webglColorRenderbuffer[e]);t.__webglDepthRenderbuffer&&_.deleteRenderbuffer(t.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,t=r.length;e<t;e++){var n=x.get(r[e]);n.__webglTexture&&(_.deleteTexture(n.__webglTexture),g.memory.textures--),x.remove(r[e])}x.remove(r),x.remove(e)}function d(e){var t=x.get(e),e=(_.deleteTexture(t.__webglTexture),e.source);delete l.get(e)[t.__cacheKey],g.memory.textures--}let n=0;function p(e,t){var r,i=x.get(e);if(e.isVideoTexture&&(r=e,n=g.render.frame,a.get(r)!==n)&&(a.set(r,n),r.update()),!1===e.isRenderTargetTexture&&0<e.version&&i.__version!==e.version){var n=e.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void P(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}y.activeTexture(33984+t),y.bindTexture(3553,i.__webglTexture)}const m={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},L={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function R(e,t,r){r?(_.texParameteri(e,10242,m[t.wrapS]),_.texParameteri(e,10243,m[t.wrapT]),32879!==e&&35866!==e||_.texParameteri(e,32882,m[t.wrapR]),_.texParameteri(e,10240,L[t.magFilter]),_.texParameteri(e,10241,L[t.minFilter])):(_.texParameteri(e,10242,33071),_.texParameteri(e,10243,33071),32879!==e&&35866!==e||_.texParameteri(e,32882,33071),t.wrapS===ClampToEdgeWrapping&&t.wrapT===ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),_.texParameteri(e,10240,i(t.magFilter)),_.texParameteri(e,10241,i(t.minFilter)),t.minFilter!==NearestFilter&&t.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===s.has("EXT_texture_filter_anisotropic")&&(r=s.get("EXT_texture_filter_anisotropic"),t.type===FloatType&&!1===s.has("OES_texture_float_linear")||!1===b&&t.type===HalfFloatType&&!1===s.has("OES_texture_half_float_linear")||(1<t.anisotropy||x.get(t).__currentAnisotropy)&&(_.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,f.getMaxAnisotropy())),x.get(t).__currentAnisotropy=t.anisotropy))}function z(e,t){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",u));var i=t.source;let n=l.get(i);void 0===n&&(n={},l.set(i,n));(i=[]).push((a=t).wrapS),i.push(a.wrapT),i.push(a.magFilter),i.push(a.minFilter),i.push(a.anisotropy),i.push(a.internalFormat),i.push(a.format),i.push(a.type),i.push(a.generateMipmaps),i.push(a.premultiplyAlpha),i.push(a.flipY),i.push(a.unpackAlignment),i.push(a.encoding);var a=i.join();return a!==e.__cacheKey&&(void 0===n[a]&&(n[a]={texture:_.createTexture(),usedTimes:0},g.memory.textures++,r=!0),n[a].usedTimes++,void 0!==(i=n[e.__cacheKey])&&(n[e.__cacheKey].usedTimes--,0===i.usedTimes)&&d(t),e.__cacheKey=a,e.__webglTexture=n[a].texture),r}function P(e,a,s){let t=3553;a.isDataArrayTexture&&(t=35866),a.isData3DTexture&&(t=32879);var o=z(e,a),l=a.source;if(y.activeTexture(33984+s),y.bindTexture(t,e.__webglTexture),l.version!==l.__currentVersion||!0===o){_.pixelStorei(37440,a.flipY),_.pixelStorei(37441,a.premultiplyAlpha),_.pixelStorei(3317,a.unpackAlignment),_.pixelStorei(37443,0);s=a;var s=!b&&(s.wrapS!==ClampToEdgeWrapping||s.wrapT!==ClampToEdgeWrapping||s.minFilter!==NearestFilter&&s.minFilter!==LinearFilter)&&!1===w(a.image),h=w(s=k(a,S(a.image,s,!1,G)))||b,c=M.convert(a.format,a.encoding);let i=M.convert(a.type),n=C(a.internalFormat,c,i,a.encoding,a.isVideoTexture);R(t,a,h);let r;var u=a.mipmaps,d=b&&!0!==a.isVideoTexture,o=void 0===l.__currentVersion||!0===o,p=E(a,s,h);if(a.isDepthTexture)n=6402,b?n=a.type===FloatType?36012:a.type===UnsignedIntType?33190:a.type===UnsignedInt248Type?35056:33189:a.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===DepthFormat&&6402===n&&a.type!==UnsignedShortType&&a.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=UnsignedIntType,i=M.convert(a.type)),a.format===DepthStencilFormat&&6402===n&&(n=34041,a.type!==UnsignedInt248Type)&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=UnsignedInt248Type,i=M.convert(a.type)),o&&(d?y.texStorage2D(3553,1,n,s.width,s.height):y.texImage2D(3553,0,n,s.width,s.height,0,c,i,null));else if(a.isDataTexture)if(0<u.length&&h){d&&o&&y.texStorage2D(3553,p,n,u[0].width,u[0].height);for(let e=0,t=u.length;e<t;e++)r=u[e],d?y.texSubImage2D(3553,e,0,0,r.width,r.height,c,i,r.data):y.texImage2D(3553,e,n,r.width,r.height,0,c,i,r.data);a.generateMipmaps=!1}else d?(o&&y.texStorage2D(3553,p,n,s.width,s.height),y.texSubImage2D(3553,0,0,0,s.width,s.height,c,i,s.data)):y.texImage2D(3553,0,n,s.width,s.height,0,c,i,s.data);else if(a.isCompressedTexture){d&&o&&y.texStorage2D(3553,p,n,u[0].width,u[0].height);for(let e=0,t=u.length;e<t;e++)r=u[e],a.format!==RGBAFormat?null!==c?d?y.compressedTexSubImage2D(3553,e,0,0,r.width,r.height,c,r.data):y.compressedTexImage2D(3553,e,n,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):d?y.texSubImage2D(3553,e,0,0,r.width,r.height,c,i,r.data):y.texImage2D(3553,e,n,r.width,r.height,0,c,i,r.data)}else if(a.isDataArrayTexture)d?(o&&y.texStorage3D(35866,p,n,s.width,s.height,s.depth),y.texSubImage3D(35866,0,0,0,0,s.width,s.height,s.depth,c,i,s.data)):y.texImage3D(35866,0,n,s.width,s.height,s.depth,0,c,i,s.data);else if(a.isData3DTexture)d?(o&&y.texStorage3D(32879,p,n,s.width,s.height,s.depth),y.texSubImage3D(32879,0,0,0,0,s.width,s.height,s.depth,c,i,s.data)):y.texImage3D(32879,0,n,s.width,s.height,s.depth,0,c,i,s.data);else if(a.isFramebufferTexture){if(o)if(d)y.texStorage2D(3553,p,n,s.width,s.height);else{let t=s.width,r=s.height;for(let e=0;e<p;e++)y.texImage2D(3553,e,n,t,r,0,c,i,null),t>>=1,r>>=1}}else if(0<u.length&&h){d&&o&&y.texStorage2D(3553,p,n,u[0].width,u[0].height);for(let e=0,t=u.length;e<t;e++)r=u[e],d?y.texSubImage2D(3553,e,0,0,c,i,r):y.texImage2D(3553,e,n,c,i,r);a.generateMipmaps=!1}else d?(o&&y.texStorage2D(3553,p,n,s.width,s.height),y.texSubImage2D(3553,0,0,0,c,i,s)):y.texImage2D(3553,0,n,c,i,s);T(a,h)&&A(t),l.__currentVersion=l.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function D(e,t,r,i,n){var a=M.convert(r.format,r.encoding),s=M.convert(r.type),o=C(r.internalFormat,a,s,r.encoding);x.get(t).__hasExternalTextures||(32879===n||35866===n?y.texImage3D(n,0,o,t.width,t.height,t.depth,0,a,s,null):y.texImage2D(n,0,o,t.width,t.height,0,a,s,null)),y.bindFramebuffer(36160,e),V(t)?h.framebufferTexture2DMultisampleEXT(36160,i,n,x.get(r).__webglTexture,0,F(t)):_.framebufferTexture2D(36160,i,n,x.get(r).__webglTexture,0),y.bindFramebuffer(36160,null)}function I(t,r,i){if(_.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let e=33189;i||V(r)?((n=r.depthTexture)&&n.isDepthTexture&&(n.type===FloatType?e=36012:n.type===UnsignedIntType&&(e=33190)),n=F(r),V(r)?h.renderbufferStorageMultisampleEXT(36161,n,e,r.width,r.height):_.renderbufferStorageMultisample(36161,n,e,r.width,r.height)):_.renderbufferStorage(36161,e,r.width,r.height),_.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){var n=F(r);i&&!1===V(r)?_.renderbufferStorageMultisample(36161,n,35056,r.width,r.height):V(r)?h.renderbufferStorageMultisampleEXT(36161,n,35056,r.width,r.height):_.renderbufferStorage(36161,34041,r.width,r.height),_.framebufferRenderbuffer(36160,33306,36161,t)}else{var a=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let e=0;e<a.length;e++){var s=a[e],o=M.convert(s.format,s.encoding),l=M.convert(s.type),o=C(s.internalFormat,o,l,s.encoding),l=F(r);i&&!1===V(r)?_.renderbufferStorageMultisample(36161,l,o,r.width,r.height):V(r)?h.renderbufferStorageMultisampleEXT(36161,l,o,r.width,r.height):_.renderbufferStorage(36161,o,r.width,r.height)}}_.bindRenderbuffer(36161,null)}function B(t){var r=x.get(t),e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(e)throw new Error("target.depthTexture not supported in Cube render targets");var i=r.__webglFramebuffer,n=t;if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(y.bindFramebuffer(36160,i),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");x.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),p(n.depthTexture,0);var i=x.get(n.depthTexture).__webglTexture,a=F(n);if(n.depthTexture.format===DepthFormat)V(n)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,i,0,a):_.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==DepthStencilFormat)throw new Error("Unknown depthTexture format");V(n)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,i,0,a):_.framebufferTexture2D(36160,33306,3553,i,0)}}else if(e){r.__webglDepthbuffer=[];for(let e=0;e<6;e++)y.bindFramebuffer(36160,r.__webglFramebuffer[e]),r.__webglDepthbuffer[e]=_.createRenderbuffer(),I(r.__webglDepthbuffer[e],t,!1)}else y.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=_.createRenderbuffer(),I(r.__webglDepthbuffer,t,!1);y.bindFramebuffer(36160,null)}function F(e){return Math.min(O,e.samples)}function V(e){var t=x.get(e);return b&&0<e.samples&&!0===s.has("WEBGL_multisampled_render_to_texture")&&!1!==t.__useRenderToTexture}function k(e,t){var r=e.encoding,i=e.format,n=e.type;return!0!==e.isCompressedTexture&&!0!==e.isVideoTexture&&e.format!==_SRGBAFormat&&r!==LinearEncoding&&(r===sRGBEncoding?!1===b?!0===s.has("EXT_sRGB")&&i===RGBAFormat?(e.format=_SRGBAFormat,e.minFilter=LinearFilter,e.generateMipmaps=!1):t=ImageUtils.sRGBToLinear(t):i===RGBAFormat&&n===UnsignedByteType||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),t}this.allocateTextureUnit=function(){var e=n;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),n+=1,e},this.resetTextureUnits=function(){n=0},this.setTexture2D=p,this.setTexture2DArray=function(e,t){var r=x.get(e);0<e.version&&r.__version!==e.version?P(r,e,t):(y.activeTexture(33984+t),y.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){var r=x.get(e);0<e.version&&r.__version!==e.version?P(r,e,t):(y.activeTexture(33984+t),y.bindTexture(32879,r.__webglTexture))},this.setTextureCube=function(t,e){var r=x.get(t);if(0<t.version&&r.__version!==t.version){var i=r,n=t,t=e;if(6===n.image.length){var a=z(i,n),s=n.source;if(y.activeTexture(33984+t),y.bindTexture(34067,i.__webglTexture),s.version!==s.__currentVersion||!0===a){_.pixelStorei(37440,n.flipY),_.pixelStorei(37441,n.premultiplyAlpha),_.pixelStorei(3317,n.unpackAlignment),_.pixelStorei(37443,0);var o=n.isCompressedTexture||n.image[0].isCompressedTexture,l=n.image[0]&&n.image[0].isDataTexture,h=[];for(let e=0;e<6;e++)h[e]=o||l?l?n.image[e].image:n.image[e]:S(n.image[e],!1,!0,N),h[e]=k(n,h[e]);var t=h[0],c=w(t)||b,u=M.convert(n.format,n.encoding),d=M.convert(n.type),p=C(n.internalFormat,u,d,n.encoding),m=b&&!0!==n.isVideoTexture,a=void 0===s.__currentVersion||!0===a;let e=E(n,t,c);R(34067,n,c);let r;if(o){m&&a&&y.texStorage2D(34067,e,p,t.width,t.height);for(let t=0;t<6;t++){r=h[t].mipmaps;for(let e=0;e<r.length;e++){var f=r[e];n.format!==RGBAFormat?null!==u?m?y.compressedTexSubImage2D(34069+t,e,0,0,f.width,f.height,u,f.data):y.compressedTexImage2D(34069+t,e,p,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):m?y.texSubImage2D(34069+t,e,0,0,f.width,f.height,u,d,f.data):y.texImage2D(34069+t,e,p,f.width,f.height,0,u,d,f.data)}}}else{r=n.mipmaps,m&&a&&(0<r.length&&e++,y.texStorage2D(34067,e,p,h[0].width,h[0].height));for(let t=0;t<6;t++)if(l){m?y.texSubImage2D(34069+t,0,0,0,h[t].width,h[t].height,u,d,h[t].data):y.texImage2D(34069+t,0,p,h[t].width,h[t].height,0,u,d,h[t].data);for(let e=0;e<r.length;e++){var g=r[e].image[t].image;m?y.texSubImage2D(34069+t,e+1,0,0,g.width,g.height,u,d,g.data):y.texImage2D(34069+t,e+1,p,g.width,g.height,0,u,d,g.data)}}else{m?y.texSubImage2D(34069+t,0,0,0,u,d,h[t]):y.texImage2D(34069+t,0,p,u,d,h[t]);for(let e=0;e<r.length;e++){var v=r[e];m?y.texSubImage2D(34069+t,e+1,0,0,u,d,v.image[t]):y.texImage2D(34069+t,e+1,p,u,d,v.image[t])}}}T(n,c)&&A(34067),s.__currentVersion=s.version,n.onUpdate&&n.onUpdate(n)}i.__version=n.version}}else y.activeTexture(33984+e),y.bindTexture(34067,r.__webglTexture)},this.rebindTextures=function(e,t,r){var i=x.get(e);void 0!==t&&D(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==r&&B(e)},this.setupRenderTarget=function(r){const t=r.texture;var i=x.get(r),n=x.get(t),e=(r.addEventListener("dispose",v),!0!==r.isWebGLMultipleRenderTargets&&(void 0===n.__webglTexture&&(n.__webglTexture=_.createTexture()),n.__version=t.version,g.memory.textures++),!0===r.isWebGLCubeRenderTarget),a=!0===r.isWebGLMultipleRenderTargets,s=w(r)||b;if(e){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=_.createFramebuffer()}else{if(i.__webglFramebuffer=_.createFramebuffer(),a)if(f.drawBuffers){var o=r.texture;for(let e=0,t=o.length;e<t;e++){var l=x.get(o[e]);void 0===l.__webglTexture&&(l.__webglTexture=_.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(b&&0<r.samples&&!1===V(r)){var h=a?t:[t];i.__webglMultisampledFramebuffer=_.createFramebuffer(),i.__webglColorRenderbuffer=[],y.bindFramebuffer(36160,i.__webglMultisampledFramebuffer);for(let e=0;e<h.length;e++){const t=h[e];i.__webglColorRenderbuffer[e]=_.createRenderbuffer(),_.bindRenderbuffer(36161,i.__webglColorRenderbuffer[e]);var c=M.convert(t.format,t.encoding),u=M.convert(t.type),c=C(t.internalFormat,c,u,t.encoding),u=F(r);_.renderbufferStorageMultisample(36161,u,c,r.width,r.height),_.framebufferRenderbuffer(36160,36064+e,36161,i.__webglColorRenderbuffer[e])}_.bindRenderbuffer(36161,null),r.depthBuffer&&(i.__webglDepthRenderbuffer=_.createRenderbuffer(),I(i.__webglDepthRenderbuffer,r,!0)),y.bindFramebuffer(36160,null)}}if(e){y.bindTexture(34067,n.__webglTexture),R(34067,t,s);for(let e=0;e<6;e++)D(i.__webglFramebuffer[e],r,t,36064,34069+e);T(t,s)&&A(34067)}else if(a){var d=r.texture;for(let e=0,t=d.length;e<t;e++){var p=d[e],m=x.get(p);y.bindTexture(3553,m.__webglTexture),R(3553,p,s),D(i.__webglFramebuffer,r,p,36064+e,3553),T(p,s)&&A(3553)}}else{let e=3553;(r.isWebGL3DRenderTarget||r.isWebGLArrayRenderTarget)&&(b?e=r.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),y.bindTexture(e,n.__webglTexture),R(e,t,s),D(i.__webglFramebuffer,r,t,36064,e),T(t,s)&&A(e)}y.unbindTexture(),r.depthBuffer&&B(r)},this.updateRenderTargetMipmap=function(r){var i=w(r)||b,n=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let e=0,t=n.length;e<t;e++){var a,s=n[e];T(s,i)&&(a=r.isWebGLCubeRenderTarget?34067:3553,s=x.get(s).__webglTexture,y.bindTexture(a,s),A(a),y.unbindTexture())}},this.updateMultisampleRenderTarget=function(r){if(b&&0<r.samples&&!1===V(r)){var i=r.isWebGLMultipleRenderTargets?r.texture:[r.texture],n=r.width,a=r.height;let t=16384;var s=[],o=r.stencilBuffer?33306:36096,l=x.get(r),h=!0===r.isWebGLMultipleRenderTargets;if(h)for(let e=0;e<i.length;e++)y.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),_.framebufferRenderbuffer(36160,36064+e,36161,null),y.bindFramebuffer(36160,l.__webglFramebuffer),_.framebufferTexture2D(36009,36064+e,3553,null,0);y.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),y.bindFramebuffer(36009,l.__webglFramebuffer);for(let e=0;e<i.length;e++){s.push(36064+e),r.depthBuffer&&s.push(o);var c=void 0!==l.__ignoreDepthValues&&l.__ignoreDepthValues;!1===c&&(r.depthBuffer&&(t|=256),r.stencilBuffer)&&(t|=1024),h&&_.framebufferRenderbuffer(36008,36064,36161,l.__webglColorRenderbuffer[e]),!0===c&&(_.invalidateFramebuffer(36008,[o]),_.invalidateFramebuffer(36009,[o])),h&&(c=x.get(i[e]).__webglTexture,_.framebufferTexture2D(36009,36064,3553,c,0)),_.blitFramebuffer(0,0,n,a,0,0,n,a,t,9728),U&&_.invalidateFramebuffer(36008,s)}if(y.bindFramebuffer(36008,null),y.bindFramebuffer(36009,null),h)for(let e=0;e<i.length;e++){y.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),_.framebufferRenderbuffer(36160,36064+e,36161,l.__webglColorRenderbuffer[e]);var u=x.get(i[e]).__webglTexture;y.bindFramebuffer(36160,l.__webglFramebuffer),_.framebufferTexture2D(36009,36064+e,3553,u,0)}y.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=D,this.useMultisampledRTT=V}function WebGLUtils(i,n,e){const a=e.isWebGL2;return{convert:function(e,t=null){let r;if(e===UnsignedByteType)return 5121;if(e===UnsignedShort4444Type)return 32819;if(e===UnsignedShort5551Type)return 32820;if(e===ByteType)return 5120;if(e===ShortType)return 5122;if(e===UnsignedShortType)return 5123;if(e===IntType)return 5124;if(e===UnsignedIntType)return 5125;if(e===FloatType)return 5126;if(e===HalfFloatType)return a?5131:null!==(r=n.get("OES_texture_half_float"))?r.HALF_FLOAT_OES:null;if(e===AlphaFormat)return 6406;if(e===RGBAFormat)return 6408;if(e===LuminanceFormat)return 6409;if(e===LuminanceAlphaFormat)return 6410;if(e===DepthFormat)return 6402;if(e===DepthStencilFormat)return 34041;if(e===RedFormat)return 6403;if(e===RGBFormat)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(e===_SRGBAFormat)return null!==(r=n.get("EXT_sRGB"))?r.SRGB_ALPHA_EXT:null;if(e===RedIntegerFormat)return 36244;if(e===RGFormat)return 33319;if(e===RGIntegerFormat)return 33320;if(e===RGBAIntegerFormat)return 36249;if(e===RGB_S3TC_DXT1_Format||e===RGBA_S3TC_DXT1_Format||e===RGBA_S3TC_DXT3_Format||e===RGBA_S3TC_DXT5_Format)if(t===sRGBEncoding){if(null===(r=n.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(e===RGB_S3TC_DXT1_Format)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(r=n.get("WEBGL_compressed_texture_s3tc")))return null;if(e===RGB_S3TC_DXT1_Format)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===RGB_PVRTC_4BPPV1_Format||e===RGB_PVRTC_2BPPV1_Format||e===RGBA_PVRTC_4BPPV1_Format||e===RGBA_PVRTC_2BPPV1_Format){if(null===(r=n.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===RGB_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===RGB_ETC1_Format)return null!==(r=n.get("WEBGL_compressed_texture_etc1"))?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===RGB_ETC2_Format||e===RGBA_ETC2_EAC_Format){if(null===(r=n.get("WEBGL_compressed_texture_etc")))return null;if(e===RGB_ETC2_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===RGBA_ETC2_EAC_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(e===RGBA_ASTC_4x4_Format||e===RGBA_ASTC_5x4_Format||e===RGBA_ASTC_5x5_Format||e===RGBA_ASTC_6x5_Format||e===RGBA_ASTC_6x6_Format||e===RGBA_ASTC_8x5_Format||e===RGBA_ASTC_8x6_Format||e===RGBA_ASTC_8x8_Format||e===RGBA_ASTC_10x5_Format||e===RGBA_ASTC_10x6_Format||e===RGBA_ASTC_10x8_Format||e===RGBA_ASTC_10x10_Format||e===RGBA_ASTC_12x10_Format||e===RGBA_ASTC_12x12_Format){if(null===(r=n.get("WEBGL_compressed_texture_astc")))return null;if(e===RGBA_ASTC_4x4_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===RGBA_ASTC_5x4_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===RGBA_ASTC_5x5_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===RGBA_ASTC_6x5_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===RGBA_ASTC_6x6_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===RGBA_ASTC_8x5_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===RGBA_ASTC_8x6_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===RGBA_ASTC_8x8_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===RGBA_ASTC_10x5_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===RGBA_ASTC_10x6_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===RGBA_ASTC_10x8_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===RGBA_ASTC_10x10_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===RGBA_ASTC_12x10_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===RGBA_ASTC_12x12_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===RGBA_BPTC_Format){if(null===(r=n.get("EXT_texture_compression_bptc")))return null;if(e===RGBA_BPTC_Format)return t===sRGBEncoding?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return e===UnsignedInt248Type?a?34042:null!==(r=n.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:null:void 0!==i[e]?i[e]:null}}}class ArrayCamera extends PerspectiveCamera{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Group extends Object3D{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _moveEvent={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let i=null,n=null,a=null;var s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;for(const p of e.hand.values()){var h=t.getJointPose(p,r),c=(void 0===l.joints[p.jointName]&&((c=new Group).matrixAutoUpdate=!1,c.visible=!1,l.joints[p.jointName]=c,l.add(c)),l.joints[p.jointName]);null!==h&&(c.matrix.fromArray(h.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.jointRadius=h.radius),c.visible=null!==h}var u=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],u=u.position.distanceTo(d.position);l.inputState.pinching&&.025<u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&u<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,r))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1);null!==s&&null!==(i=null===(i=t.getPose(e.targetRaySpace,r))&&null!==n?n:i)&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class DepthTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,h){if((h=void 0!==h?h:DepthFormat)!==DepthFormat&&h!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,n,a,s,o,h,r=void 0===(r=void 0===r&&h===DepthFormat?UnsignedIntType:r)&&h===DepthStencilFormat?UnsignedInt248Type:r,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:NearestFilter,this.minFilter=void 0!==o?o:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}}class WebXRManager extends EventDispatcher{constructor(o,n){super();const r=this;let m=null,a=1,l=null,t="local-floor",h=null,c=null,u=null,d=null,p=null,f=null;const s=n.getContextAttributes();let e=null,g=null;const v=[],_=[],y=new PerspectiveCamera,x=(y.layers.enable(1),y.viewport=new Vector4,new PerspectiveCamera),M=(x.layers.enable(2),x.viewport=new Vector4,[y,x]),b=new ArrayCamera;b.layers.enable(1),b.layers.enable(2);let S=null,w=null;function T(e){var t=_.indexOf(e.inputSource);-1!==t&&void 0!==(t=v[t])&&t.dispatchEvent({type:e.type,data:e.inputSource})}function A(){m.removeEventListener("select",T),m.removeEventListener("selectstart",T),m.removeEventListener("selectend",T),m.removeEventListener("squeeze",T),m.removeEventListener("squeezestart",T),m.removeEventListener("squeezeend",T),m.removeEventListener("end",A),m.removeEventListener("inputsourceschange",C);for(let e=0;e<v.length;e++){var t=_[e];null!==t&&(_[e]=null,v[e].disconnect(t))}S=null,w=null,o.setRenderTarget(e),p=null,d=null,u=null,m=null,g=null,D.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function C(r){for(let e=0;e<r.removed.length;e++){var t=r.removed[e],i=_.indexOf(t);0<=i&&(_[i]=null,v[i].dispatchEvent({type:"disconnected",data:t}))}for(let e=0;e<r.added.length;e++){var n=r.added[e];let t=_.indexOf(n);if(-1===t){for(let e=0;e<v.length;e++){if(e>=_.length){_.push(n),t=e;break}if(null===_[e]){_[e]=n,t=e;break}}if(-1===t)break}var a=v[t];a&&a.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=v[e];return void 0===t&&(t=new WebXRController,v[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=v[e];return void 0===t&&(t=new WebXRController,v[e]=t),t.getGripSpace()},this.getHand=function(e){let t=v[e];return void 0===t&&(t=new WebXRController,v[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){t=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(e){h=e},this.getBaseLayer=function(){return null!==d?d:p},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return m},this.setSession=async function(i){if(null!==(m=i)){if(e=o.getRenderTarget(),m.addEventListener("select",T),m.addEventListener("selectstart",T),m.addEventListener("selectend",T),m.addEventListener("squeeze",T),m.addEventListener("squeezestart",T),m.addEventListener("squeezeend",T),m.addEventListener("end",A),m.addEventListener("inputsourceschange",C),!0!==s.xrCompatible&&await n.makeXRCompatible(),void 0===m.renderState.layers||!1===o.capabilities.isWebGL2){i={antialias:void 0!==m.renderState.layers||s.antialias,alpha:s.alpha,depth:s.depth,stencil:s.stencil,framebufferScaleFactor:a};p=new XRWebGLLayer(m,n,i),m.updateRenderState({baseLayer:p}),g=new WebGLRenderTarget(p.framebufferWidth,p.framebufferHeight,{format:RGBAFormat,type:UnsignedByteType,encoding:o.outputEncoding})}else{let e=null,t=null,r=null;s.depth&&(r=s.stencil?35056:33190,e=s.stencil?DepthStencilFormat:DepthFormat,t=s.stencil?UnsignedInt248Type:UnsignedIntType);i={colorFormat:32856,depthFormat:r,scaleFactor:a};u=new XRWebGLBinding(m,n),d=u.createProjectionLayer(i),m.updateRenderState({layers:[d]}),g=new WebGLRenderTarget(d.textureWidth,d.textureHeight,{format:RGBAFormat,type:UnsignedByteType,depthTexture:new DepthTexture(d.textureWidth,d.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:s.stencil,encoding:o.outputEncoding,samples:s.antialias?4:0}),o.properties.get(g).__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),h=null,l=await m.requestReferenceSpace(t),D.setContext(m),D.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};const E=new Vector3,L=new Vector3;function R(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==m){b.near=x.near=y.near=e.near,b.far=x.far=y.far=e.far,S===b.near&&w===b.far||(m.updateRenderState({depthNear:b.near,depthFar:b.far}),S=b.near,w=b.far);var t=e.parent,r=b.cameras;R(b,t);for(let e=0;e<r.length;e++)R(r[e],t);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),e.position.copy(b.position),e.quaternion.copy(b.quaternion),e.scale.copy(b.scale),e.matrix.copy(b.matrix),e.matrixWorld.copy(b.matrixWorld);var i,n,a,s,o,l,h,c,u,d,p=e.children;for(let e=0,t=p.length;e<t;e++)p[e].updateMatrixWorld(!0);2===r.length?(e=b,i=y,n=x,E.setFromMatrixPosition(i.matrixWorld),L.setFromMatrixPosition(n.matrixWorld),a=E.distanceTo(L),s=i.projectionMatrix.elements,n=n.projectionMatrix.elements,o=s[14]/(s[10]-1),l=s[14]/(s[10]+1),h=(s[9]+1)/s[5],c=(s[9]-1)/s[5],s=(s[8]-1)/s[0],n=(n[8]+1)/n[0],u=o*s,d=o*n,s=(n=a/(n-s))*-s,i.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(s),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),i=o+n,o=l+n,e.projectionMatrix.makePerspective(u-s,a-s+d,h*l/o*i,c*l/o*i,i,o)):b.projectionMatrix.copy(y.projectionMatrix)}},this.getCamera=function(){return b},this.getFoveation=function(){return null!==d?d.fixedFoveation:null!==p?p.fixedFoveation:void 0},this.setFoveation=function(e){null!==d&&(d.fixedFoveation=e),null!==p&&void 0!==p.fixedFoveation&&(p.fixedFoveation=e)};let P=null;const D=new WebGLAnimation;D.setAnimationLoop(function(e,t){if(c=t.getViewerPose(h||l),f=t,null!==c){var n=c.views;null!==p&&(o.setRenderTargetFramebuffer(g,p.framebuffer),o.setRenderTarget(g));let i=!1;n.length!==b.cameras.length&&(b.cameras.length=0,i=!0);for(let r=0;r<n.length;r++){var a,s=n[r];let e=null,t=(null!==p?e=p.getViewport(s):(a=u.getViewSubImage(d,s),e=a.viewport,0===r&&(o.setRenderTargetTextures(g,a.colorTexture,d.ignoreDepthValues?void 0:a.depthStencilTexture),o.setRenderTarget(g))),M[r]);void 0===t&&((t=new PerspectiveCamera).layers.enable(r),t.viewport=new Vector4,M[r]=t),t.matrix.fromArray(s.transform.matrix),t.projectionMatrix.fromArray(s.projectionMatrix),t.viewport.set(e.x,e.y,e.width,e.height),0===r&&b.matrix.copy(t.matrix),!0===i&&b.cameras.push(t)}}for(let e=0;e<v.length;e++){var r=_[e],i=v[e];null!==r&&void 0!==i&&i.update(r,t,h||l)}P&&P(e,t),f=null}),this.setAnimationLoop=function(e){P=e},this.dispose=function(){}}}function WebGLMaterials(a,u){function d(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide)&&(e.bumpScale.value*=-1),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide)&&e.normalScale.value.negate(),t.specularMap&&(e.specularMap.value=t.specularMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);var r=u.get(t).envMap;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=t.reflectivity,e.ior.value=t.ior,e.refractionRatio.value=t.refractionRatio),t.lightMap&&(e.lightMap.value=t.lightMap,r=!0!==a.physicallyCorrectLights?Math.PI:1,e.lightMapIntensity.value=t.lightMapIntensity*r),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap?i=t.emissiveMap:t.clearcoatMap?i=t.clearcoatMap:t.clearcoatNormalMap?i=t.clearcoatNormalMap:t.clearcoatRoughnessMap?i=t.clearcoatRoughnessMap:t.iridescenceMap?i=t.iridescenceMap:t.iridescenceThicknessMap?i=t.iridescenceThicknessMap:t.specularIntensityMap?i=t.specularIntensityMap:t.specularColorMap?i=t.specularColorMap:t.transmissionMap?i=t.transmissionMap:t.thicknessMap?i=t.thicknessMap:t.sheenColorMap?i=t.sheenColorMap:t.sheenRoughnessMap&&(i=t.sheenRoughnessMap),void 0!==i&&(!0===(i=i.isWebGLRenderTarget?i.texture:i).matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix));let n;t.aoMap?n=t.aoMap:t.lightMap&&(n=t.lightMap),void 0!==n&&(!0===(n=n.isWebGLRenderTarget?n.texture:n).matrixAutoUpdate&&n.updateMatrix(),e.uv2Transform.value.copy(n.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(t,r,i,n,a){if(r.isMeshBasicMaterial)d(t,r);else if(r.isMeshLambertMaterial)d(t,r);else if(r.isMeshToonMaterial)d(t,r),h=t,(c=r).gradientMap&&(h.gradientMap.value=c.gradientMap);else if(r.isMeshPhongMaterial)d(t,r),h=r,(c=t).specular.value.copy(h.specular),c.shininess.value=Math.max(h.shininess,1e-4);else if(r.isMeshStandardMaterial){d(t,r);var e=t,s=r,o=(e.roughness.value=s.roughness,e.metalness.value=s.metalness,s.roughnessMap&&(e.roughnessMap.value=s.roughnessMap),s.metalnessMap&&(e.metalnessMap.value=s.metalnessMap),u.get(s).envMap);o&&(e.envMapIntensity.value=s.envMapIntensity),r.isMeshPhysicalMaterial&&(o=r,e=a,(s=t).ior.value=o.ior,0<o.sheen&&(s.sheenColor.value.copy(o.sheenColor).multiplyScalar(o.sheen),s.sheenRoughness.value=o.sheenRoughness,o.sheenColorMap&&(s.sheenColorMap.value=o.sheenColorMap),o.sheenRoughnessMap)&&(s.sheenRoughnessMap.value=o.sheenRoughnessMap),0<o.clearcoat&&(s.clearcoat.value=o.clearcoat,s.clearcoatRoughness.value=o.clearcoatRoughness,o.clearcoatMap&&(s.clearcoatMap.value=o.clearcoatMap),o.clearcoatRoughnessMap&&(s.clearcoatRoughnessMap.value=o.clearcoatRoughnessMap),o.clearcoatNormalMap)&&(s.clearcoatNormalScale.value.copy(o.clearcoatNormalScale),s.clearcoatNormalMap.value=o.clearcoatNormalMap,o.side===BackSide)&&s.clearcoatNormalScale.value.negate(),0<o.iridescence&&(s.iridescence.value=o.iridescence,s.iridescenceIOR.value=o.iridescenceIOR,s.iridescenceThicknessMinimum.value=o.iridescenceThicknessRange[0],s.iridescenceThicknessMaximum.value=o.iridescenceThicknessRange[1],o.iridescenceMap&&(s.iridescenceMap.value=o.iridescenceMap),o.iridescenceThicknessMap)&&(s.iridescenceThicknessMap.value=o.iridescenceThicknessMap),0<o.transmission&&(s.transmission.value=o.transmission,s.transmissionSamplerMap.value=e.texture,s.transmissionSamplerSize.value.set(e.width,e.height),o.transmissionMap&&(s.transmissionMap.value=o.transmissionMap),s.thickness.value=o.thickness,o.thicknessMap&&(s.thicknessMap.value=o.thicknessMap),s.attenuationDistance.value=o.attenuationDistance,s.attenuationColor.value.copy(o.attenuationColor)),s.specularIntensity.value=o.specularIntensity,s.specularColor.value.copy(o.specularColor),o.specularIntensityMap&&(s.specularIntensityMap.value=o.specularIntensityMap),o.specularColorMap)&&(s.specularColorMap.value=o.specularColorMap)}else if(r.isMeshMatcapMaterial)d(t,r),a=t,(e=r).matcap&&(a.matcap.value=e.matcap);else if(r.isMeshDepthMaterial)d(t,r);else if(r.isMeshDistanceMaterial)d(t,r),s=r,(o=t).referencePosition.value.copy(s.referencePosition),o.nearDistance.value=s.nearDistance,o.farDistance.value=s.farDistance;else if(r.isMeshNormalMaterial)d(t,r);else if(r.isLineBasicMaterial)a=r,(l=t).diffuse.value.copy(a.color),l.opacity.value=a.opacity,r.isLineDashedMaterial&&(l=r,(a=t).dashSize.value=l.dashSize,a.totalSize.value=l.dashSize+l.gapSize,a.scale.value=l.scale);else if(r.isPointsMaterial){a=t;l=r;a.diffuse.value.copy(l.color),a.opacity.value=l.opacity,a.size.value=l.size*i,a.scale.value=.5*n,l.map&&(a.map.value=l.map);l.alphaMap&&(a.alphaMap.value=l.alphaMap);0<l.alphaTest&&(a.alphaTest.value=l.alphaTest);let e;l.map?e=l.map:l.alphaMap&&(e=l.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),a.uvTransform.value.copy(e.matrix))}else if(r.isSpriteMaterial){i=t;n=r;i.diffuse.value.copy(n.color),i.opacity.value=n.opacity,i.rotation.value=n.rotation,n.map&&(i.map.value=n.map);n.alphaMap&&(i.alphaMap.value=n.alphaMap);0<n.alphaTest&&(i.alphaTest.value=n.alphaTest);let e;n.map?e=n.map:n.alphaMap&&(e=n.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),i.uvTransform.value.copy(e.matrix))}else r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1);var l,h,c}}}function WebGLUniformsGroups(g,v,e,_){let y={},x={},M=[];const b=e.isWebGL2?g.getParameter(35375):0;function S(e){var e=e.target,t=(e.removeEventListener("dispose",S),M.indexOf(e.__bindingPointIndex));M.splice(t,1),g.deleteBuffer(y[e.id]),delete y[e.id],delete x[e.id]}return{bind:function(e,t){t=t.program,_.uniformBlockBinding(e,t)},update:function(e,t){var r;if(void 0===(r=y[e.id])){{var n=e;var a=n.uniforms;let r=0;let i=0;for(let e=0,t=a.length;e<t;e++){var s,o=a[e],l=function(e){var e=e.value,t={boundary:0,storage:0};"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e);return t}(o);o.__data=new Float32Array(l.storage/Float32Array.BYTES_PER_ELEMENT),o.__offset=r,0<e&&(s=16-(i=r%16),0!==i)&&s-l.boundary<0&&(r+=16-i,o.__offset=r),r+=l.storage}0<(i=r%16)&&(r+=16-i);n.__size=r,n.__cache={}}n=e,h=function(){for(let e=0;e<b;e++)if(-1===M.indexOf(e))return M.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}(),n.__bindingPointIndex=h,c=g.createBuffer(),i=n.__size,n=n.usage,g.bindBuffer(35345,c),g.bufferData(35345,i,n),g.bindBuffer(35345,null),g.bindBufferBase(35345,h,c),r=c,y[e.id]=r,e.addEventListener("dispose",S)}var i=t.program,n=(_.updateUBOMapping(e,i),v.render.frame);if(x[e.id]!==n){var h=e,c=y[h.id],u=h.uniforms,d=h.__cache;g.bindBuffer(35345,c);for(let e=0,t=u.length;e<t;e++){var p,m,f=u[e];!0===function(e,t,r){e=e.value;{if(void 0===r[t])return r[t]="number"==typeof e?e:e.clone(),!0;if("number"==typeof e){if(r[t]!==e)return r[t]=e,!0}else{r=r[t];if(!1===r.equals(e))return r.copy(e),!0}}return!1}(f,e,d)&&(p=f.value,m=f.__offset,"number"==typeof p?f.__data[0]=p:f.value.isMatrix3?(f.__data[0]=f.value.elements[0],f.__data[1]=f.value.elements[1],f.__data[2]=f.value.elements[2],f.__data[3]=f.value.elements[0],f.__data[4]=f.value.elements[3],f.__data[5]=f.value.elements[4],f.__data[6]=f.value.elements[5],f.__data[7]=f.value.elements[0],f.__data[8]=f.value.elements[6],f.__data[9]=f.value.elements[7],f.__data[10]=f.value.elements[8],f.__data[11]=f.value.elements[0]):p.toArray(f.__data),g.bufferSubData(35345,m,f.__data))}g.bindBuffer(35345,null),x[e.id]=n}},dispose:function(){for(const e in y)g.deleteBuffer(y[e]);M=[],y={},x={}}}}function createCanvasElement(){var e=createElementNS("canvas");return e.style.display="block",e}function WebGLRenderer(e={}){this.isWebGLRenderer=!0;const n=void 0!==e.canvas?e.canvas:createCanvasElement(),r=void 0!==e.context?e.context:null,M=void 0===e.depth||e.depth,b=void 0===e.stencil||e.stencil,S=void 0!==e.antialias&&e.antialias,w=void 0===e.premultipliedAlpha||e.premultipliedAlpha,z=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,k=void 0!==e.powerPreference?e.powerPreference:"default",W=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let H,m=(H=null!==r?r.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha,null),T=null;const a=[],s=[],A=(this.domElement=n,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=NoToneMapping,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),this);let $=!1,j=0,q=0,C=null,E=-1,L=null;const u=new Vector4,X=new Vector4;let Y=null,i=n.width,R=n.height,P=1,Z=null,J=null;const l=new Vector4(0,0,i,R),h=new Vector4(0,0,i,R);let K=!1;const Q=new Frustum;let ee=!1,te=!1,D=null;const re=new Matrix4,d=new Vector2,I=new Vector3,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return null===C?P:1}let B=r;function ae(t,r){for(let e=0;e<t.length;e++){var i=t[e],i=n.getContext(i,r);if(null!==i)return i}return null}try{var se={alpha:!0,depth:M,stencil:b,antialias:S,premultipliedAlpha:w,preserveDrawingBuffer:z,powerPreference:k,failIfMajorPerformanceCaveat:W};if("setAttribute"in n&&n.setAttribute("data-engine","three.js r"+REVISION),n.addEventListener("webglcontextlost",ye,!1),n.addEventListener("webglcontextrestored",xe,!1),n.addEventListener("webglcontextcreationerror",Me,!1),null===B){var oe=["webgl2","webgl","experimental-webgl"];if(!0===A.isWebGL1Renderer&&oe.shift(),null===(B=ae(oe,se)))throw ae(oe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===B.getShaderPrecisionFormat&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let p,F,V,f,N,G,O,le,he,ce,g,c,ue,de,pe,U,o,v,me,fe,ge,_,y,ve;function _e(){p=new WebGLExtensions(B),F=new WebGLCapabilities(B,p,e),p.init(F),_=new WebGLUtils(B,p,F),V=new WebGLState(B,p,F),f=new WebGLInfo,N=new WebGLProperties,G=new WebGLTextures(B,p,V,N,F,_,f),O=new WebGLCubeMaps(A),le=new WebGLCubeUVMaps(A),he=new WebGLAttributes(B,F),y=new WebGLBindingStates(B,p,he,F),ce=new WebGLGeometries(B,he,f,y),g=new WebGLObjects(B,ce,he,f),me=new WebGLMorphtargets(B,F,G),U=new WebGLClipping(N),c=new WebGLPrograms(A,O,le,p,F,y,U),ue=new WebGLMaterials(A,N),de=new WebGLRenderLists,pe=new WebGLRenderStates(p,F),v=new WebGLBackground(A,O,V,g,H,w),o=new WebGLShadowMap(A,g,F),ve=new WebGLUniformsGroups(B,f,F,V),fe=new WebGLBufferRenderer(B,p,f,F),ge=new WebGLIndexedBufferRenderer(B,p,f,F),f.programs=c.programs,A.capabilities=F,A.extensions=p,A.properties=N,A.renderLists=de,A.shadowMap=o,A.state=V,A.info=f}_e();const x=new WebXRManager(A,B);function ye(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),$=!0}function xe(){console.log("THREE.WebGLRenderer: Context Restored."),$=!1;var e=f.autoReset,t=o.enabled,r=o.autoUpdate,i=o.needsUpdate,n=o.type;_e(),f.autoReset=e,o.enabled=t,o.autoUpdate=r,o.needsUpdate=i,o.type=n}function Me(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function be(e){var e=e.target,t=(e.removeEventListener("dispose",be),e=e),r=N.get(t).programs;void 0!==r&&(r.forEach(function(e){c.releaseProgram(e)}),t.isShaderMaterial)&&c.releaseShaderCache(t),N.remove(e)}this.xr=x,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){var e=p.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=p.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(e){void 0!==e&&(P=e,this.setSize(i,R,!1))},this.getSize=function(e){return e.set(i,R)},this.setSize=function(e,t,r){x.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(i=e,R=t,n.width=Math.floor(e*P),n.height=Math.floor(t*P),!1!==r&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(i*P,R*P).floor()},this.setDrawingBufferSize=function(e,t,r){i=e,R=t,P=r,n.width=Math.floor(e*r),n.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(u)},this.getViewport=function(e){return e.copy(l)},this.setViewport=function(e,t,r,i){e.isVector4?l.set(e.x,e.y,e.z,e.w):l.set(e,t,r,i),V.viewport(u.copy(l).multiplyScalar(P).floor())},this.getScissor=function(e){return e.copy(h)},this.setScissor=function(e,t,r,i){e.isVector4?h.set(e.x,e.y,e.z,e.w):h.set(e,t,r,i),V.scissor(X.copy(h).multiplyScalar(P).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(e){V.setScissorTest(K=e)},this.setOpaqueSort=function(e){Z=e},this.setTransparentSort=function(e){J=e},this.getClearColor=function(e){return e.copy(v.getClearColor())},this.setClearColor=function(){v.setClearColor.apply(v,arguments)},this.getClearAlpha=function(){return v.getClearAlpha()},this.setClearAlpha=function(){v.setClearAlpha.apply(v,arguments)},this.clear=function(e=!0,t=!0,r=!0){let i=0;e&&(i|=16384),t&&(i|=256),r&&(i|=1024),B.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",ye,!1),n.removeEventListener("webglcontextrestored",xe,!1),n.removeEventListener("webglcontextcreationerror",Me,!1),de.dispose(),pe.dispose(),N.dispose(),O.dispose(),le.dispose(),g.dispose(),y.dispose(),ve.dispose(),c.dispose(),x.dispose(),x.removeEventListener("sessionstart",we),x.removeEventListener("sessionend",Te),D&&(D.dispose(),D=null),t.stop()},this.renderBufferDirect=function(e,t,r,i,n,a){null===t&&(t=ie);var s=n.isMesh&&n.matrixWorld.determinant()<0,e=function(e,t,r,i,n){!0!==t.isScene&&(t=ie);G.resetTextureUnits();var a=t.fog,s=i.isMeshStandardMaterial?t.environment:null,o=null===C?A.outputEncoding:!0===C.isXRRenderTarget?C.texture.encoding:LinearEncoding,s=(i.isMeshStandardMaterial?le:O).get(i.envMap||s),l=!0===i.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,h=!!i.normalMap&&!!r.attributes.tangent,c=!!r.morphAttributes.position,u=!!r.morphAttributes.normal,d=!!r.morphAttributes.color,p=i.toneMapped?A.toneMapping:NoToneMapping,m=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,m=void 0!==m?m.length:0,f=N.get(i),g=T.state.lights;!0!==ee||!0!==te&&e===L||(b=e===L&&i.id===E,U.setState(i,e,b));let v=!1;i.version===f.__version?(f.needsLights&&f.lightsStateVersion!==g.state.version||f.outputEncoding!==o||n.isInstancedMesh&&!1===f.instancing||!n.isInstancedMesh&&!0===f.instancing||n.isSkinnedMesh&&!1===f.skinning||!n.isSkinnedMesh&&!0===f.skinning||f.envMap!==s||!0===i.fog&&f.fog!==a||void 0!==f.numClippingPlanes&&(f.numClippingPlanes!==U.numPlanes||f.numIntersection!==U.numIntersection)||f.vertexAlphas!==l||f.vertexTangents!==h||f.morphTargets!==c||f.morphNormals!==u||f.morphColors!==d||f.toneMapping!==p||!0===F.isWebGL2&&f.morphTargetsCount!==m)&&(v=!0):(v=!0,f.__version=i.version);let _=f.currentProgram;!0===v&&(_=Ee(i,t,n));let y=!1,x=!1,M=!1;var b=_.getUniforms(),g=f.uniforms;V.useProgram(_.program)&&(y=!0,x=!0,M=!0);i.id!==E&&(E=i.id,x=!0);(y||L!==e)&&(b.setValue(B,"projectionMatrix",e.projectionMatrix),F.logarithmicDepthBuffer&&b.setValue(B,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),L!==e&&(L=e,x=!0,M=!0),(i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap)&&void 0!==(o=b.map.cameraPosition)&&o.setValue(B,I.setFromMatrixPosition(e.matrixWorld)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&b.setValue(B,"isOrthographic",!0===e.isOrthographicCamera),i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||n.isSkinnedMesh)&&b.setValue(B,"viewMatrix",e.matrixWorldInverse);n.isSkinnedMesh&&(b.setOptional(B,n,"bindMatrix"),b.setOptional(B,n,"bindMatrixInverse"),s=n.skeleton)&&(F.floatVertexTextures?(null===s.boneTexture&&s.computeBoneTexture(),b.setValue(B,"boneTexture",s.boneTexture,G),b.setValue(B,"boneTextureSize",s.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."));l=r.morphAttributes;(void 0!==l.position||void 0!==l.normal||void 0!==l.color&&!0===F.isWebGL2)&&me.update(n,r,i,_);!x&&f.receiveShadow===n.receiveShadow||(f.receiveShadow=n.receiveShadow,b.setValue(B,"receiveShadow",n.receiveShadow));x&&(b.setValue(B,"toneMappingExposure",A.toneMappingExposure),f.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(g,M),a&&!0===i.fog&&ue.refreshFogUniforms(g,a),ue.refreshMaterialUniforms(g,i,P,R,D),WebGLUniforms.upload(B,f.uniformsList,g,G));i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(WebGLUniforms.upload(B,f.uniformsList,g,G),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&b.setValue(B,"center",n.center);if(b.setValue(B,"modelViewMatrix",n.modelViewMatrix),b.setValue(B,"normalMatrix",n.normalMatrix),b.setValue(B,"modelMatrix",n.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){var S,w=i.uniformsGroups;for(let e=0,t=w.length;e<t;e++)F.isWebGL2?(S=w[e],ve.update(S,_),ve.bind(S,_)):console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return _}(e,t,r,i,n);V.setMaterial(i,s);let o=r.index;t=r.attributes.position;if(null===o){if(void 0===t||0===t.count)return}else if(0===o.count)return;let l=1,h=(!0===i.wireframe&&(o=ce.getWireframeAttribute(r),l=2),y.setup(n,i,e,r,o),fe);null!==o&&(s=he.get(o),(h=ge).setIndex(s));var e=(null!==o?o:t).count,s=r.drawRange.start*l,t=r.drawRange.count*l,c=null!==a?a.start*l:0,a=null!==a?a.count*l:1/0,u=Math.max(s,c),e=Math.min(e,s+t,c+a)-1,s=Math.max(0,e-u+1);if(0!==s){if(n.isMesh)!0===i.wireframe?(V.setLineWidth(i.wireframeLinewidth*ne()),h.setMode(1)):h.setMode(4);else if(n.isLine){let e=i.linewidth;void 0===e&&(e=1),V.setLineWidth(e*ne()),n.isLineSegments?h.setMode(1):n.isLineLoop?h.setMode(2):h.setMode(3)}else n.isPoints?h.setMode(0):n.isSprite&&h.setMode(4);n.isInstancedMesh?h.renderInstances(u,s,n.count):r.isInstancedBufferGeometry?(t=Math.min(r.instanceCount,r._maxInstanceCount),h.renderInstances(u,s,t)):h.render(u,s)}},this.compile=function(i,t){(T=pe.get(i)).init(),s.push(T),i.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(T.pushLight(e),e.castShadow)&&T.pushShadow(e)}),T.setupLights(A.physicallyCorrectLights),i.traverse(function(t){var r=t.material;if(r)if(Array.isArray(r))for(let e=0;e<r.length;e++)Ee(r[e],i,t);else Ee(r,i,t)}),s.pop(),T=null};let Se=null;function we(){t.stop()}function Te(){t.start()}const t=new WebGLAnimation;function Ae(e,t,r,i){var n=e.opaque,a=e.transmissive,e=e.transparent;if(T.setupLightsView(r),0<a.length){var s=n,o=t,l=r,h=F.isWebGL2,h=(null===D&&(D=new WebGLRenderTarget(1,1,{generateMipmaps:!0,type:p.has("EXT_color_buffer_half_float")?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,samples:h&&!0===S?4:0})),A.getDrawingBufferSize(d),h?D.setSize(d.x,d.y):D.setSize(floorPowerOfTwo(d.x),floorPowerOfTwo(d.y)),A.getRenderTarget()),c=(A.setRenderTarget(D),A.clear(),A.toneMapping);A.toneMapping=NoToneMapping,Ce(s,o,l),A.toneMapping=c,G.updateMultisampleRenderTarget(D),G.updateRenderTargetMipmap(D),A.setRenderTarget(h)}i&&V.viewport(u.copy(i)),0<n.length&&Ce(n,t,r),0<a.length&&Ce(a,t,r),0<e.length&&Ce(e,t,r),V.buffers.depth.setTest(!0),V.buffers.depth.setMask(!0),V.buffers.color.setMask(!0),V.setPolygonOffset(!1)}function Ce(r,i,n){var a=!0===i.isScene?i.overrideMaterial:null;for(let e=0,t=r.length;e<t;e++){var s,o,l,h,c,u,d=r[e],p=d.object,m=d.geometry,f=null===a?d.material:a,d=d.group;p.layers.test(n.layers)&&(u=c=h=l=o=s=void 0,o=i,l=n,h=m,c=f,u=d,(s=p).onBeforeRender(A,o,l,h,c,u),s.modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),c.onBeforeRender(A,o,l,h,s,u),!0===c.transparent&&c.side===DoubleSide?(c.side=BackSide,c.needsUpdate=!0,A.renderBufferDirect(l,o,h,c,s,u),c.side=FrontSide,c.needsUpdate=!0,A.renderBufferDirect(l,o,h,c,s,u),c.side=DoubleSide):A.renderBufferDirect(l,o,h,c,s,u),s.onAfterRender(A,o,l,h,c,u))}}function Ee(e,t,r){!0!==t.isScene&&(t=ie);var i=N.get(e),n=T.state.lights,a=T.state.shadowsArray,s=n.state.version,a=c.getParameters(e,n.state,a,t,r),o=c.getProgramCacheKey(a);let l=i.programs,h=(i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?le:O).get(e.envMap||i.environment),void 0===l&&(e.addEventListener("dispose",be),l=new Map,i.programs=l),l.get(o));if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Le(e,a),h}else a.uniforms=c.getUniforms(e),e.onBuild(r,a,A),e.onBeforeCompile(a,A),h=c.acquireProgram(a,o),l.set(o,h),i.uniforms=a.uniforms;t=i.uniforms,(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(t.clippingPlanes=U.uniform),Le(e,a),i.needsLights=(r=e).isMeshLambertMaterial||r.isMeshToonMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.isShadowMaterial||r.isShaderMaterial&&!0===r.lights,i.lightsStateVersion=s,i.needsLights&&(t.ambientLightColor.value=n.state.ambient,t.lightProbe.value=n.state.probe,t.directionalLights.value=n.state.directional,t.directionalLightShadows.value=n.state.directionalShadow,t.spotLights.value=n.state.spot,t.spotLightShadows.value=n.state.spotShadow,t.rectAreaLights.value=n.state.rectArea,t.ltc_1.value=n.state.rectAreaLTC1,t.ltc_2.value=n.state.rectAreaLTC2,t.pointLights.value=n.state.point,t.pointLightShadows.value=n.state.pointShadow,t.hemisphereLights.value=n.state.hemi,t.directionalShadowMap.value=n.state.directionalShadowMap,t.directionalShadowMatrix.value=n.state.directionalShadowMatrix,t.spotShadowMap.value=n.state.spotShadowMap,t.spotShadowMatrix.value=n.state.spotShadowMatrix,t.pointShadowMap.value=n.state.pointShadowMap,t.pointShadowMatrix.value=n.state.pointShadowMatrix),o=h.getUniforms(),a=WebGLUniforms.seqWithValue(o.seq,t);return i.currentProgram=h,i.uniformsList=a,h}function Le(e,t){e=N.get(e);e.outputEncoding=t.outputEncoding,e.instancing=t.instancing,e.skinning=t.skinning,e.morphTargets=t.morphTargets,e.morphNormals=t.morphNormals,e.morphColors=t.morphColors,e.morphTargetsCount=t.morphTargetsCount,e.numClippingPlanes=t.numClippingPlanes,e.numIntersection=t.numClipIntersection,e.vertexAlphas=t.vertexAlphas,e.vertexTangents=t.vertexTangents,e.toneMapping=t.toneMapping}t.setAnimationLoop(function(e){Se&&Se(e)}),"undefined"!=typeof self&&t.setContext(self),this.setAnimationLoop=function(e){Se=e,x.setAnimationLoop(e),null===e?t.stop():t.start()},x.addEventListener("sessionstart",we),x.addEventListener("sessionend",Te),this.render=function(r,e){if(void 0!==e&&!0!==e.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!0!==$){!0===r.autoUpdate&&r.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===x.enabled&&!0===x.isPresenting&&(!0===x.cameraAutoUpdate&&x.updateCamera(e),e=x.getCamera()),!0===r.isScene&&r.onBeforeRender(A,r,e,C),(T=pe.get(r,s.length)).init(),s.push(T),re.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),Q.setFromProjectionMatrix(re),te=this.localClippingEnabled,ee=U.init(this.clippingPlanes,te,e),(m=de.get(r,a.length)).init(),a.push(m),!function r(i,n,a,s){if(!1===i.visible)return;const e=i.layers.test(n.layers);if(e)if(i.isGroup)a=i.renderOrder;else if(i.isLOD)!0===i.autoUpdate&&i.update(n);else if(i.isLight)T.pushLight(i),i.castShadow&&T.pushShadow(i);else if(i.isSprite){if(!i.frustumCulled||Q.intersectsSprite(i)){s&&I.setFromMatrixPosition(i.matrixWorld).applyMatrix4(re);const t=g.update(i),l=i.material;l.visible&&m.push(i,t,l,a,I.z,null)}}else if((i.isMesh||i.isLine||i.isPoints)&&(i.isSkinnedMesh&&i.skeleton.frame!==f.render.frame&&(i.skeleton.update(),i.skeleton.frame=f.render.frame),!i.frustumCulled||Q.intersectsObject(i))){s&&I.setFromMatrixPosition(i.matrixWorld).applyMatrix4(re);const h=g.update(i),c=i.material;if(Array.isArray(c)){const u=h.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=c[d.materialIndex];p&&p.visible&&m.push(i,h,p,a,I.z,d)}}else c.visible&&m.push(i,h,c,a,I.z,null)}const o=i.children;for(let e=0,t=o.length;e<t;e++)r(o[e],n,a,s)}(r,e,0,A.sortObjects),m.finish(),!0===A.sortObjects&&m.sort(Z,J),!0===ee&&U.beginShadows();var t=T.state.shadowsArray;if(o.render(t,r,e),!0===ee&&U.endShadows(),!0===this.info.autoReset&&this.info.reset(),v.render(m,r),T.setupLights(A.physicallyCorrectLights),e.isArrayCamera){var i=e.cameras;for(let e=0,t=i.length;e<t;e++){var n=i[e];Ae(m,r,n,n.viewport)}}else Ae(m,r,e);null!==C&&(G.updateMultisampleRenderTarget(C),G.updateRenderTargetMipmap(C)),!0===r.isScene&&r.onAfterRender(A,r,e),y.resetDefaultState(),E=-1,L=null,s.pop(),T=0<s.length?s[s.length-1]:null,a.pop(),m=0<a.length?a[a.length-1]:null}},this.getActiveCubeFace=function(){return j},this.getActiveMipmapLevel=function(){return q},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(e,t,r){N.get(e.texture).__webglTexture=t,N.get(e.depthTexture).__webglTexture=r;t=N.get(e);t.__hasExternalTextures=!0,t.__hasExternalTextures&&(t.__autoAllocateDepthBuffer=void 0===r,t.__autoAllocateDepthBuffer||!0===p.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),t.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){e=N.get(e);e.__webglFramebuffer=t,e.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,r=0){C=e,j=t,q=r;let i=!0;var n;e&&(void 0!==(n=N.get(e)).__useDefaultFramebuffer?(V.bindFramebuffer(36160,null),i=!1):void 0===n.__webglFramebuffer?G.setupRenderTarget(e):n.__hasExternalTextures&&G.rebindTextures(e,N.get(e.texture).__webglTexture,N.get(e.depthTexture).__webglTexture));let a=null,s=!1,o=!1;Y=e?(((n=e.texture).isData3DTexture||n.isDataArrayTexture)&&(o=!0),n=N.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(a=n[t],s=!0):a=F.isWebGL2&&0<e.samples&&!1===G.useMultisampledRTT(e)?N.get(e).__webglMultisampledFramebuffer:n,u.copy(e.viewport),X.copy(e.scissor),e.scissorTest):(u.copy(l).multiplyScalar(P).floor(),X.copy(h).multiplyScalar(P).floor(),K),V.bindFramebuffer(36160,a)&&F.drawBuffers&&i&&V.drawBuffers(e,a),V.viewport(u),V.scissor(X),V.setScissorTest(Y),s?(n=N.get(e.texture),B.framebufferTexture2D(36160,36064,34069+t,n.__webglTexture,r)):o&&(n=N.get(e.texture),e=t||0,B.framebufferTextureLayer(36160,36064,n.__webglTexture,r||0,e)),E=-1},this.readRenderTargetPixels=function(t,r,i,n,a,s,o){if(t&&t.isWebGLRenderTarget){let e=N.get(t).__webglFramebuffer;if(e=t.isWebGLCubeRenderTarget&&void 0!==o?e[o]:e){V.bindFramebuffer(36160,e);try{var l,h=t.texture,c=h.format,u=h.type;c!==RGBAFormat&&_.convert(c)!==B.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):(l=u===HalfFloatType&&(p.has("EXT_color_buffer_half_float")||F.isWebGL2&&p.has("EXT_color_buffer_float")),u===UnsignedByteType||_.convert(u)===B.getParameter(35738)||u===FloatType&&(F.isWebGL2||p.has("OES_texture_float")||p.has("WEBGL_color_buffer_float"))||l?0<=r&&r<=t.width-n&&0<=i&&i<=t.height-a&&B.readPixels(r,i,n,a,_.convert(c),_.convert(u),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."))}finally{const e=null!==C?N.get(C).__webglFramebuffer:null;V.bindFramebuffer(36160,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,r=0){var i=Math.pow(2,-r),n=Math.floor(t.image.width*i),i=Math.floor(t.image.height*i);G.setTexture2D(t,0),B.copyTexSubImage2D(3553,r,0,0,e.x,e.y,n,i),V.unbindTexture()},this.copyTextureToTexture=function(e,t,r,i=0){var n=t.image.width,a=t.image.height,s=_.convert(r.format),o=_.convert(r.type);G.setTexture2D(r,0),B.pixelStorei(37440,r.flipY),B.pixelStorei(37441,r.premultiplyAlpha),B.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?B.texSubImage2D(3553,i,e.x,e.y,n,a,s,o,t.image.data):t.isCompressedTexture?B.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):B.texSubImage2D(3553,i,e.x,e.y,s,o,t.image),0===i&&r.generateMipmaps&&B.generateMipmap(3553),V.unbindTexture()},this.copyTextureToTexture3D=function(t,r,i,n,a=0){if(A.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var s=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,l=t.max.z-t.min.z+1,h=_.convert(n.format),c=_.convert(n.type);let e;if(n.isData3DTexture)G.setTexture3D(n,0),e=32879;else{if(!n.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");G.setTexture2DArray(n,0),e=35866}B.pixelStorei(37440,n.flipY),B.pixelStorei(37441,n.premultiplyAlpha),B.pixelStorei(3317,n.unpackAlignment);var u=B.getParameter(3314),d=B.getParameter(32878),p=B.getParameter(3316),m=B.getParameter(3315),f=B.getParameter(32877),g=i.isCompressedTexture?i.mipmaps[0]:i.image;B.pixelStorei(3314,g.width),B.pixelStorei(32878,g.height),B.pixelStorei(3316,t.min.x),B.pixelStorei(3315,t.min.y),B.pixelStorei(32877,t.min.z),i.isDataTexture||i.isData3DTexture?B.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,c,g.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,g.data)):B.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,c,g),B.pixelStorei(3314,u),B.pixelStorei(32878,d),B.pixelStorei(3316,p),B.pixelStorei(3315,m),B.pixelStorei(32877,f),0===a&&n.generateMipmaps&&B.generateMipmap(e),V.unbindTexture()}},this.initTexture=function(e){e.isCubeTexture?G.setTextureCube(e,0):e.isData3DTexture?G.setTexture3D(e,0):e.isDataArrayTexture?G.setTexture2DArray(e,0):G.setTexture2D(e,0),V.unbindTexture()},this.resetState=function(){j=0,q=0,C=null,V.reset(),y.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=!0;class FogExp2{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Color(e),this.density=t}clone(){return new FogExp2(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Fog{constructor(e,t=1,r=1e3){this.isFog=!0,this.name="",this.color=new Color(e),this.near=t,this.far=r}clone(){return new Fog(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Scene extends Object3D{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){e=super.toJSON(e);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}class InterleavedBuffer{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=generateUUID()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(r,i,n){r*=this.stride,n*=i.stride;for(let e=0,t=this.stride;e<t;e++)this.array[r+e]=i.array[n+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),e=new this.constructor(e,this.stride);return e.setUsage(this.usage),e}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _vector$6=new Vector3;class InterleavedBufferAttribute{constructor(e,t,r,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(r){for(let e=0,t=this.data.count;e<t;e++)_vector$6.fromBufferAttribute(this,e),_vector$6.applyMatrix4(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)_vector$6.fromBufferAttribute(this,e),_vector$6.applyNormalMatrix(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)_vector$6.fromBufferAttribute(this,e),_vector$6.transformDirection(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=i,this}setXYZW(e,t,r,i,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=i,this.data.array[e+3]=n,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");var t=[];for(let e=0;e<this.count;e++){var r=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[r+e])}return new BufferAttribute(new this.array.constructor(t),this.itemSize,this.normalized)}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");var t=[];for(let e=0;e<this.count;e++){var r=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[r+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}class SpriteMaterial extends Material{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let _geometry;const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2;class Sprite extends Object3D{constructor(e){var t;super(),this.isSprite=!0,this.type="Sprite",void 0===_geometry&&(_geometry=new BufferGeometry,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new InterleavedBuffer(t,5),_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(t,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(t,2,3,!1))),this.geometry=_geometry,this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);var r=this.material.rotation;let i,n;0!==r&&(n=Math.cos(r),i=Math.sin(r));var r=this.center,a=(transformVertex(_vA.set(-.5,-.5,0),_mvPosition,r,_worldScale,i,n),transformVertex(_vB.set(.5,-.5,0),_mvPosition,r,_worldScale,i,n),transformVertex(_vC.set(.5,.5,0),_mvPosition,r,_worldScale,i,n),_uvA.set(0,0),_uvB.set(1,0),_uvC.set(1,1),e.ray.intersectTriangle(_vA,_vB,_vC,!1,_intersectPoint));null===a&&(transformVertex(_vB.set(-.5,.5,0),_mvPosition,r,_worldScale,i,n),_uvB.set(0,1),null===(a=e.ray.intersectTriangle(_vA,_vC,_vB,!1,_intersectPoint)))||(r=e.ray.origin.distanceTo(_intersectPoint))<e.near||e.far<r||t.push({distance:r,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function transformVertex(e,t,r,i,n,a){_alignedPosition.subVectors(e,r).addScalar(.5).multiply(i),void 0!==n?(_rotatedPosition.x=a*_alignedPosition.x-n*_alignedPosition.y,_rotatedPosition.y=n*_alignedPosition.x+a*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}const _v1$2=new Vector3,_v2$1=new Vector3;class LOD extends Object3D{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var r=e.levels;for(let e=0,t=r.length;e<t;e++){var i=r[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);var r=this.levels;let i;for(i=0;i<r.length&&!(t<r[i].distance);i++);return r.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(r){var i=this.levels;if(0<i.length){let e,t;for(e=1,t=i.length;e<t&&!(r<i[e].distance);e++);return i[e-1].object}return null}raycast(e,t){var r;0<this.levels.length&&(_v1$2.setFromMatrixPosition(this.matrixWorld),r=e.ray.origin.distanceTo(_v1$2),this.getObjectForDistance(r).raycast(e,t))}update(r){var i=this.levels;if(1<i.length){_v1$2.setFromMatrixPosition(r.matrixWorld),_v2$1.setFromMatrixPosition(this.matrixWorld);var n=_v1$2.distanceTo(_v2$1)/r.zoom;i[0].object.visible=!0;let e,t;for(e=1,t=i.length;e<t&&n>=i[e].distance;e++)i[e-1].object.visible=!1,i[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)i[e].object.visible=!1}}toJSON(e){var r=super.toJSON(e),i=(!1===this.autoUpdate&&(r.object.autoUpdate=!1),r.object.levels=[],this.levels);for(let e=0,t=i.length;e<t;e++){var n=i[e];r.object.levels.push({object:n.object.uuid,distance:n.distance})}return r}}const _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector$5=new Vector3,_matrix=new Matrix4;class SkinnedMesh extends Mesh{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){var r=new Vector4,i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){r.fromBufferAttribute(i,e);var n=1/r.manhattanLength();n!=1/0?r.multiplyScalar(n):r.set(1,0,0,0),i.setXYZW(e,r.x,r.y,r.z,r.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var r=this.skeleton,i=this.geometry;_skinIndex.fromBufferAttribute(i.attributes.skinIndex,e),_skinWeight.fromBufferAttribute(i.attributes.skinWeight,e),_basePosition.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var n,a=_skinWeight.getComponent(e);0!==a&&(n=_skinIndex.getComponent(e),_matrix.multiplyMatrices(r.bones[n].matrixWorld,r.boneInverses[n]),t.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),a))}return t.applyMatrix4(this.bindMatrixInverse)}}class Bone extends Object3D{constructor(){super(),this.isBone=!0,this.type="Bone"}}class DataTexture extends Texture{constructor(e=null,t=1,r=1,i,n,a,s,o,l=NearestFilter,h=NearestFilter,c,u){super(null,a,s,o,l,h,i,n,c,u),this.isDataTexture=!0,this.image={data:e,width:t,height:r},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;class Skeleton{constructor(e=[],t=[]){this.uuid=generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Matrix4)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){var r=new Matrix4;this.bones[e]&&r.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(r)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];r&&r.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){var i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){var r=this.bones,i=this.boneInverses,n=this.boneMatrices,e=this.boneTexture;for(let e=0,t=r.length;e<t;e++){var a=r[e]?r[e].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(a,i[e]),_offsetMatrix.toArray(n,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Skeleton(this.bones,this.boneInverses)}computeBoneTexture(){var e=ceilPowerOfTwo(Math.sqrt(4*this.bones.length)),t=(e=Math.max(e,4),new Float32Array(e*e*4)),r=(t.set(this.boneMatrices),new DataTexture(t,e,e,RGBAFormat,FloatType));return r.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=r,this.boneTextureSize=e,this}getBoneByName(r){for(let e=0,t=this.bones.length;e<t;e++){var i=this.bones[e];if(i.name===r)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(r,i){this.uuid=r.uuid;for(let t=0,e=r.bones.length;t<e;t++){var n=r.bones[t];let e=i[n];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),e=new Bone),this.bones.push(e),this.boneInverses.push((new Matrix4).fromArray(r.boneInverses[t]))}return this.init(),this}toJSON(){var r={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]},i=(r.uuid=this.uuid,this.bones),n=this.boneInverses;for(let e=0,t=i.length;e<t;e++){var a=i[e],a=(r.bones.push(a.uuid),n[e]);r.boneInverses.push(a.toArray())}return r}}class InstancedBufferAttribute extends BufferAttribute{constructor(e,t,r,i=1){"number"==typeof r&&(i=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,r),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){var e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;class InstancedMesh extends Mesh{constructor(e,t,r){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new InstancedBufferAttribute(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,i){var t=this.matrixWorld,n=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(let r=0;r<n;r++){this.getMatrixAt(r,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(t,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects);for(let e=0,t=_instanceIntersects.length;e<t;e++){var a=_instanceIntersects[e];a.instanceId=r,a.object=this,i.push(a)}_instanceIntersects.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new InstancedBufferAttribute(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class LineBasicMaterial extends Material{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const _start$1=new Vector3,_end$1=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$1=new Sphere;class Line extends Object3D{constructor(e=new BufferGeometry,t=new LineBasicMaterial){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){var e=this.geometry;if(null===e.index){var r=e.attributes.position,i=[0];for(let e=1,t=r.count;e<t;e++)_start$1.fromBufferAttribute(r,e-1),_end$1.fromBufferAttribute(r,e),i[e]=i[e-1],i[e]+=_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(r,i){var e=this.geometry,t=this.matrixWorld,n=r.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere$1.copy(e.boundingSphere),_sphere$1.applyMatrix4(t),_sphere$1.radius+=n,!1!==r.ray.intersectsSphere(_sphere$1)){_inverseMatrix$1.copy(t).invert(),_ray$1.copy(r.ray).applyMatrix4(_inverseMatrix$1);var s,t=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=t*t,l=new Vector3,h=new Vector3,c=new Vector3,u=new Vector3,d=this.isLineSegments?2:1,p=e.index,m=e.attributes.position;if(null!==p)for(let e=Math.max(0,a.start),t=Math.min(p.count,a.start+a.count)-1;e<t;e+=d){var f=p.getX(e),g=p.getX(e+1),f=(l.fromBufferAttribute(m,f),h.fromBufferAttribute(m,g),_ray$1.distanceSqToSegment(l,h,u,c));o<f||(u.applyMatrix4(this.matrixWorld),(g=r.ray.origin.distanceTo(u))<r.near)||r.far<g||i.push({distance:g,point:c.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}else for(let e=Math.max(0,a.start),t=Math.min(m.count,a.start+a.count)-1;e<t;e+=d)l.fromBufferAttribute(m,e),h.fromBufferAttribute(m,e+1),o<_ray$1.distanceSqToSegment(l,h,u,c)||(u.applyMatrix4(this.matrixWorld),(s=r.ray.origin.distanceTo(u))<r.near)||r.far<s||i.push({distance:s,point:c.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}updateMorphTargets(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(0<t.length){var r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}}const _start=new Vector3,_end=new Vector3;class LineSegments extends Line{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){var e=this.geometry;if(null===e.index){var r=e.attributes.position,i=[];for(let e=0,t=r.count;e<t;e+=2)_start.fromBufferAttribute(r,e),_end.fromBufferAttribute(r,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class LineLoop extends Line{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class PointsMaterial extends Material{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_position$2=new Vector3;class Points extends Object3D{constructor(e=new BufferGeometry,t=new PointsMaterial){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(r,i){var e=this.geometry,n=this.matrixWorld,t=r.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere.copy(e.boundingSphere),_sphere.applyMatrix4(n),_sphere.radius+=t,!1!==r.ray.intersectsSphere(_sphere)){_inverseMatrix.copy(n).invert(),_ray.copy(r.ray).applyMatrix4(_inverseMatrix);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t,o=e.index,l=e.attributes.position;if(null!==o)for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++){var h=o.getX(e);_position$2.fromBufferAttribute(l,h),testPoint(_position$2,h,s,n,r,i,this)}else for(let e=Math.max(0,a.start),t=Math.min(l.count,a.start+a.count);e<t;e++)_position$2.fromBufferAttribute(l,e),testPoint(_position$2,e,s,n,r,i,this)}}updateMorphTargets(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(0<t.length){var r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}}function testPoint(e,t,r,i,n,a,s){var o=_ray.distanceSqToPoint(e);o<r&&(r=new Vector3,_ray.closestPointToPoint(e,r),r.applyMatrix4(i),(e=n.ray.origin.distanceTo(r))<n.near||n.far<e||a.push({distance:e,distanceToRay:Math.sqrt(o),point:r,index:t,face:null,object:s}))}class VideoTexture extends Texture{constructor(t,e,r,i,n,a,s,o,l){super(t,e,r,i,n,a,s,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==a?a:LinearFilter,this.magFilter=void 0!==n?n:LinearFilter,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class FramebufferTexture extends Texture{constructor(e,t,r){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=r,this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.generateMipmaps=!1,this.needsUpdate=!0}}class CompressedTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,h,c,u){super(null,a,s,o,l,h,i,n,c,u),this.isCompressedTexture=!0,this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class CanvasTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l){super(e,t,r,i,n,a,s,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Curve{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){var r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return r}getSpacedPoints(t=5){var r=[];for(let e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var r=[];let i,n=this.getPoint(0),a=0;r.push(0);for(let e=1;e<=t;e++)i=this.getPoint(e/t),a+=i.distanceTo(n),r.push(a),n=i;return this.cacheArcLengths=r}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var r=this.getLengths();let i=0;var n=r.length;let a,s=(a=t||e*r[n-1],0),o=n-1,l;for(;s<=o;)if((l=r[i=Math.floor(s+(o-s)/2)]-a)<0)s=i+1;else{if(!(0<l)){o=i;break}o=i-1}return r[i=o]===a?i/(n-1):(t=r[i],e=r[i+1],e=(a-t)/(e-t),(i+e)/(n-1))}getTangent(e,t){let r=e-1e-4,i=e+1e-4;r<0&&(r=0),1<i&&(i=1);var e=this.getPoint(r),n=this.getPoint(i),t=t||new(e.isVector2?Vector2:Vector3);return t.copy(n).sub(e).normalize(),t}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(r,e){var t=new Vector3,i=[],n=[],a=[],s=new Vector3,o=new Matrix4;for(let e=0;e<=r;e++){var l=e/r;i[e]=this.getTangentAt(l,new Vector3)}n[0]=new Vector3,a[0]=new Vector3;let h=Number.MAX_VALUE;var c,u=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);u<=h&&(h=u,t.set(1,0,0)),d<=h&&(h=d,t.set(0,1,0)),p<=h&&t.set(0,0,1),s.crossVectors(i[0],t).normalize(),n[0].crossVectors(i[0],s),a[0].crossVectors(i[0],n[0]);for(let e=1;e<=r;e++)n[e]=n[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON&&(s.normalize(),c=Math.acos(clamp(i[e-1].dot(i[e]),-1,1)),n[e].applyMatrix4(o.makeRotationAxis(s,c))),a[e].crossVectors(i[e],n[e]);if(!0===e){let t=Math.acos(clamp(n[0].dot(n[r]),-1,1));t/=r,0<i[0].dot(s.crossVectors(n[0],n[r]))&&(t=-t);for(let e=1;e<=r;e++)n[e].applyMatrix4(o.makeRotationAxis(i[e],t*e)),a[e].crossVectors(i[e],n[e])}return{tangents:i,normals:n,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class EllipseCurve extends Curve{constructor(e=0,t=0,r=1,i=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){var t=t||new Vector2,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(var n=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=n?0:r),!0!==this.aClockwise||n||(i===r?i=-r:i-=r);var a,s,n=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(n),l=this.aY+this.yRadius*Math.sin(n);return 0!==this.aRotation&&(e=Math.cos(this.aRotation),n=Math.sin(this.aRotation),a=o-this.aX,s=l-this.aY,o=a*e-s*n+this.aX,l=a*n+s*e+this.aY),t.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){var e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ArcCurve extends EllipseCurve{constructor(e,t,r,i,n,a){super(e,t,r,r,i,n,a),this.isArcCurve=!0,this.type="ArcCurve"}}function CubicPoly(){let n=0,a=0,s=0,o=0;function l(e,t,r,i){n=e,a=r,s=-3*e+3*t-2*r-i,o=2*e-2*t+r+i}return{initCatmullRom:function(e,t,r,i,n){l(t,r,n*(r-e),n*(i-t))},initNonuniformCatmullRom:function(e,t,r,i,n,a,s){e=(t-e)/n-(r-e)/(n+a)+(r-t)/a,n=(r-t)/a-(i-t)/(a+s)+(i-r)/s;l(t,r,e*=a,n*=a)},calc:function(e){var t=e*e,r=t*e;return n+a*e+s*t+o*r}}}const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;class CatmullRomCurve3 extends Curve{constructor(e=[],t=!1,r="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=i}getPoint(i,e=new Vector3){var n=this.points,t=n.length,i=(t-(this.closed?0:1))*i;let r=Math.floor(i),a=i-r;this.closed?r+=0<r?0:(Math.floor(Math.abs(r)/t)+1)*t:0===a&&r===t-1&&(r=t-2,a=1);let s,o;s=this.closed||0<r?n[(r-1)%t]:(tmp.subVectors(n[0],n[1]).add(n[0]),tmp);var i=n[r%t],l=n[(r+1)%t];if(o=this.closed||r+2<t?n[(r+2)%t]:(tmp.subVectors(n[t-1],n[t-2]).add(n[t-1]),tmp),"centripetal"===this.curveType||"chordal"===this.curveType){n="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(i),n),t=Math.pow(i.distanceToSquared(l),n),r=Math.pow(l.distanceToSquared(o),n);t<1e-4&&(t=1),e<1e-4&&(e=t),r<1e-4&&(r=t),px.initNonuniformCatmullRom(s.x,i.x,l.x,o.x,e,t,r),py.initNonuniformCatmullRom(s.y,i.y,l.y,o.y,e,t,r),pz.initNonuniformCatmullRom(s.z,i.z,l.z,o.z,e,t,r)}else"catmullrom"===this.curveType&&(px.initCatmullRom(s.x,i.x,l.x,o.x,this.tension),py.initCatmullRom(s.y,i.y,l.y,o.y,this.tension),pz.initCatmullRom(s.z,i.z,l.z,o.z,this.tension));return e.set(px.calc(a),py.calc(a),pz.calc(a)),e}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push(i.clone())}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}toJSON(){var r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){var i=this.points[e];r.points.push(i.toArray())}return r.closed=this.closed,r.curveType=this.curveType,r.tension=this.tension,r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push((new Vector3).fromArray(i))}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}}function CatmullRom(e,t,r,i,n){var t=.5*(i-t),n=.5*(n-r),a=e*e;return(2*r-2*i+t+n)*(e*a)+(-3*r+3*i-2*t-n)*a+t*e+r}function QuadraticBezierP0(e,t){e=1-e;return e*e*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,i){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,i)}function CubicBezierP0(e,t){e=1-e;return e*e*e*t}function CubicBezierP1(e,t){var r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,i,n){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,i)+CubicBezierP3(e,n)}class CubicBezierCurve extends Curve{constructor(e=new Vector2,t=new Vector2,r=new Vector2,i=new Vector2){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=i}getPoint(e,t=new Vector2){var r=this.v0,i=this.v1,n=this.v2,a=this.v3;return t.set(CubicBezier(e,r.x,i.x,n.x,a.x),CubicBezier(e,r.y,i.y,n.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class CubicBezierCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3,r=new Vector3,i=new Vector3){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=i}getPoint(e,t=new Vector3){var r=this.v0,i=this.v1,n=this.v2,a=this.v3;return t.set(CubicBezier(e,r.x,i.x,n.x,a.x),CubicBezier(e,r.y,i.y,n.y,a.y),CubicBezier(e,r.z,i.z,n.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class LineCurve extends Curve{constructor(e=new Vector2,t=new Vector2){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Vector2){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){t=t||new Vector2;return t.copy(this.v2).sub(this.v1).normalize(),t}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class LineCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new Vector3){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class QuadraticBezierCurve extends Curve{constructor(e=new Vector2,t=new Vector2,r=new Vector2){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Vector2){var r=this.v0,i=this.v1,n=this.v2;return t.set(QuadraticBezier(e,r.x,i.x,n.x),QuadraticBezier(e,r.y,i.y,n.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class QuadraticBezierCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3,r=new Vector3){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Vector3){var r=this.v0,i=this.v1,n=this.v2;return t.set(QuadraticBezier(e,r.x,i.x,n.x),QuadraticBezier(e,r.y,i.y,n.y),QuadraticBezier(e,r.z,i.z,n.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class SplineCurve extends Curve{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Vector2){var r=this.points,e=(r.length-1)*e,i=Math.floor(e),e=e-i,n=r[0===i?i:i-1],a=r[i],s=r[i>r.length-2?r.length-1:i+1],r=r[i>r.length-3?r.length-1:i+2];return t.set(CatmullRom(e,n.x,a.x,s.x,r.x),CatmullRom(e,n.y,a.y,s.y,r.y)),t}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push(i.clone())}return this}toJSON(){var r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){var i=this.points[e];r.points.push(i.toArray())}return r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push((new Vector2).fromArray(i))}return this}}var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});class CurvePath extends Curve{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))}getPoint(e,t){var r,i,n,a=e*this.getLength(),s=this.getCurveLengths();let o=0;for(;o<s.length;){if(s[o]>=a)return r=s[o]-a,n=(i=this.curves[o]).getLength(),i.getPointAt(0===n?0:1-r/n,t);o++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var r=[];let i=0;for(let e=0,t=this.curves.length;e<t;e++)i+=this.curves[e].getLength(),r.push(i);return this.cacheLengths=r}getSpacedPoints(t=40){var r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return this.autoClose&&r.push(r[0]),r}getPoints(r=12){var i=[];let n;for(let e=0,t=this.curves;e<t.length;e++){var a=t[e],s=a.isEllipseCurve?2*r:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?r*a.points.length:r,o=a.getPoints(s);for(let e=0;e<o.length;e++){var l=o[e];n&&n.equals(l)||(i.push(l),n=l)}}return this.autoClose&&1<i.length&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(r){super.copy(r),this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var i=r.curves[e];this.curves.push(i.clone())}return this.autoClose=r.autoClose,this}toJSON(){var r=super.toJSON();r.autoClose=this.autoClose,r.curves=[];for(let e=0,t=this.curves.length;e<t;e++){var i=this.curves[e];r.curves.push(i.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.autoClose=r.autoClose,this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var i=r.curves[e];this.curves.push((new Curves[i.type]).fromJSON(i))}return this}}class Path extends CurvePath{constructor(e){super(),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}setFromPoints(r){this.moveTo(r[0].x,r[0].y);for(let e=1,t=r.length;e<t;e++)this.lineTo(r[e].x,r[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,i){e=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,i));return this.curves.push(e),this.currentPoint.set(r,i),this}bezierCurveTo(e,t,r,i,n,a){e=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,i),new Vector2(n,a));return this.curves.push(e),this.currentPoint.set(n,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new SplineCurve(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,i,n,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,r,i,n,a),this}absarc(e,t,r,i,n,a){return this.absellipse(e,t,r,r,i,n,a),this}ellipse(e,t,r,i,n,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,r,i,n,a,s,o),this}absellipse(e,t,r,i,n,a,s,o){e=new EllipseCurve(e,t,r,i,n,a,s,o),0<this.curves.length&&((t=e.getPoint(0)).equals(this.currentPoint)||this.lineTo(t.x,t.y)),this.curves.push(e),r=e.getPoint(1);return this.currentPoint.copy(r),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){var e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class LatheGeometry extends BufferGeometry{constructor(r=[new Vector2(0,-.5),new Vector2(.5,0),new Vector2(0,.5)],i=12,e=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:r,segments:i,phiStart:e,phiLength:n},i=Math.floor(i),n=clamp(n,0,2*Math.PI);var a=[],s=[],o=[],l=[],h=[],c=1/i,u=new Vector3,d=new Vector2,t=new Vector3,p=new Vector3,m=new Vector3;let f=0,g=0;for(let e=0;e<=r.length-1;e++)switch(e){case 0:f=r[e+1].x-r[e].x,g=r[e+1].y-r[e].y,t.x=+g,t.y=-f,t.z=0*g,m.copy(t),t.normalize(),l.push(t.x,t.y,t.z);break;case r.length-1:l.push(m.x,m.y,m.z);break;default:f=r[e+1].x-r[e].x,g=r[e+1].y-r[e].y,t.x=+g,t.y=-f,t.z=0*g,p.copy(t),t.x+=m.x,t.y+=m.y,t.z+=m.z,t.normalize(),l.push(t.x,t.y,t.z),m.copy(p)}for(let t=0;t<=i;t++){var v=e+t*c*n,_=Math.sin(v),y=Math.cos(v);for(let e=0;e<=r.length-1;e++){u.x=r[e].x*_,u.y=r[e].y,u.z=r[e].x*y,s.push(u.x,u.y,u.z),d.x=t/i,d.y=e/(r.length-1),o.push(d.x,d.y);var x=l[3*e+0]*_,M=l[3*e+1],b=l[3*e+0]*y;h.push(x,M,b)}}for(let t=0;t<i;t++)for(let e=0;e<r.length-1;e++){var S=e+t*r.length,w=S+r.length,T=S+r.length+1,A=S+1;a.push(S,w,A),a.push(T,A,w)}this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),this.setAttribute("normal",new Float32BufferAttribute(h,3))}static fromJSON(e){return new LatheGeometry(e.points,e.segments,e.phiStart,e.phiLength)}}class CapsuleGeometry extends LatheGeometry{constructor(e=1,t=1,r=4,i=8){var n=new Path;n.absarc(0,-t/2,e,1.5*Math.PI,0),n.absarc(0,t/2,e,0,.5*Math.PI),super(n.getPoints(r),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:r,radialSegments:i}}static fromJSON(e){return new CapsuleGeometry(e.radius,e.length,e.capSegments,e.radialSegments)}}class CircleGeometry extends BufferGeometry{constructor(r=1,i=8,n=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:r,segments:i,thetaStart:n,thetaLength:a},i=Math.max(3,i);var t=[],s=[],o=[],l=[],h=new Vector3,c=new Vector2;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=i;e++,t+=3){var u=n+e/i*a;h.x=r*Math.cos(u),h.y=r*Math.sin(u),s.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(s[t]/r+1)/2,c.y=(s[t+1]/r+1)/2,l.push(c.x,c.y)}for(let e=1;e<=i;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}static fromJSON(e){return new CircleGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class CylinderGeometry extends BufferGeometry{constructor(p=1,m=1,t=1,f=8,i=1,e=!1,g=0,v=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:p,radiusBottom:m,height:t,radialSegments:f,heightSegments:i,openEnded:e,thetaStart:g,thetaLength:v};const _=this,y=(f=Math.floor(f),i=Math.floor(i),[]),x=[],M=[],b=[];let S=0;const n=[],w=t/2;let T=0;{var a=new Vector3,s=new Vector3;let r=0;var o=(m-p)/t;for(let e=0;e<=i;e++){var l=[],h=e/i,c=h*(m-p)+p;for(let e=0;e<=f;e++){var u=e/f,d=u*v+g,A=Math.sin(d),d=Math.cos(d);s.x=c*A,s.y=-h*t+w,s.z=c*d,x.push(s.x,s.y,s.z),a.set(A,o,d).normalize(),M.push(a.x,a.y,a.z),b.push(u,1-h),l.push(S++)}n.push(l)}for(let t=0;t<f;t++)for(let e=0;e<i;e++){var C=n[e][t],E=n[e+1][t],L=n[e+1][t+1],R=n[e][t+1];y.push(C,E,R),y.push(E,L,R),r+=6}_.addGroup(T,r,0),T+=r}function r(t){var r=S,i=new Vector2,n=new Vector3;let a=0;var s=!0===t?p:m,o=!0===t?1:-1;for(let e=1;e<=f;e++)x.push(0,w*o,0),M.push(0,o,0),b.push(.5,.5),S++;var l=S;for(let e=0;e<=f;e++){var h=e/f*v+g,c=Math.cos(h),h=Math.sin(h);n.x=s*h,n.y=w*o,n.z=s*c,x.push(n.x,n.y,n.z),M.push(0,o,0),i.x=.5*c+.5,i.y=.5*h*o+.5,b.push(i.x,i.y),S++}for(let e=0;e<f;e++){var u=r+e,d=l+e;!0===t?y.push(d,d+1,u):y.push(d+1,d,u),a+=3}_.addGroup(T,a,!0===t?1:2),T+=a}!1===e&&(0<p&&r(!0),0<m)&&r(!1),this.setIndex(y),this.setAttribute("position",new Float32BufferAttribute(x,3)),this.setAttribute("normal",new Float32BufferAttribute(M,3)),this.setAttribute("uv",new Float32BufferAttribute(b,2))}static fromJSON(e){return new CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ConeGeometry extends CylinderGeometry{constructor(e=1,t=1,r=8,i=1,n=!1,a=0,s=2*Math.PI){super(0,e,t,r,i,n,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:a,thetaLength:s}}static fromJSON(e){return new ConeGeometry(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class PolyhedronGeometry extends BufferGeometry{constructor(r=[],t=[],e=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:r,indices:t,radius:e,detail:i};const n=[],a=[];var V=i,s=new Vector3,o=new Vector3,l=new Vector3;for(let e=0;e<t.length;e+=3){I(t[e+0],s),I(t[e+1],o),I(t[e+2],l);{h=void 0;c=void 0;u=void 0;d=void 0;p=void 0;m=void 0;f=void 0;g=void 0;v=void 0;_=void 0;var h=s;var c=o;var u=l;var d=V;var p=d+1,m=[];for(let t=0;t<=p;t++){m[t]=[];var f=h.clone().lerp(u,t/p),g=c.clone().lerp(u,t/p),v=p-t;for(let e=0;e<=v;e++)0===e&&t===p?m[t][e]=f:m[t][e]=f.clone().lerp(g,e/v)}for(let t=0;t<p;t++)for(let e=0;e<2*(p-t)-1;e++){var _=Math.floor(e/2);e%2==0?(D(m[t][_+1]),D(m[t+1][_]),D(m[t][_])):(D(m[t][_+1]),D(m[t+1][_+1]),D(m[t+1][_]))}}}var N=e,y=new Vector3;for(let e=0;e<n.length;e+=3)y.x=n[e+0],y.y=n[e+1],y.z=n[e+2],y.normalize().multiplyScalar(N),n[e+0]=y.x,n[e+1]=y.y,n[e+2]=y.z;var x=new Vector3;for(let e=0;e<n.length;e+=3){x.x=n[e+0],x.y=n[e+1],x.z=n[e+2];var G=F(x)/2/Math.PI+.5,O=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(x)/Math.PI+.5;a.push(G,1-O)}var M=new Vector3,b=new Vector3,S=new Vector3,w=new Vector3,T=new Vector2,A=new Vector2,C=new Vector2;for(let e=0,t=0;e<n.length;e+=9,t+=6){M.set(n[e+0],n[e+1],n[e+2]),b.set(n[e+3],n[e+4],n[e+5]),S.set(n[e+6],n[e+7],n[e+8]),T.set(a[t+0],a[t+1]),A.set(a[t+2],a[t+3]),C.set(a[t+4],a[t+5]),w.copy(M).add(b).add(S).divideScalar(3);var E=F(w);B(T,t+0,M,E),B(A,t+2,b,E),B(C,t+4,S,E)}for(let e=0;e<a.length;e+=6){var L=a[e+0],R=a[e+2],P=a[e+4],U=Math.max(L,R,P),z=Math.min(L,R,P);.9<U&&z<.1&&(L<.2&&(a[e+0]+=1),R<.2&&(a[e+2]+=1),P<.2)&&(a[e+4]+=1)}function D(e){n.push(e.x,e.y,e.z)}function I(e,t){e*=3;t.x=r[0+e],t.y=r[1+e],t.z=r[2+e]}function B(e,t,r,i){i<0&&1===e.x&&(a[t]=e.x-1),0===r.x&&0===r.z&&(a[t]=i/2/Math.PI+.5)}function F(e){return Math.atan2(e.z,-e.x)}this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("normal",new Float32BufferAttribute(n.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(a,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new PolyhedronGeometry(e.vertices,e.indices,e.radius,e.details)}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2,i=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new DodecahedronGeometry(e.radius,e.detail)}}const _v0=new Vector3,_v1$1=new Vector3,_normal=new Vector3,_triangle=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){var r,i,n=Math.pow(10,4),a=Math.cos(DEG2RAD*t),s=e.getIndex(),o=e.getAttribute("position"),l=(s||o).count,h=[0,0,0],c=["a","b","c"],u=new Array(3),d={},p=[];for(let e=0;e<l;e+=3){s?(h[0]=s.getX(e),h[1]=s.getX(e+1),h[2]=s.getX(e+2)):(h[0]=e,h[1]=e+1,h[2]=e+2);var{a:m,b:f,c:g}=_triangle;if(m.fromBufferAttribute(o,h[0]),f.fromBufferAttribute(o,h[1]),g.fromBufferAttribute(o,h[2]),_triangle.getNormal(_normal),u[0]=`${Math.round(m.x*n)},${Math.round(m.y*n)},`+Math.round(m.z*n),u[1]=`${Math.round(f.x*n)},${Math.round(f.y*n)},`+Math.round(f.z*n),u[2]=`${Math.round(g.x*n)},${Math.round(g.y*n)},`+Math.round(g.z*n),u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let e=0;e<3;e++){var v=(e+1)%3,_=u[e],y=u[v],x=_triangle[c[e]],M=_triangle[c[v]],b=_+"_"+y,y=y+"_"+_;y in d&&d[y]?(_normal.dot(d[y].normal)<=a&&(p.push(x.x,x.y,x.z),p.push(M.x,M.y,M.z)),d[y]=null):b in d||(d[b]={index0:h[e],index1:h[v],normal:_normal.clone()})}}for(const S in d)d[S]&&({index0:r,index1:i}=d[S],_v0.fromBufferAttribute(o,r),_v1$1.fromBufferAttribute(o,i),p.push(_v0.x,_v0.y,_v0.z),p.push(_v1$1.x,_v1$1.y,_v1$1.z));this.setAttribute("position",new Float32BufferAttribute(p,3))}}}class Shape extends Path{constructor(e){super(e),this.uuid=generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(r){var i=[];for(let e=0,t=this.holes.length;e<t;e++)i[e]=this.holes[e].getPoints(r);return i}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(r){super.copy(r),this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var i=r.holes[e];this.holes.push(i.clone())}return this}toJSON(){var r=super.toJSON();r.uuid=this.uuid,r.holes=[];for(let e=0,t=this.holes.length;e<t;e++){var i=this.holes[e];r.holes.push(i.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.uuid=r.uuid,this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var i=r.holes[e];this.holes.push((new Path).fromJSON(i))}return this}}const Earcut={triangulate:function(o,l,h=2){var c=l&&l.length,u=c?l[0]*h:o.length;let d=linkedList(o,0,u,h,!0);var p=[];if(d&&d.next!==d.prev){let t,r,i,n,a,s,e;if(c&&(d=eliminateHoles(o,l,d,h)),o.length>80*h){t=i=o[0],r=n=o[1];for(let e=h;e<u;e+=h)a=o[e],s=o[e+1],a<t&&(t=a),s<r&&(r=s),a>i&&(i=a),s>n&&(n=s);e=0!==(e=Math.max(i-t,n-r))?1/e:0}earcutLinked(d,p,h,t,r,e)}return p}};function linkedList(e,t,r,i,n){let a,s;if(n===0<signedArea(e,t,r,i))for(a=t;a<r;a+=i)s=insertNode(a,e[a],e[a+1],s);else for(a=r-i;a>=t;a-=i)s=insertNode(a,e[a],e[a+1],s);return s&&equals(s,s.next)&&(removeNode(s),s=s.next),s}function filterPoints(e,t){if(!e)return e;t=t||e;let r=e,i;do{if(i=!1,r.steiner||!equals(r,r.next)&&0!==area(r.prev,r,r.next))r=r.next;else{if(removeNode(r),(r=t=r.prev)===r.next)break;i=!0}}while(i||r!==t);return t}function earcutLinked(i,n,a,s,o,l,h){if(i){!h&&l&&indexCurve(i,s,o,l);let e=i,t,r;for(;i.prev!==i.next;)if(t=i.prev,r=i.next,l?isEarHashed(i,s,o,l):isEar(i))n.push(t.i/a),n.push(i.i/a),n.push(r.i/a),removeNode(i),i=r.next,e=r.next;else if((i=r)===e){h?1===h?earcutLinked(i=cureLocalIntersections(filterPoints(i),n,a),n,a,s,o,l,2):2===h&&splitEarcut(i,n,a,s,o,l):earcutLinked(filterPoints(i),n,a,s,o,l,1);break}}}function isEar(e){var t=e.prev,r=e,i=e.next;if(0<=area(t,r,i))return!1;let n=e.next.next;for(;n!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,i.x,i.y,n.x,n.y)&&0<=area(n.prev,n,n.next))return!1;n=n.next}return!0}function isEarHashed(e,t,r,i){var n=e.prev,a=e,s=e.next;if(0<=area(n,a,s))return!1;var o=(n.x<a.x?n.x<s.x?n:s:a.x<s.x?a:s).x,l=(n.y<a.y?n.y<s.y?n:s:a.y<s.y?a:s).y,h=(n.x>a.x?n.x>s.x?n:s:a.x>s.x?a:s).x,c=(n.y>a.y?n.y>s.y?n:s:a.y>s.y?a:s).y,u=zOrder(o,l,t,r,i),d=zOrder(h,c,t,r,i);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=area(p.prev,p,p.next))return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=area(m.prev,m,m.next))return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=area(p.prev,p,p.next))return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=area(m.prev,m,m.next))return!1;m=m.nextZ}return!0}function cureLocalIntersections(e,t,r){let i=e;do{var n=i.prev,a=i.next.next;!equals(n,a)&&intersects(n,i,i.next,a)&&locallyInside(n,a)&&locallyInside(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),removeNode(i),removeNode(i.next),i=e=a),i=i.next}while(i!==e);return filterPoints(i)}function splitEarcut(e,t,r,i,n,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){var o;if(s.i!==e.i&&isValidDiagonal(s,e))return o=splitPolygon(s,e),s=filterPoints(s,s.next),o=filterPoints(o,o.next),earcutLinked(s,t,r,i,n,a),void earcutLinked(o,t,r,i,n,a);e=e.next}}while((s=s.next)!==e)}function eliminateHoles(e,t,r,i){var n=[];let a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*i,l=a<s-1?t[a+1]*i:e.length,(h=linkedList(e,o,l,i,!1))===h.next&&(h.steiner=!0),n.push(getLeftmost(h));for(n.sort(compareX),a=0;a<n.length;a++)eliminateHole(n[a],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){(t=findHoleBridge(e,t))&&(e=splitPolygon(t,e),filterPoints(t,t.next),filterPoints(e,e.next))}function findHoleBridge(r,e){let i=e;var n=r.x,a=r.y;let s=-1/0,o;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var t=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>s){if((s=t)===n){if(a===i.y)return i;if(a===i.next.y)return i.next}o=i.x<i.next.x?i:i.next}}}while((i=i.next)!==e);if(!o)return null;if(n!==s){var l=o,h=o.x,c=o.y;let e=1/0,t;for(i=o;n>=i.x&&i.x>=h&&n!==i.x&&pointInTriangle(a<c?n:s,a,h,c,a<c?s:n,a,i.x,i.y)&&(t=Math.abs(a-i.y)/(n-i.x),locallyInside(i,r))&&(t<e||t===e&&(i.x>o.x||i.x===o.x&&sectorContainsSector(o,i)))&&(o=i,e=t),(i=i.next)!==l;);}return o}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,r,i){let n=e;for(;null===n.z&&(n.z=zOrder(n.x,n.y,t,r,i)),n.prevZ=n.prev,n.nextZ=n.next,(n=n.next)!==e;);n.prevZ.nextZ=null,n.prevZ=null,sortLinked(n)}function sortLinked(e){let t,r,i,n,a,s,o,l,h=1;do{for(r=e,e=null,a=null,s=0;r;){for(s++,i=r,o=0,t=0;t<h&&(o++,i=i.nextZ);t++);for(l=h;0<o||0<l&&i;)0!==o&&(0===l||!i||r.z<=i.z)?(r=(n=r).nextZ,o--):(i=(n=i).nextZ,l--),a?a.nextZ=n:e=n,n.prevZ=a,a=n;r=i}}while(a.nextZ=null,h*=2,1<s);return e}function zOrder(e,t,r,i,n){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*n)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*n)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,r=e;for(;(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),(t=t.next)!==e;);return r}function pointInTriangle(e,t,r,i,n,a,s,o){return 0<=(n-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(i-o)-(r-s)*(t-o)&&0<=(r-s)*(a-o)-(n-s)*(i-o)}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&0<area(e.prev,e,e.next)&&0<area(t.prev,t,t.next))}function area(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,i){var n=sign(area(e,t,r)),a=sign(area(e,t,i)),s=sign(area(r,i,e)),o=sign(area(r,i,t));return n!==a&&s!==o||!!(0===n&&onSegment(e,r,t)||0===a&&onSegment(e,i,t)||0===s&&onSegment(r,e,i)||0===o&&onSegment(r,t,i))}function onSegment(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function sign(e){return 0<e?1:e<0?-1:0}function intersectsPolygon(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0}while((r=r.next)!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?0<=area(e,t,e.next)&&0<=area(e,e.prev,t):area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let r=e,i=!1;for(var n=(e.x+t.x)/2,a=(e.y+t.y)/2;r.y>a!=r.next.y>a&&r.next.y!==r.y&&n<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(i=!i),(r=r.next)!==e;);return i}function splitPolygon(e,t){var r=new Node(e.i,e.x,e.y),i=new Node(t.i,t.x,t.y),n=e.next,a=t.prev;return(e.next=t).prev=e,(r.next=n).prev=r,(i.next=r).prev=i,(a.next=i).prev=a,i}function insertNode(e,t,r,i){e=new Node(e,t,r);return i?(e.next=i.next,(e.prev=i).next.prev=e,i.next=e):(e.prev=e).next=e,e}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(r,i,n,a){let s=0;for(let e=i,t=n-a;e<n;e+=a)s+=(r[t]-r[e])*(r[e+1]+r[t+1]),t=e;return s}class ShapeUtils{static area(r){var i=r.length;let n=0;for(let e=i-1,t=0;t<i;e=t++)n+=r[e].x*r[t].y-r[t].x*r[e].y;return.5*n}static isClockWise(e){return ShapeUtils.area(e)<0}static triangulateShape(e,t){var r=[],i=[],n=[];removeDupEndPts(e),addContour(r,e);let a=e.length;t.forEach(removeDupEndPts);for(let e=0;e<t.length;e++)i.push(a),a+=t[e].length,addContour(r,t[e]);var s=Earcut.triangulate(r,i);for(let e=0;e<s.length;e+=3)n.push(s.slice(e,e+3));return n}}function removeDupEndPts(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function addContour(t,r){for(let e=0;e<r.length;e++)t.push(r[e].x),t.push(r[e].y)}class ExtrudeGeometry extends BufferGeometry{constructor(r=new Shape([new Vector2(.5,.5),new Vector2(-.5,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]),K={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:r,options:K},r=Array.isArray(r)?r:[r];const Q=this,ee=[],te=[];for(let e=0,t=r.length;e<t;e++)!function(e){const i=[],V=void 0!==K.curveSegments?K.curveSegments:12,p=void 0!==K.steps?K.steps:1,r=void 0!==K.depth?K.depth:1;let s=void 0===K.bevelEnabled||K.bevelEnabled,t=void 0!==K.bevelThickness?K.bevelThickness:.2,n=void 0!==K.bevelSize?K.bevelSize:t-.1,a=void 0!==K.bevelOffset?K.bevelOffset:0,m=void 0!==K.bevelSegments?K.bevelSegments:3;const o=K.extrudePath,N=void 0!==K.UVGenerator?K.UVGenerator:WorldUVGenerator;let l,h=!1,c,u,d,f;o&&(l=o.getSpacedPoints(p),h=!0,s=!1,c=o.computeFrenetFrames(p,!1),u=new Vector3,d=new Vector3,f=new Vector3);s||(m=0,t=0,n=0,a=0);e=e.extractPoints(V);let g=e.shape;const v=e.holes,G=!ShapeUtils.isClockWise(g);if(G){g=g.reverse();for(let e=0,t=v.length;e<t;e++){var O=v[e];ShapeUtils.isClockWise(O)&&(v[e]=O.reverse())}}const _=ShapeUtils.triangulateShape(g,v),y=g;for(let e=0,t=v.length;e<t;e++){var U=v[e];g=g.concat(U)}function x(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const M=g.length,b=_.length;function z(e,t,r){let i,n,a;var s=e.x-t.x,o=e.y-t.y,l=r.x-e.x,h=r.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,t=t.y+s/u,u=((r.x-h/d-p)*h-(r.y+l/d-t)*l)/(s*h-o*l),r=(i=p+s*u-e.x,n=t+o*u-e.y,i*i+n*n);if(r<=2)return new Vector2(i,n);a=Math.sqrt(r/2)}else{let e=!1;Number.EPSILON<s?Number.EPSILON<l&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),a=e?(i=-o,n=s,Math.sqrt(c)):(i=s,n=o,Math.sqrt(c/2))}return new Vector2(i/a,n/a)}var S=[];for(let e=0,t=y.length,r=t-1,i=e+1;e<t;e++,r++,i++)r===t&&(r=0),i===t&&(i=0),S[e]=z(y[e],y[r],y[i]);var w=[];let T,A=S.concat();for(let e=0,t=v.length;e<t;e++){var C=v[e];T=[];for(let e=0,t=C.length,r=t-1,i=e+1;e<t;e++,r++,i++)r===t&&(r=0),i===t&&(i=0),T[e]=z(C[e],C[r],C[i]);w.push(T),A=A.concat(T)}for(let e=0;e<m;e++){var k=e/m,W=t*Math.cos(k*Math.PI/2);const E=n*Math.sin(k*Math.PI/2)+a;for(let e=0,t=y.length;e<t;e++){var H=x(y[e],S[e],E);D(H.x,H.y,-W)}for(let e=0,t=v.length;e<t;e++){var $=v[e];T=w[e];for(let e=0,t=$.length;e<t;e++){var j=x($[e],T[e],E);D(j.x,j.y,-W)}}}const E=n+a;for(let e=0;e<M;e++){var L=s?x(g[e],A[e],E):g[e];h?(d.copy(c.normals[0]).multiplyScalar(L.x),u.copy(c.binormals[0]).multiplyScalar(L.y),f.copy(l[0]).add(d).add(u),D(f.x,f.y,f.z)):D(L.x,L.y,0)}for(let t=1;t<=p;t++)for(let e=0;e<M;e++){var R=s?x(g[e],A[e],E):g[e];h?(d.copy(c.normals[t]).multiplyScalar(R.x),u.copy(c.binormals[t]).multiplyScalar(R.y),f.copy(l[t]).add(d).add(u),D(f.x,f.y,f.z)):D(R.x,R.y,r/p*t)}for(let e=m-1;0<=e;e--){var q=e/m,X=t*Math.cos(q*Math.PI/2);const E=n*Math.sin(q*Math.PI/2)+a;for(let e=0,t=y.length;e<t;e++){var Y=x(y[e],S[e],E);D(Y.x,Y.y,r+X)}for(let e=0,t=v.length;e<t;e++){var Z=v[e];T=w[e];for(let e=0,t=Z.length;e<t;e++){var P=x(Z[e],T[e],E);h?D(P.x,P.y+l[p-1].y,l[p-1].x+X):D(P.x,P.y,r+X)}}}function J(e,i){let t=e.length;for(;0<=--t;){var n=t;let r=t-1;r<0&&(r=e.length-1);for(let e=0,t=p+2*m;e<t;e++){var a=M*e,s=M*(e+1),o=i+r+a,l=i+r+s,h=(d=u=c=h=void 0,i+n+a),c=o,u=l,d=i+n+s;B(h),B(c),B(d),B(c),B(u),B(d),h=ee.length/3,F((c=N.generateSideWallUV(Q,ee,h-6,h-3,h-2,h-1))[0]),F(c[1]),F(c[3]),F(c[1]),F(c[2]),F(c[3])}}}function D(e,t,r){i.push(e),i.push(t),i.push(r)}function I(e,t,r){B(e),B(t),B(r);e=ee.length/3,t=N.generateTopUV(Q,ee,e-3,e-2,e-1);F(t[0]),F(t[1]),F(t[2])}function B(e){ee.push(i[3*e+0]),ee.push(i[3*e+1]),ee.push(i[3*e+2])}function F(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*M;for(let e=0;e<b;e++){var r=_[e];I(r[2]+t,r[1]+t,r[0]+t)}e=p+2*m,t=M*e;for(let e=0;e<b;e++){var i=_[e];I(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<b;e++){var n=_[e];I(n[2],n[1],n[0])}for(let e=0;e<b;e++){var a=_[e];I(a[0]+M*p,a[1]+M*p,a[2]+M*p)}}Q.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let r=0;J(y,r),r+=y.length;for(let e=0,t=v.length;e<t;e++){var i=v[e];J(i,r),r+=i.length}Q.addGroup(e,ee.length/3-e,1)}()}(r[e]);this.setAttribute("position",new Float32BufferAttribute(ee,3)),this.setAttribute("uv",new Float32BufferAttribute(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON();return toJSON$1(this.parameters.shapes,this.parameters.options,e)}static fromJSON(r,i){var n=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=i[r.shapes[e]];n.push(a)}var e=r.options.extrudePath;return void 0!==e&&(r.options.extrudePath=(new Curves[e.type]).fromJSON(e)),new ExtrudeGeometry(n,r.options)}}const WorldUVGenerator={generateTopUV:function(e,t,r,i,n){var a=t[3*r],r=t[3*r+1],s=t[3*i],i=t[3*i+1],o=t[3*n],t=t[3*n+1];return[new Vector2(a,r),new Vector2(s,i),new Vector2(o,t)]},generateSideWallUV:function(e,t,r,i,n,a){var s=t[3*r],o=t[3*r+1],r=t[3*r+2],l=t[3*i],h=t[3*i+1],i=t[3*i+2],c=t[3*n],u=t[3*n+1],n=t[3*n+2],d=t[3*a],p=t[3*a+1],t=t[3*a+2];return Math.abs(o-h)<Math.abs(s-l)?[new Vector2(s,1-r),new Vector2(l,1-i),new Vector2(c,1-n),new Vector2(d,1-t)]:[new Vector2(o,1-r),new Vector2(h,1-i),new Vector2(u,1-n),new Vector2(p,1-t)]}};function toJSON$1(r,e,i){if(i.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var n=r[e];i.shapes.push(n.uuid)}else i.shapes.push(r.uuid);return i.options=Object.assign({},e),void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}class IcosahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new IcosahedronGeometry(e.radius,e.detail)}}class OctahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new OctahedronGeometry(e.radius,e.detail)}}class RingGeometry extends BufferGeometry{constructor(e=.5,t=1,r=8,i=1,n=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:a},r=Math.max(3,r);var s=[],o=[],l=[],h=[];let c=e;var u=(t-e)/(i=Math.max(1,i)),d=new Vector3,p=new Vector2;for(let e=0;e<=i;e++){for(let e=0;e<=r;e++){var m=n+e/r*a;d.x=c*Math.cos(m),d.y=c*Math.sin(m),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}c+=u}for(let e=0;e<i;e++){var f=e*(r+1);for(let e=0;e<r;e++){var g=e+f,v=g+r+1,_=g+r+2,y=g+1;s.push(g,v,y),s.push(v,_,y)}}this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}static fromJSON(e){return new RingGeometry(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ShapeGeometry extends BufferGeometry{constructor(t=new Shape([new Vector2(0,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]),d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let r=0,v=0;if(!1===Array.isArray(t))i(t);else for(let e=0;e<t.length;e++)i(t[e]),this.addGroup(r,v,e),r+=v,v=0;function i(e){var r=m.length/3,e=e.extractPoints(d);let i=e.shape;var n=e.holes;!1===ShapeUtils.isClockWise(i)&&(i=i.reverse());for(let e=0,t=n.length;e<t;e++){var a=n[e];!0===ShapeUtils.isClockWise(a)&&(n[e]=a.reverse())}var s=ShapeUtils.triangulateShape(i,n);for(let e=0,t=n.length;e<t;e++){var o=n[e];i=i.concat(o)}for(let e=0,t=i.length;e<t;e++){var l=i[e];m.push(l.x,l.y,0),f.push(0,0,1),g.push(l.x,l.y)}for(let e=0,t=s.length;e<t;e++){var h=s[e],c=h[0]+r,u=h[1]+r,h=h[2]+r;p.push(c,u,h),v+=3}}this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(m,3)),this.setAttribute("normal",new Float32BufferAttribute(f,3)),this.setAttribute("uv",new Float32BufferAttribute(g,2))}toJSON(){var e=super.toJSON();return toJSON(this.parameters.shapes,e)}static fromJSON(r,i){var n=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=i[r.shapes[e]];n.push(a)}return new ShapeGeometry(n,r.curveSegments)}}function toJSON(r,i){if(i.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var n=r[e];i.shapes.push(n.uuid)}else i.shapes.push(r.uuid);return i}class SphereGeometry extends BufferGeometry{constructor(r=1,i=32,n=16,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:r,widthSegments:i,heightSegments:n,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},i=Math.max(3,Math.floor(i)),n=Math.max(2,Math.floor(n));var h=Math.min(o+l,Math.PI);let c=0;var u=[],d=new Vector3,p=new Vector3,m=[],f=[],g=[],v=[];for(let e=0;e<=n;e++){var _=[],y=e/n;let t=0;0==e&&0==o?t=.5/i:e==n&&h==Math.PI&&(t=-.5/i);for(let e=0;e<=i;e++){var x=e/i;d.x=-r*Math.cos(a+x*s)*Math.sin(o+y*l),d.y=r*Math.cos(o+y*l),d.z=r*Math.sin(a+x*s)*Math.sin(o+y*l),f.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(x+t,1-y),_.push(c++)}u.push(_)}for(let t=0;t<n;t++)for(let e=0;e<i;e++){var M=u[t][e+1],b=u[t][e],S=u[t+1][e],w=u[t+1][e+1];(0!==t||0<o)&&m.push(M,b,w),(t!==n-1||h<Math.PI)&&m.push(b,S,w)}this.setIndex(m),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(g,3)),this.setAttribute("uv",new Float32BufferAttribute(v,2))}static fromJSON(e){return new SphereGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new TetrahedronGeometry(e.radius,e.detail)}}class TorusGeometry extends BufferGeometry{constructor(r=1,i=.4,n=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:r,tube:i,radialSegments:n,tubularSegments:a,arc:s},n=Math.floor(n),a=Math.floor(a);var o=[],l=[],h=[],c=[],u=new Vector3,d=new Vector3,p=new Vector3;for(let t=0;t<=n;t++)for(let e=0;e<=a;e++){var m=e/a*s,f=t/n*Math.PI*2;d.x=(r+i*Math.cos(f))*Math.cos(m),d.y=(r+i*Math.cos(f))*Math.sin(m),d.z=i*Math.sin(f),l.push(d.x,d.y,d.z),u.x=r*Math.cos(m),u.y=r*Math.sin(m),p.subVectors(d,u).normalize(),h.push(p.x,p.y,p.z),c.push(e/a),c.push(t/n)}for(let t=1;t<=n;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,_=(a+1)*(t-1)+e,y=(a+1)*t+e;o.push(g,v,y),o.push(v,_,y)}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}static fromJSON(e){return new TorusGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class TorusKnotGeometry extends BufferGeometry{constructor(e=1,r=.4,i=64,n=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:r,tubularSegments:i,radialSegments:n,p:a,q:s},i=Math.floor(i),n=Math.floor(n);var o=[],l=[],h=[],c=[],u=new Vector3,d=new Vector3,p=new Vector3,m=new Vector3,f=new Vector3,g=new Vector3,v=new Vector3;for(let t=0;t<=i;++t){var _=t/i*a*Math.PI*2;T(_,a,s,e,p),T(.01+_,a,s,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let e=0;e<=n;++e){var y=e/n*Math.PI*2,x=-r*Math.cos(y),y=r*Math.sin(y);u.x=p.x+(x*v.x+y*f.x),u.y=p.y+(x*v.y+y*f.y),u.z=p.z+(x*v.z+y*f.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),h.push(d.x,d.y,d.z),c.push(t/i),c.push(e/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){var M=(n+1)*(t-1)+(e-1),b=(n+1)*t+(e-1),S=(n+1)*t+e,w=(n+1)*(t-1)+e;o.push(M,b,w),o.push(b,S,w)}function T(e,t,r,i,n){var a=Math.cos(e),s=Math.sin(e),r=r/t*e,t=Math.cos(r);n.x=i*(2+t)*.5*a,n.y=i*(2+t)*s*.5,n.z=i*Math.sin(r)*.5}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}static fromJSON(e){return new TorusKnotGeometry(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class TubeGeometry extends BufferGeometry{constructor(a=new QuadraticBezierCurve3(new Vector3(-1,-1,0),new Vector3(-1,1,0),new Vector3(1,1,0)),s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const h=a.computeFrenetFrames(s,e),c=(this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals,new Vector3),u=new Vector3,r=new Vector2;let d=new Vector3;const p=[],m=[],i=[],n=[];for(let e=0;e<s;e++)t(e);t(!1===e?s:0);for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)r.x=t/s,r.y=e/l,i.push(r.x,r.y);for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var f=(l+1)*(t-1)+(e-1),g=(l+1)*t+(e-1),v=(l+1)*t+e,_=(l+1)*(t-1)+e;n.push(f,g,_),n.push(g,v,_)}function t(e){d=a.getPointAt(e/s,d);var t=h.normals[e],r=h.binormals[e];for(let e=0;e<=l;e++){var i=e/l*Math.PI*2,n=Math.sin(i),i=-Math.cos(i);u.x=i*t.x+n*r.x,u.y=i*t.y+n*r.y,u.z=i*t.z+n*r.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+o*u.x,c.y=d.y+o*u.y,c.z=d.z+o*u.z,p.push(c.x,c.y,c.z)}}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(i,2))}toJSON(){var e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new TubeGeometry((new Curves[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class WireframeGeometry extends BufferGeometry{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){var i=[],n=new Set,a=new Vector3,s=new Vector3;if(null!==e.index){var o=e.attributes.position,l=e.index;let r=e.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:l.count,materialIndex:0}]:r).length;e<t;++e){var h=r[e],c=h.start;for(let t=c,e=c+h.count;t<e;t+=3)for(let e=0;e<3;e++){var u=l.getX(t+e),d=l.getX(t+(e+1)%3);a.fromBufferAttribute(o,u),s.fromBufferAttribute(o,d),!0===isUniqueEdge(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}}}else{var r=e.attributes.position;for(let t=0,e=r.count/3;t<e;t++)for(let e=0;e<3;e++){var p=3*t+e,m=3*t+(e+1)%3;a.fromBufferAttribute(r,p),s.fromBufferAttribute(r,m),!0===isUniqueEdge(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}}this.setAttribute("position",new Float32BufferAttribute(i,3))}}}function isUniqueEdge(e,t,r){var i=`${e.x},${e.y},${e.z}-${t.x},${t.y},`+t.z,t=t.x+`,${t.y},${t.z}-${e.x},${e.y},`+e.z;return!0!==r.has(i)&&!0!==r.has(t)&&(r.add(i),r.add(t),!0)}var Geometries=Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CapsuleGeometry:CapsuleGeometry,CapsuleBufferGeometry:CapsuleGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});class ShadowMaterial extends Material{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class RawShaderMaterial extends ShaderMaterial{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class MeshStandardMaterial extends Material{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MeshPhysicalMaterial extends MeshStandardMaterial{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return clamp(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Color(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Color(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Color(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){0<this._sheen!=0<e&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){0<this._clearcoat!=0<e&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){0<this._iridescence!=0<e&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){0<this._transmission!=0<e&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class MeshPhongMaterial extends Material{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MeshToonMaterial extends Material{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class MeshNormalMaterial extends Material{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class MeshLambertMaterial extends Material{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class MeshMatcapMaterial extends Material{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class LineDashedMaterial extends LineBasicMaterial{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function arraySlice(e,t,r){return isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)}function convertArray(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function getKeyframeOrder(r){var t=r.length,i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(e,t){return r[e]-r[t]}),i}function sortedArray(r,i,n){var a=r.length,s=new r.constructor(a);for(let e=0,t=0;t!==a;++e){var o=n[e]*i;for(let e=0;e!==i;++e)s[t++]=r[o+e]}return s}function flattenJSON(t,r,i,n){let a=1,s=t[0];for(;void 0!==s&&void 0===s[n];)s=t[a++];if(void 0!==s){let e=s[n];if(void 0!==e)if(Array.isArray(e))for(;void 0!==(e=s[n])&&(r.push(s.time),i.push.apply(i,e)),void 0!==(s=t[a++]););else if(void 0!==e.toArray)for(;void 0!==(e=s[n])&&(r.push(s.time),e.toArray(i,i.length)),void 0!==(s=t[a++]););else for(;void 0!==(e=s[n])&&(r.push(s.time),i.push(e)),void 0!==(s=t[a++]););}}function subclip(e,t,r,i,n=30){var a=e.clone(),s=(a.name=t,[]);for(let e=0;e<a.tracks.length;++e){var o=a.tracks[e],l=o.getValueSize(),h=[],c=[];for(let t=0;t<o.times.length;++t){var u=o.times[t]*n;if(!(u<r||i<=u)){h.push(o.times[t]);for(let e=0;e<l;++e)c.push(o.values[t*l+e])}}0!==h.length&&(o.times=convertArray(h,o.times.constructor),o.values=convertArray(c,o.values.constructor),s.push(o))}a.tracks=s;let d=1/0;for(let e=0;e<a.tracks.length;++e)d>a.tracks[e].times[0]&&(d=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*d);return a.resetDuration(),a}function makeClipAdditive(t,e=0,r=t,i=30){var n=r.tracks.length,a=e/(i=i<=0?30:i);for(let e=0;e<n;++e){const g=r.tracks[e],v=g.ValueTypeName;if("bool"!==v&&"string"!==v){var s=t.tracks.find(function(e){return e.name===g.name&&e.ValueTypeName===v});if(void 0!==s){let e=0;var o=g.getValueSize();g.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=o/3);let t=0;var l,h,c,u=s.getValueSize(),d=(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=u/3),g.times.length-1);let r;r=a<=g.times[0]?(h=o-(l=e),arraySlice(g.values,l,h)):a>=g.times[d]?(h=(l=d*o+e)+o-e,arraySlice(g.values,l,h)):(d=g.createInterpolant(),c=o-(o=e),d.evaluate(a),arraySlice(d.resultBuffer,o,c)),"quaternion"===v&&(new Quaternion).fromArray(r).normalize().conjugate().toArray(r);var p=s.times.length;for(let e=0;e<p;++e){var m=e*u+t;if("quaternion"===v)Quaternion.multiplyQuaternionsFlat(s.values,m,r,0,s.values,m);else{var f=u-2*t;for(let e=0;e<f;++e)s.values[m+e]-=r[e]}}}}}return t.blendMode=AdditiveAnimationBlendMode,t}var AnimationUtils=Object.freeze({__proto__:null,arraySlice:arraySlice,convertArray:convertArray,isTypedArray:isTypedArray,getKeyframeOrder:getKeyframeOrder,sortedArray:sortedArray,flattenJSON:flattenJSON,subclip:subclip,makeClipAdditive:makeClipAdditive});class Interpolant{constructor(e,t,r,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(t){var r=this.parameterPositions;let i=this._cachedIndex,n=r[i],a=r[i-1];e:{t:{let e;r:{i:if(!(t<n)){for(var s=i+2;;){if(void 0===n){if(t<a)break i;return i=r.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(a=n,t<(n=r[++i]))break t}e=r.length;break r}if(t>=a)break e;var o=r[1];t<o&&(i=2,a=o);for(var l=i-2;;){if(void 0===a)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=a,t>=(a=r[--i-1]))break t}e=i,i=0}for(;i<e;){var h=i+e>>>1;t<r[h]?e=h:i=1+h}if(n=r[i],void 0===(a=r[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=r.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,a,n)}return this.interpolate_(i,a,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){var t=this.resultBuffer,r=this.sampleValues,i=this.valueSize,n=e*i;for(let e=0;e!==i;++e)t[e]=r[n+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class CubicInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding}}intervalChanged_(e,t,r){var i=this.parameterPositions;let n=e-2,a=e+1,s=i[n],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:n=e,s=2*t-r;break;case WrapAroundEnding:n=i.length-2,s=t+i[n]-i[n+1];break;default:n=e,s=r}if(void 0===o)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:a=e,o=2*r-t;break;case WrapAroundEnding:a=1,o=r+i[1]-i[0];break;default:a=e-1,o=t}var l=.5*(r-t),h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-r),this._offsetPrev=n*h,this._offsetNext=a*h}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,c=this._offsetNext,e=this._weightPrev,u=this._weightNext,r=(r-t)/(i-t),i=r*r,t=i*r,d=-e*t+2*e*i-e*r,p=(1+e)*t+(-1.5-2*e)*i+(-.5+e)*r+1,m=(-1-u)*t+(1.5+u)*i+.5*r,f=u*t-u*i;for(let e=0;e!==s;++e)n[e]=d*a[h+e]+p*a[l+e]+m*a[o+e]+f*a[c+e];return n}}class LinearInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(r-t)/(i-t),c=1-h;for(let e=0;e!==s;++e)n[e]=a[l+e]*c+a[o+e]*h;return n}}class DiscreteInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class KeyframeTrack{constructor(e,t,r,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=convertArray(t,this.TimeBufferType),this.values=convertArray(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){var t=e.constructor;let r;return t.toJSON!==this.toJSON?r=t.toJSON(e):(r={name:e.name,times:convertArray(e.times,Array),values:convertArray(e.values,Array)},(t=e.getInterpolation())!==e.DefaultInterpolation&&(r.interpolation=t)),r.type=e.ValueTypeName,r}InterpolantFactoryMethodDiscrete(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrack:",r)}else this.createInterpolant=t;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}}getValueSize(){return this.values.length/this.times.length}shift(r){if(0!==r){var i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]+=r}return this}scale(r){if(1!==r){var i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]*=r}return this}trim(e,t){var r,i=this.times,n=i.length;let a=0,s=n-1;for(;a!==n&&i[a]<e;)++a;for(;-1!==s&&i[s]>t;)--s;return++s,0===a&&s===n||(a>=s&&(s=Math.max(s,1),a=s-1),r=this.getValueSize(),this.times=arraySlice(i,a,s),this.values=arraySlice(this.values,a*r,s*r)),this}validate(){let r=!0;var e=this.getValueSize(),t=(e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),r=!1),this.times),i=this.values,n=t.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),r=!1);let a=null;for(let e=0;e!==n;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),r=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),r=!1;break}a=s}if(void 0!==i&&isTypedArray(i))for(let e=0,t=i.length;e!==t;++e){var o=i[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),r=!1;break}}return r}optimize(){var r=arraySlice(this.times),i=arraySlice(this.values),n=this.getValueSize(),a=this.getInterpolation()===InterpolateSmooth,s=r.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=r[e];if(l!==r[e+1]&&(1!==e||l!==r[0]))if(a)t=!0;else{var h=e*n,c=h-n,u=h+n;for(let e=0;e!==n;++e){var d=i[h+e];if(d!==i[c+e]||d!==i[u+e]){t=!0;break}}}if(t){if(e!==o){r[o]=r[e];var p=e*n,m=o*n;for(let e=0;e!==n;++e)i[m+e]=i[p+e]}++o}}if(0<s){r[o]=r[s];for(let e=s*n,t=o*n,r=0;r!==n;++r)i[t+r]=i[e+r];++o}return o!==r.length?(this.times=arraySlice(r,0,o),this.values=arraySlice(i,0,o*n)):(this.times=r,this.values=i),this}clone(){var e=arraySlice(this.times,0),t=arraySlice(this.values,0),e=new this.constructor(this.name,e,t);return e.createInterpolant=this.createInterpolant,e}}KeyframeTrack.prototype.TimeBufferType=Float32Array,KeyframeTrack.prototype.ValueBufferType=Float32Array,KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName="bool",BooleanKeyframeTrack.prototype.ValueBufferType=Array,BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName="color";class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName="number";class QuaternionLinearInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(r-t)/(i-t);let l=e*s;for(var h=l+s;l!==h;l+=4)Quaternion.slerpFlat(n,0,a,l-s,a,l,o);return n}}class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)}}QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion",QuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear,QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName="string",StringKeyframeTrack.prototype.ValueBufferType=Array,StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName="vector";class AnimationClip{constructor(e,t=-1,r,i=NormalAnimationBlendMode){this.name=e,this.tracks=r,this.duration=t,this.blendMode=i,this.uuid=generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){var r=[],i=e.tracks,n=1/(e.fps||1);for(let e=0,t=i.length;e!==t;++e)r.push(parseKeyframeTrack(i[e]).scale(n));var t=new this(e.name,e.duration,r,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){var r=[],i=e.tracks,e={name:e.name,duration:e.duration,tracks:r,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=i.length;e!==t;++e)r.push(KeyframeTrack.toJSON(i[e]));return e}static CreateFromMorphTargetSequence(e,i,n,a){var s=i.length,o=[];for(let r=0;r<s;r++){let e=[],t=[];e.push((r+s-1)%s,r,(r+1)%s),t.push(0,1,0);var l=getKeyframeOrder(e);e=sortedArray(e,1,l),t=sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+i[r].name+"]",e,t).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let r=e;Array.isArray(e)||(r=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null}static CreateClipsFromMorphTargetSequences(r,e,t){var i={},n=/^([\w-]*?)([\d]+)$/;for(let e=0,t=r.length;e<t;e++){var a=r[e],s=a.name.match(n);if(s&&1<s.length){s=s[1];let e=i[s];e||(i[s]=e=[]),e.push(a)}}var o=[];for(const l in i)o.push(this.CreateFromMorphTargetSequence(l,i[l],e,t));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function r(e,t,r,i,n){var a;0!==r.length&&(flattenJSON(r,r=[],a=[],i),0!==r.length)&&n.push(new e(t,r,a))}var i=[],n=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;var l=e.hierarchy||[];for(let e=0;e<l.length;e++){var h=l[e].keys;if(h&&0!==h.length)if(h[0].morphTargets){var c={};let t;for(t=0;t<h.length;t++)if(h[t].morphTargets)for(let e=0;e<h[t].morphTargets.length;e++)c[h[t].morphTargets[e]]=-1;for(const f in c){var u=[],d=[];for(let e=0;e!==h[t].morphTargets.length;++e){var p=h[t];u.push(p.time),d.push(p.morphTarget===f?1:0)}i.push(new NumberKeyframeTrack(".morphTargetInfluence["+f+"]",u,d))}o=c.length*a}else{var m=".bones["+t[e].name+"]";r(VectorKeyframeTrack,m+".position",h,"pos",i),r(QuaternionKeyframeTrack,m+".quaternion",h,"rot",i),r(VectorKeyframeTrack,m+".scale",h,"scl",i)}}return 0===i.length?null:new this(n,o,i,s)}resetDuration(){let r=0;for(let e=0,t=this.tracks.length;e!==t;++e){var i=this.tracks[e];r=Math.max(r,i.times[i.times.length-1])}return this.duration=r,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){var t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t,r,i=getTrackTypeForValueTypeName(e.type);return void 0===e.times&&(flattenJSON(e.keys,t=[],r=[],"value"),e.times=t,e.values=r),void 0!==i.parse?i.parse(e):new i(e.name,e.times,e.values,e.interpolation)}const Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class LoadingManager{constructor(e,t,r){const i=this;let n=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){s++,!1===n&&void 0!==i.onStart&&i.onStart(e,a,s),n=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,s),a===s&&(n=!1,void 0!==i.onLoad)&&i.onLoad()},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(r){for(let e=0,t=l.length;e<t;e+=2){var i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(r))return n}return null}}}const DefaultLoadingManager=new LoadingManager;class Loader{constructor(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(r,i){const n=this;return new Promise(function(e,t){n.load(r,e,i,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const loading={};class HttpError extends Error{constructor(e,t){super(e),this.response=t}}class FileLoader extends Loader{constructor(e){super(e)}load(a,e,t,r){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);const i=Cache.get(a);if(void 0!==i)return this.manager.itemStart(a),setTimeout(()=>{e&&e(i),this.manager.itemEnd(a)},0),i;if(void 0!==loading[a])loading[a].push({onLoad:e,onProgress:t,onError:r});else{loading[a]=[],loading[a].push({onLoad:e,onProgress:t,onError:r});t=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});const n=this.mimeType,s=this.responseType;fetch(t).then(e=>{if(200!==e.status&&0!==e.status)throw new HttpError(`fetch for "${e.url}" responded with ${e.status}: `+e.statusText,e);{if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const o=loading[a],t=e.body.getReader();e=e.headers.get("Content-Length");const l=e?parseInt(e):0,h=0!==l;let s=0;e=new ReadableStream({start(a){!function n(){t.read().then(({done:e,value:t})=>{if(e)a.close();else{s+=t.byteLength;const r=new ProgressEvent("progress",{lengthComputable:h,loaded:s,total:l});for(let e=0,t=o.length;e<t;e++){const i=o[e];i.onProgress&&i.onProgress(r)}a.enqueue(t),n()}})}()}});return new Response(e)}}).then(e=>{switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{return(new DOMParser).parseFromString(e,n)});case"json":return e.json();default:if(void 0===n)return e.text();{var t=/charset="?([^;"\s]*)"?/i.exec(n),t=t&&t[1]?t[1].toLowerCase():void 0;const r=new TextDecoder(t);return e.arrayBuffer().then(e=>r.decode(e))}}}).then(r=>{Cache.add(a,r);var i=loading[a];delete loading[a];for(let e=0,t=i.length;e<t;e++){var n=i[e];n.onLoad&&n.onLoad(r)}}).catch(r=>{var i=loading[a];if(void 0===i)throw this.manager.itemError(a),r;delete loading[a];for(let e=0,t=i.length;e<t;e++){var n=i[e];n.onError&&n.onError(r)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class AnimationLoader extends Loader{constructor(e){super(e)}load(t,r,e,i){const n=this;var a=new FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(t){var r=[];for(let e=0;e<t.length;e++){var i=AnimationClip.parse(t[e]);r.push(i)}return r}}class CompressedTextureLoader extends Loader{constructor(e){super(e)}load(r,n,i,a){const s=this,o=[],l=new CompressedTexture,h=new FileLoader(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let c=0;if(Array.isArray(r))for(let e=0,t=r.length;e<t;++e)!function(t){h.load(r[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},6===(c+=1)&&(1===e.mipmapCount&&(l.minFilter=LinearFilter),l.image=o,l.format=e.format,l.needsUpdate=!0,n)&&n(l)},i,a)}(e);else h.load(r,function(e){var r=s.parse(e,!0);if(r.isCubemap){var i=r.mipmaps.length/r.mipmapCount;for(let t=0;t<i;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}l.image=o}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=LinearFilter),l.format=r.format,l.needsUpdate=!0,n&&n(l)},i,a);return l}}class ImageLoader extends Loader{constructor(e){super(e)}load(t,e,r,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=Cache.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){e&&e(a),n.manager.itemEnd(t)},0),a;const s=createElementNS("img");function o(){h(),Cache.add(t,this),e&&e(this),n.manager.itemEnd(t)}function l(e){h(),i&&i(e),n.manager.itemError(t),n.manager.itemEnd(t)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(t),s.src=t,s}}class CubeTextureLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=new CubeTexture,s=new ImageLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<r.length;++e)!function(t){s.load(r[t],function(e){a.images[t]=e,6===++o&&(a.needsUpdate=!0,i)&&i(a)},void 0,n)}(e);return a}}class DataTextureLoader extends Loader{constructor(e){super(e)}load(e,t,r,i){const n=this,a=new DataTexture;var s=new FileLoader(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(n.withCredentials),s.load(e,function(e){e=n.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:ClampToEdgeWrapping,a.wrapT=void 0!==e.wrapT?e.wrapT:ClampToEdgeWrapping,a.magFilter=void 0!==e.magFilter?e.magFilter:LinearFilter,a.minFilter=void 0!==e.minFilter?e.minFilter:LinearFilter,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=LinearMipmapLinearFilter),1===e.mipmapCount&&(a.minFilter=LinearFilter),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t)&&t(a,e)},r,i),a}}class TextureLoader extends Loader{constructor(e){super(e)}load(e,t,r,i){const n=new Texture;var a=new ImageLoader(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){n.image=e,n.needsUpdate=!0,void 0!==t&&t(n)},r,i),n}}class Light extends Object3D{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Color(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){e=super.toJSON(e);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}class HemisphereLight extends Light{constructor(e,t,r){super(e,r),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const _projScreenMatrix$1=new Matrix4,_lightPositionWorld$1=new Vector3,_lookTarget$1=new Vector3;class LightShadow{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){var t=this.camera,r=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(e.matrixWorld),t.position.copy(_lightPositionWorld$1),_lookTarget$1.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(_lookTarget$1),t.updateMatrixWorld(),_projScreenMatrix$1.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix$1),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){var t=this.camera,r=2*RAD2DEG*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;r===t.fov&&i===t.aspect&&n===t.far||(t.fov=r,t.aspect=i,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class SpotLight extends Light{constructor(e,t,r=0,i=Math.PI/3,n=0,a=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.distance=r,this.angle=i,this.penumbra=n,this.decay=a,this.shadow=new SpotLightShadow}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const _projScreenMatrix=new Matrix4,_lightPositionWorld=new Vector3,_lookTarget=new Vector3;class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}updateMatrices(e,t=0){var r=this.camera,i=this.matrix,n=e.distance||r.far;n!==r.far&&(r.far=n,r.updateProjectionMatrix()),_lightPositionWorld.setFromMatrixPosition(e.matrixWorld),r.position.copy(_lightPositionWorld),_lookTarget.copy(r.position),_lookTarget.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(_lookTarget),r.updateMatrixWorld(),i.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z),_projScreenMatrix.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix)}}class PointLight extends Light{constructor(e,t,r=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=r,this.decay=i,this.shadow=new PointLightShadow}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class DirectionalLight extends Light{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class AmbientLight extends Light{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class RectAreaLight extends Light{constructor(e,t,r=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=r,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){e=super.toJSON(e);return e.object.width=this.width,e.object.height=this.height,e}}class SphericalHarmonics3{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Vector3)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var r=e.x,i=e.y,e=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*i),t.addScaledVector(n[2],.488603*e),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],r*i*1.092548),t.addScaledVector(n[5],i*e*1.092548),t.addScaledVector(n[6],.315392*(3*e*e-1)),t.addScaledVector(n[7],r*e*1.092548),t.addScaledVector(n[8],.546274*(r*r-i*i)),t}getIrradianceAt(e,t){var r=e.x,i=e.y,e=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],1.023328*i),t.addScaledVector(n[2],1.023328*e),t.addScaledVector(n[3],1.023328*r),t.addScaledVector(n[4],.858086*r*i),t.addScaledVector(n[5],.858086*i*e),t.addScaledVector(n[6],.743125*e*e-.247708),t.addScaledVector(n[7],.858086*r*e),t.addScaledVector(n[8],.429043*(r*r-i*i)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,r){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],r);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,r){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],r);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,r=0){var i=this.coefficients;for(let e=0;e<9;e++)i[e].fromArray(t,r+3*e);return this}toArray(t=[],r=0){var i=this.coefficients;for(let e=0;e<9;e++)i[e].toArray(t,r+3*e);return t}static getBasisAt(e,t){var r=e.x,i=e.y,e=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*e,t[3]=.488603*r,t[4]=1.092548*r*i,t[5]=1.092548*i*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*r*e,t[8]=.546274*(r*r-i*i)}}class LightProbe extends Light{constructor(e=new SphericalHarmonics3,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){e=super.toJSON(e);return e.object.sh=this.sh.toArray(),e}}class MaterialLoader extends Loader{constructor(e){super(e),this.textures={}}load(t,r,e,i){const n=this;var a=new FileLoader(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(t){const r=this.textures;function e(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}var i=MaterialLoader.createMaterialFromType(t.type);if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new Color).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.iridescence&&(i.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(i.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&(i.vertexColors="number"==typeof t.vertexColors?0<t.vertexColors:t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var n=t.uniforms[a];switch(i.uniforms[a]={},n.type){case"t":i.uniforms[a].value=e(n.value);break;case"c":i.uniforms[a].value=(new Color).setHex(n.value);break;case"v2":i.uniforms[a].value=(new Vector2).fromArray(n.value);break;case"v3":i.uniforms[a].value=(new Vector3).fromArray(n.value);break;case"v4":i.uniforms[a].value=(new Vector4).fromArray(n.value);break;case"m3":i.uniforms[a].value=(new Matrix3).fromArray(n.value);break;case"m4":i.uniforms[a].value=(new Matrix4).fromArray(n.value);break;default:i.uniforms[a].value=n.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=e(t.map)),void 0!==t.matcap&&(i.matcap=e(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new Vector2).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=e(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=e(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=e(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Vector2).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(i.iridescenceMap=e(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(i.iridescenceThicknessMap=e(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(i.transmissionMap=e(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=e(t.thicknessMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=e(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=e(t.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new{ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}[e]}}class LoaderUtils{static decodeText(r){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(r);let i="";for(let e=0,t=r.length;e<t;e++)i+=String.fromCharCode(r[e]);try{return decodeURIComponent(escape(i))}catch(e){return i}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){var e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class BufferGeometryLoader extends Loader{constructor(e){super(e)}load(t,r,e,i){const n=this;var a=new FileLoader(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(r){const i={},n={};function a(e,t){var r;return void 0!==i[t]?i[t]:(r=function(e,t){if(void 0!==n[t])return n[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return n[t]=e}(e,(e=e.interleavedBuffers[t]).buffer),r=getTypedArray(e.type,r),(r=new InterleavedBuffer(r,e.stride)).uuid=e.uuid,i[t]=r)}var s=new(r.isInstancedBufferGeometry?InstancedBufferGeometry:BufferGeometry),e=r.data.index,t=(void 0!==e&&(e=getTypedArray(e.type,e.array),s.setIndex(new BufferAttribute(e,1))),r.data.attributes);for(const v in t){var o,l=t[v];let e;e=l.isInterleavedBufferAttribute?(o=a(r.data,l.data),new InterleavedBufferAttribute(o,l.itemSize,l.offset,l.normalized)):(o=getTypedArray(l.type,l.array),new(l.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(o,l.itemSize,l.normalized)),void 0!==l.name&&(e.name=l.name),void 0!==l.usage&&e.setUsage(l.usage),void 0!==l.updateRange&&(e.updateRange.offset=l.updateRange.offset,e.updateRange.count=l.updateRange.count),s.setAttribute(v,e)}var h=r.data.morphAttributes;if(h)for(const _ in h){var c=h[_],u=[];for(let t=0,e=c.length;t<e;t++){var d,p=c[t];let e;e=p.isInterleavedBufferAttribute?(d=a(r.data,p.data),new InterleavedBufferAttribute(d,p.itemSize,p.offset,p.normalized)):(d=getTypedArray(p.type,p.array),new BufferAttribute(d,p.itemSize,p.normalized)),void 0!==p.name&&(e.name=p.name),u.push(e)}s.morphAttributes[_]=u}r.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var m=r.data.groups||r.data.drawcalls||r.data.offsets;if(void 0!==m)for(let e=0,t=m.length;e!==t;++e){var f=m[e];s.addGroup(f.start,f.count,f.materialIndex)}var g,e=r.data.boundingSphere;return void 0!==e&&(g=new Vector3,void 0!==e.center&&g.fromArray(e.center),s.boundingSphere=new Sphere(g,e.radius)),r.name&&(s.name=r.name),r.userData&&(s.userData=r.userData),s}}class ObjectLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=this;var t=""===this.path?LoaderUtils.extractUrlBase(r):this.path,t=(this.resourcePath=this.resourcePath||t,new FileLoader(this.manager));t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+r+".",e.message)}e=t.metadata;void 0===e||void 0===e.type||"geometry"===e.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+r):a.parse(t,i)},e,n)}async loadAsync(e,t){var r=""===this.path?LoaderUtils.extractUrlBase(e):this.path,r=(this.resourcePath=this.resourcePath||r,new FileLoader(this.manager)),r=(r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),await r.loadAsync(e,t)),t=JSON.parse(r),r=t.metadata;if(void 0===r||void 0===r.type||"geometry"===r.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return this.parseAsync(t)}parse(e,t){var r=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,i),n=this.parseImages(e.images,function(){void 0!==t&&t(o)}),a=this.parseTextures(e.textures,n),s=this.parseMaterials(e.materials,a);const o=this.parseObject(e.object,i,s,a,r);i=this.parseSkeletons(e.skeletons,o);if(this.bindSkeletons(o,i),void 0!==t){let e=!1;for(const l in n)if(n[l].data instanceof HTMLImageElement){e=!0;break}!1===e&&t(o)}return o}async parseAsync(e){var t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,r),i=await this.parseImagesAsync(e.images),i=this.parseTextures(e.textures,i),n=this.parseMaterials(e.materials,i),r=this.parseObject(e.object,r,n,i,t),n=this.parseSkeletons(e.skeletons,r);return this.bindSkeletons(r,n),r}parseShapes(r){var i={};if(void 0!==r)for(let e=0,t=r.length;e<t;e++){var n=(new Shape).fromJSON(r[e]);i[n.uuid]=n}return i}parseSkeletons(r,e){var i={};const n={};if(e.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==r)for(let e=0,t=r.length;e<t;e++){var a=(new Skeleton).fromJSON(r[e],n);i[a.uuid]=a}return i}parseGeometries(r,i){var n={};if(void 0!==r){var a=new BufferGeometryLoader;for(let t=0,e=r.length;t<e;t++){let e;var s=r[t];switch(s.type){case"BufferGeometry":case"InstancedBufferGeometry":e=a.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:s.type in Geometries?e=Geometries[s.type].fromJSON(s,i):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${s.type}"`)}e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),!0===e.isBufferGeometry&&void 0!==s.userData&&(e.userData=s.userData),n[s.uuid]=e}}return n}parseMaterials(r,e){var i={},n={};if(void 0!==r){var a=new MaterialLoader;a.setTextures(e);for(let e=0,t=r.length;e<t;e++){var s=r[e];if("MultiMaterial"===s.type){var o=[];for(let e=0;e<s.materials.length;e++){var l=s.materials[e];void 0===i[l.uuid]&&(i[l.uuid]=a.parse(l)),o.push(i[l.uuid])}n[s.uuid]=o}else void 0===i[s.uuid]&&(i[s.uuid]=a.parse(s)),n[s.uuid]=i[s.uuid]}}return n}parseAnimations(t){var r={};if(void 0!==t)for(let e=0;e<t.length;e++){var i=t[e],i=AnimationClip.parse(i);r[i.uuid]=i}return r}parseImages(r,e){const i=this;var n={};let a;function s(e){var t,r;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:i.resourcePath+t,r=t,i.manager.itemStart(r),a.load(r,function(){i.manager.itemEnd(r)},void 0,function(){i.manager.itemError(r),i.manager.itemEnd(r)})):e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){e=new LoadingManager(e);(a=new ImageLoader(e)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){var h=[];for(let e=0,t=l.length;e<t;e++){var c=s(l[e]);null!==c&&(c instanceof HTMLImageElement?h.push(c):h.push(new DataTexture(c.data,c.width,c.height)))}n[o.uuid]=new Source(h)}else{var u=s(o.url);n[o.uuid]=new Source(u)}}}return n}async parseImagesAsync(r){const i=this;var n={};let a;async function s(e){var t;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:i.resourcePath+t,a.loadAsync(t)):e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){(a=new ImageLoader(this.manager)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){var h=[];for(let e=0,t=l.length;e<t;e++){var c=await s(l[e]);null!==c&&(c instanceof HTMLImageElement?h.push(c):h.push(new DataTexture(c.data,c.width,c.height)))}n[o.uuid]=new Source(h)}else{var u=await s(o.url);n[o.uuid]=new Source(u)}}}return n}parseTextures(r,i){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var a={};if(void 0!==r)for(let t=0,e=r.length;t<e;t++){var s=r[t],o=(void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===i[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),i[s.image]),l=o.data;let e;Array.isArray(l)?(e=new CubeTexture,6===l.length&&(e.needsUpdate=!0)):(e=new(l&&l.data?DataTexture:Texture),l&&(e.needsUpdate=!0)),e.source=o,e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=n(s.mapping,TEXTURE_MAPPING)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=n(s.wrap[0],TEXTURE_WRAPPING),e.wrapT=n(s.wrap[1],TEXTURE_WRAPPING)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=n(s.minFilter,TEXTURE_FILTER)),void 0!==s.magFilter&&(e.magFilter=n(s.magFilter,TEXTURE_FILTER)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(e.userData=s.userData),a[s.uuid]=e}return a}parseObject(e,t,a,r,i){let n;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(r){if(void 0!==r){if(Array.isArray(r)){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),i.push(a[n])}return i}return void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),a[r]}}function l(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let h,c;switch(e.type){case"Scene":n=new Scene,void 0!==e.background&&(Number.isInteger(e.background)?n.background=new Color(e.background):n.background=l(e.background)),void 0!==e.environment&&(n.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":n=new DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":h=s(e.geometry),c=o(e.material),n=new SkinnedMesh(h,c),void 0!==e.bindMode&&(n.bindMode=e.bindMode),void 0!==e.bindMatrix&&n.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(n.skeleton=e.skeleton);break;case"Mesh":h=s(e.geometry),c=o(e.material),n=new Mesh(h,c);break;case"InstancedMesh":h=s(e.geometry),c=o(e.material);var u=e.count,d=e.instanceMatrix,p=e.instanceColor;(n=new InstancedMesh(h,c,u)).instanceMatrix=new InstancedBufferAttribute(new Float32Array(d.array),16),void 0!==p&&(n.instanceColor=new InstancedBufferAttribute(new Float32Array(p.array),p.itemSize));break;case"LOD":n=new LOD;break;case"Line":n=new Line(s(e.geometry),o(e.material));break;case"LineLoop":n=new LineLoop(s(e.geometry),o(e.material));break;case"LineSegments":n=new LineSegments(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":n=new Points(s(e.geometry),o(e.material));break;case"Sprite":n=new Sprite(o(e.material));break;case"Group":n=new Group;break;case"Bone":n=new Bone;break;default:n=new Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera)&&(n.shadow.camera=this.parseObject(e.shadow.camera)),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){var m=e.children;for(let e=0;e<m.length;e++)n.add(this.parseObject(m[e],t,a,r,i))}if(void 0!==e.animations){var f=e.animations;for(let e=0;e<f.length;e++){var g=f[e];n.animations.push(i[g])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);var v=e.levels;for(let e=0;e<v.length;e++){var _=v[e],y=n.getObjectByProperty("uuid",_.object);void 0!==y&&n.addLevel(y,_.distance)}}return n}bindSkeletons(e,r){0!==Object.keys(r).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=r[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};class ImageBitmapLoader extends Loader{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,r,e,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=Cache.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){r&&r(a),n.manager.itemEnd(t)},0),a;var s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(e){Cache.add(t,e),r&&r(e),n.manager.itemEnd(t)}).catch(function(e){i&&i(e),n.manager.itemError(t),n.manager.itemEnd(t)}),n.manager.itemStart(t)}}let _context;const AudioContext={getContext:function(){return _context=void 0===_context?new(window.AudioContext||window.webkitAudioContext):_context},setContext:function(e){_context=e}};class AudioLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=this;var t=new FileLoader(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){try{var t=e.slice(0);AudioContext.getContext().decodeAudioData(t,function(e){i(e)})}catch(e){n?n(e):console.error(e),a.manager.itemError(r)}},e,n)}}class HemisphereLightProbe extends LightProbe{constructor(e,t,r=1){super(void 0,r),this.isHemisphereLightProbe=!0;var r=(new Color).set(e),e=(new Color).set(t),t=new Vector3(r.r,r.g,r.b),r=new Vector3(e.r,e.g,e.b),e=Math.sqrt(Math.PI),i=e*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(r).multiplyScalar(e),this.sh.coefficients[1].copy(t).sub(r).multiplyScalar(i)}}class AmbientLightProbe extends LightProbe{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;t=(new Color).set(e);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const _eyeRight=new Matrix4,_eyeLeft=new Matrix4,_projectionMatrix=new Matrix4;class StereoCamera{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){var t,r,i,n,a=this._cache;a.focus===e.focus&&a.fov===e.fov&&a.aspect===e.aspect*this.aspect&&a.near===e.near&&a.far===e.far&&a.zoom===e.zoom&&a.eyeSep===this.eyeSep||(a.focus=e.focus,a.fov=e.fov,a.aspect=e.aspect*this.aspect,a.near=e.near,a.far=e.far,a.zoom=e.zoom,a.eyeSep=this.eyeSep,_projectionMatrix.copy(e.projectionMatrix),t=(i=a.eyeSep/2)*a.near/a.focus,r=a.near*Math.tan(DEG2RAD*a.fov*.5)/a.zoom,_eyeLeft.elements[12]=-i,_eyeRight.elements[12]=i,i=-r*a.aspect+t,n=r*a.aspect+t,_projectionMatrix.elements[0]=2*a.near/(n-i),_projectionMatrix.elements[8]=(n+i)/(n-i),this.cameraL.projectionMatrix.copy(_projectionMatrix),i=-r*a.aspect-t,n=r*a.aspect-t,_projectionMatrix.elements[0]=2*a.near/(n-i),_projectionMatrix.elements[8]=(n+i)/(n-i),this.cameraR.projectionMatrix.copy(_projectionMatrix)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}}class Clock{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;var t;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=now(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e)}}function now(){return("undefined"==typeof performance?Date:performance).now()}const _position$1=new Vector3,_quaternion$1=new Quaternion,_scale$1=new Vector3,_orientation$1=new Vector3;class AudioListener extends Object3D{constructor(){super(),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return(null!==this.filter?(this.gain.disconnect(this.filter),this.filter):this.gain).disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);var t,e=this.context.listener,r=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1),_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1),e.positionX?(t=this.context.currentTime+this.timeDelta,e.positionX.linearRampToValueAtTime(_position$1.x,t),e.positionY.linearRampToValueAtTime(_position$1.y,t),e.positionZ.linearRampToValueAtTime(_position$1.z,t),e.forwardX.linearRampToValueAtTime(_orientation$1.x,t),e.forwardY.linearRampToValueAtTime(_orientation$1.y,t),e.forwardZ.linearRampToValueAtTime(_orientation$1.z,t),e.upX.linearRampToValueAtTime(r.x,t),e.upY.linearRampToValueAtTime(r.y,t),e.upZ.linearRampToValueAtTime(r.z,t)):(e.setPosition(_position$1.x,_position$1.y,_position$1.z),e.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,r.x,r.y,r.z))}}class Audio extends Object3D{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else{if(!1!==this.hasPlaybackControl)return this._startedAt=this.context.currentTime+e,(e=this.context.createBufferSource()).buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect();console.warn("THREE.Audio: this Audio has no playback control.")}}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const _position=new Vector3,_quaternion=new Quaternion,_scale=new Vector3,_orientation=new Vector3;class PositionalAudio extends Audio{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this}updateMatrixWorld(e){var t;super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying||(this.matrixWorld.decompose(_position,_quaternion,_scale),_orientation.set(0,0,1).applyQuaternion(_quaternion),(e=this.panner).positionX?(t=this.context.currentTime+this.listener.timeDelta,e.positionX.linearRampToValueAtTime(_position.x,t),e.positionY.linearRampToValueAtTime(_position.y,t),e.positionZ.linearRampToValueAtTime(_position.z,t),e.orientationX.linearRampToValueAtTime(_orientation.x,t),e.orientationY.linearRampToValueAtTime(_orientation.y,t),e.orientationZ.linearRampToValueAtTime(_orientation.z,t)):(e.setPosition(_position.x,_position.y,_position.z),e.setOrientation(_orientation.x,_orientation.y,_orientation.z)))}}class AudioAnalyser{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var r=this.getFrequencyData();for(let e=0;e<r.length;e++)t+=r[e];return t/r.length}}class PropertyMixer{constructor(e,t,r){this.binding=e,this.valueSize=r;let i,n,a;switch(t){case"quaternion":i=this._slerp,n=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":i=this._select,n=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:i=this._lerp,n=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=n,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){var r=this.buffer,i=this.valueSize,n=e*i+i;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==i;++e)r[n+e]=r[e];a=t}else{e=t/(a+=t);this._mixBufferRegion(r,n,0,e,i)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,r=this.valueSize,i=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,r),this.cumulativeWeightAdditive+=e}apply(e){var t,r=this.valueSize,i=this.buffer,n=e*r+r,e=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1&&(t=r*this._origIndex,this._mixBufferRegion(i,n,t,1-e,r)),0<a&&this._mixBufferRegionAdditive(i,n,this._addIndex*r,1,r);for(let e=r,t=r+r;e!==t;++e)if(i[e]!==i[e+r]){s.setValue(i,n);break}}saveOriginalState(){var e=this.binding,r=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(r,n);for(let e=i,t=n;e!==t;++e)r[e]=r[n+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,r=t+this.valueSize;for(let e=t;e<r;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,r=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[r+e]=this.buffer[t+e]}_select(t,r,i,e,n){if(.5<=e)for(let e=0;e!==n;++e)t[r+e]=t[i+e]}_slerp(e,t,r,i){Quaternion.slerpFlat(e,t,e,t,e,r,i)}_slerpAdditive(e,t,r,i,n){n=this._workIndex*n;Quaternion.multiplyQuaternionsFlat(e,n,e,t,e,r),Quaternion.slerpFlat(e,t,e,t,e,n,i)}_lerp(t,r,i,n,a){var s=1-n;for(let e=0;e!==a;++e){var o=r+e;t[o]=t[o]*s+t[i+e]*n}}_lerpAdditive(t,r,i,n,a){for(let e=0;e!==a;++e){var s=r+e;t[s]=t[s]+t[i+e]*n}}}const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("["+_RESERVED_CHARS_RE+"]","g"),_wordChar="[^"+_RESERVED_CHARS_RE+"]",_wordCharOrDot="[^"+_RESERVED_CHARS_RE.replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];class Composite{constructor(e,t,r){r=r||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,r=this._bindings[r];void 0!==r&&r.getValue(e,t)}setValue(r,i){var n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].setValue(r,i)}bind(){var r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].bind()}unbind(){var r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].unbind()}}class PropertyBinding{constructor(e,t,r){this.path=t,this.parsedPath=r||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return new(e&&e.isAnimationObjectGroup?PropertyBinding.Composite:PropertyBinding)(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")}static parseTrackName(e){var t=_trackRe.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var r,t={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=t.nodeName&&t.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i&&(r=t.nodeName.substring(i+1),-1!==_supportedObjectNames.indexOf(r))&&(t.nodeName=t.nodeName.substring(0,i),t.objectName=r),null===t.propertyName||0===t.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t}static findNode(e,i){if(void 0===i||""===i||"."===i||-1===i||i===e.name||i===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(i);if(void 0!==t)return t}if(e.children){const n=function(t){for(let e=0;e<t.length;e++){var r=t[e];if(r.name===i||r.uuid===i)return r;r=n(r.children);if(r)return r}return null};t=n(e.children);if(t)return t}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)r[i++]=n[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++]}_setValue_array_setNeedsUpdate(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let r=this.node;var e=this.parsedPath,i=e.objectName,n=e.propertyName;let a=e.propertyIndex;if(r||(r=PropertyBinding.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=r),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,r){if(i){let t=e.objectIndex;switch(i){case"materials":if(!r.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!r.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);r=r.material.materials;break;case"bones":if(!r.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);r=r.skeleton.bones;for(let e=0;e<r.length;e++)if(r[e].name===t){t=e;break}break;default:if(void 0===r[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);r=r[i]}if(void 0!==t){if(void 0===r[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,r);r=r[t]}}var s=r[n];if(void 0===s)console.error("THREE.PropertyBinding: Trying to update property for track: "+e.nodeName+"."+n+" but it wasn't found.",r);else{let e=this.Versioning.None,t=(void 0!==(this.targetObject=r).needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==r.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==a){if("morphTargetInfluences"===n){if(!r.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!r.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==r.morphTargetDictionary[a]&&(a=r.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}PropertyBinding.Composite=Composite,PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray],PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AnimationObjectGroup{constructor(){this.isAnimationObjectGroup=!0,this.uuid=generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var r={};this._indicesByUUID=r;for(let e=0,t=arguments.length;e!==t;++e)r[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){var i=this._objects,n=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let h=void 0,c=i.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let r=n[p];if(void 0===r){r=c++,n[p]=r,i.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new PropertyBinding(d,a[e],s[e]))}else if(r<u){h=i[r];var m=--u,f=i[m];i[n[f.uuid]=r]=f,i[n[p]=m]=d;for(let t=0,e=l;t!==e;++t){var g=o[t],v=g[m];let e=g[r];g[r]=v,void 0===e&&(e=new PropertyBinding(d,a[t],s[t])),g[m]=e}}else i[r]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){var r=this._objects,i=this._indicesByUUID,n=this._bindings,a=n.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,h=i[l];if(void 0!==h&&h>=s){var c=s++,u=r[c];r[i[u.uuid]=h]=u,r[i[l]=c]=o;for(let e=0,t=a;e!==t;++e){var d=n[e],p=d[c],m=d[h];d[h]=p,d[c]=m}}}this.nCachedObjects_=s}uncache(){var r=this._objects,i=this._indicesByUUID,n=this._bindings,a=n.length;let s=this.nCachedObjects_,o=r.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,h=i[l];if(void 0!==h)if(delete i[l],h<s){var c=--s,l=r[c],u=--o,d=r[u];r[i[l.uuid]=h]=l,r[i[d.uuid]=c]=d,r.pop();for(let e=0,t=a;e!==t;++e){var p=n[e],m=p[c],f=p[u];p[h]=m,p[c]=f,p.pop()}}else{var g=--o,l=r[g];0<g&&(i[l.uuid]=h),r[h]=l,r.pop();for(let e=0,t=a;e!==t;++e){var v=n[e];v[h]=v[g],v.pop()}}}this.nCachedObjects_=s}subscribe_(r,i){var e=this._bindingsIndicesByPath,t=e[r],n=this._bindings;if(void 0!==t)return n[t];var a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,c=new Array(l),t=n.length;e[r]=t,a.push(r),s.push(i),n.push(c);for(let e=h,t=o.length;e!==t;++e){var u=o[e];c[e]=new PropertyBinding(u,r,i)}return c}unsubscribe_(e){var t,r,i,n,a,s=this._bindingsIndicesByPath,o=s[e];void 0!==o&&(t=this._paths,r=this._parsedPaths,a=(i=this._bindings)[n=i.length-1],i[s[e[n]]=o]=a,i.pop(),r[o]=r[n],r.pop(),t[o]=t[n],t.pop())}}class AnimationAction{constructor(e,t,r=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=i;var n=t.tracks,a=n.length,s=new Array(a),o={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let e=0;e!==a;++e){var l=n[e].createInterpolant(null);(s[e]=l).settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){var i,n;return e.fadeOut(t),this.fadeIn(t),r&&(n=(r=this._clip.duration)/(i=e._clip.duration),e.warp(1,i/r,t),this.warp(n,1,t)),this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){var i=this._mixer,n=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);var i=s.parameterPositions,o=s.sampleValues;return i[0]=n,i[1]=n+r,o[0]=e/a,o[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,i){if(this.enabled){var n=this._startTime;if(null!==n){n=(e-n)*r;if(n<0||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){var o=this._interpolants,l=this._propertyBindings;if(this.blendMode===AdditiveAnimationBlendMode)for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);else{NormalAnimationBlendMode;for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(i,s)}}}else this._updateWeight(e)}_updateWeight(e){let t=0;var r,i;return this.enabled&&(t=this.weight,null!==(r=this._weightInterpolant))&&(i=r.evaluate(e)[0],t*=i,e>r.parameterPositions[1])&&(this.stopFading(),0===i)&&(this.enabled=!1),this._effectiveWeight=t}_updateTimeScale(e){let t=0;var r,i;return this.paused||(t=this.timeScale,null!==(r=this._timeScaleInterpolant)&&(i=r.evaluate(e)[0],t*=i,e>r.parameterPositions[1])&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)),this._effectiveTimeScale=t}_updateTime(e){var t=this._clip.duration,r=this.loop;let i=this.time+e,n=this._loopCount;var a,s=r===LoopPingPong;if(0===e)return-1!==n&&s&&1==(1&n)?t-i:i;if(r===LoopOnce){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===n&&(0<=e?(n=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=t||i<0?(r=Math.floor(i/t),i-=t*r,n+=Math.abs(r),(a=this.repetitions-n)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=0<e?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==a?this._setEndings(a=e<0,!a,s):this._setEndings(!1,!1,s),this._loopCount=n,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r}))):this.time=i,s&&1==(1&n))return t-i;return i}_setEndings(e,t,r){var i=this._interpolantSettings;r?(i.endingStart=ZeroSlopeEnding,i.endingEnd=ZeroSlopeEnding):(i.endingStart=e?this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding,i.endingEnd=t?this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding)}_scheduleFading(e,t,r){var i=this._mixer,n=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var i=a.parameterPositions,s=a.sampleValues;return i[0]=n,s[0]=t,i[1]=n+e,s[1]=r,this}}const _controlInterpolantsResultBuffer=new Float32Array(1);class AnimationMixer extends EventDispatcher{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,r){var i=e._localRoot||this._root,n=e._clip.tracks,a=n.length,s=e._propertyBindings,o=e._interpolants,l=i.uuid,e=this._bindingsByRootAndName;let h=e[l];void 0===h&&(h={},e[l]=h);for(let t=0;t!==a;++t){var c=n[t],u=c.name;let e=h[u];if(void 0!==e)++e.referenceCount;else{if(void 0!==(e=s[t])){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,u));continue}var d=r&&r._propertyBindings[t].binding.parsedPath;++(e=new PropertyMixer(PropertyBinding.create(i,u,d),c.ValueTypeName,c.getValueSize())).referenceCount,this._addInactiveBinding(e,l,u)}s[t]=e,o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,r=e._clip.uuid,i=this._actionsByClip[r],this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,r,t));var t,r,i,n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){var a=n[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){var i=r[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,r){var i=this._actions,n=this._actionsByClip;let a=n[t];void 0===a?(a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=a):(n=a.knownActions,e._byClipCacheIndex=n.length,n.push(e)),e._cacheIndex=i.length,i.push(e),a.actionByRoot[r]=e}_removeInactiveAction(e){var t=this._actions,r=t[t.length-1],i=e._cacheIndex,i=(t[r._cacheIndex=i]=r,t.pop(),e._cacheIndex=null,e._clip.uuid),r=this._actionsByClip,t=r[i],n=t.knownActions,a=n[n.length-1],s=e._byClipCacheIndex;n[a._byClipCacheIndex=s]=a,n.pop(),e._byClipCacheIndex=null,delete t.actionByRoot[(e._localRoot||this._root).uuid],0===n.length&&delete r[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){var i=r[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){var t=this._actions,r=e._cacheIndex,i=this._nActiveActions++,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_takeBackAction(e){var t=this._actions,r=e._cacheIndex,i=--this._nActiveActions,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_addInactiveBinding(e,t,r){var i=this._bindingsByRootAndName,n=this._bindings;let a=i[t];void 0===a&&(a={},i[t]=a),(a[r]=e)._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){var t=this._bindings,r=e.binding,i=r.rootNode.uuid,r=r.path,n=this._bindingsByRootAndName,a=n[i],s=t[t.length-1],e=e._cacheIndex;t[s._cacheIndex=e]=s,t.pop(),delete a[r],0===Object.keys(a).length&&delete n[i]}_lendBinding(e){var t=this._bindings,r=e._cacheIndex,i=this._nActiveBindings++,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_takeBackBinding(e){var t=this._bindings,r=e._cacheIndex,i=--this._nActiveBindings,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_lendControlInterpolant(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(e[(r=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,_controlInterpolantsResultBuffer)).__cacheIndex=t]=r),r}_takeBackControlInterpolant(e){var t=this._controlInterpolants,r=e.__cacheIndex,i=--this._nActiveControlInterpolants,n=t[i];t[e.__cacheIndex=i]=e,t[n.__cacheIndex=r]=n}clipAction(e,t,r){var i=t||this._root,n=i.uuid;let a="string"==typeof e?AnimationClip.findByName(i,e):e;i=null!==a?a.uuid:e,e=this._actionsByClip[i];let s=null;if(void 0===r&&(r=null!==a?a.blendMode:NormalAnimationBlendMode),void 0!==e){var o=e.actionByRoot[n];if(void 0!==o&&o.blendMode===r)return o;s=e.knownActions[0],null===a&&(a=s._clip)}return null===a?null:(o=new AnimationAction(this,a,t,r),this._bindAction(o,s),this._addInactiveAction(o,i,n),o)}existingAction(e,t){var t=t||this._root,r=t.uuid,t="string"==typeof e?AnimationClip.findByName(t,e):e,t=t?t.uuid:e,e=this._actionsByClip[t];return void 0!==e&&e.actionByRoot[r]||null}stopAllAction(){var t=this._actions;for(let e=this._nActiveActions-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var r=this._actions,i=this._nActiveActions,n=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==i;++e)r[e]._update(n,t,a,s);var o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){var r=this._actions,e=e.uuid,t=this._actionsByClip,i=t[e];if(void 0!==i){var n=i.knownActions;for(let e=0,t=n.length;e!==t;++e){var a=n[e],s=(this._deactivateAction(a),a._cacheIndex),o=r[r.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,r[o._cacheIndex=s]=o,r.pop(),this._removeInactiveBindingsForAction(a)}delete t[e]}}uncacheRoot(e){var t=e.uuid,r=this._actionsByClip;for(const s in r){var i=r[s].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var n=this._bindingsByRootAndName[t];if(void 0!==n)for(const o in n){var a=n[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){e=this.existingAction(e,t);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}class Uniform{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())}}let id=0;class UniformsGroup extends EventDispatcher{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:id++}),this.name="",this.usage=StaticDrawUsage,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){e=this.uniforms.indexOf(e);return-1!==e&&this.uniforms.splice(e,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;var r=e.uniforms;for(let e=this.uniforms.length=0,t=r.length;e<t;e++)this.uniforms.push(r[e].clone());return this}clone(){return(new this.constructor).copy(this)}}class InstancedInterleavedBuffer extends InterleavedBuffer{constructor(e,t,r=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){e=super.clone(e);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(e){e=super.toJSON(e);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class GLBufferAttribute{constructor(e,t,r,i,n){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=i,this.count=n,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Raycaster{constructor(e,t,r=0,i=1/0){this.ray=new Ray(e,t),this.near=r,this.far=i,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,r=[]){return intersectObject(e,this,r,t),r.sort(ascSort),r}intersectObjects(r,i=!0,n=[]){for(let e=0,t=r.length;e<t;e++)intersectObject(r[e],this,n,i);return n.sort(ascSort),n}}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,r,i,t){if(e.layers.test(r.layers)&&e.raycast(r,i),!0===t){var n=e.children;for(let e=0,t=n.length;e<t;e++)intersectObject(n[e],r,i,!0)}}class Spherical{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(clamp(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Cylindrical{constructor(e=1,t=0,r=0){return this.radius=e,this.theta=t,this.y=r,this}set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const _vector$4=new Vector2;class Box2{constructor(e=new Vector2(1/0,1/0),t=new Vector2(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=_vector$4.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$4.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(e=new Vector3,t=new Vector3){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);e=_startEnd.dot(_startEnd);let r=_startEnd.dot(_startP)/e;return r=t?clamp(r,0,1):r}closestPointToPoint(e,t,r){e=this.closestPointToPointParameter(e,t);return this.delta(r).multiplyScalar(e).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const _vector$3=new Vector3;class SpotLightHelper extends Object3D{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;var e=new BufferGeometry,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,n=t/32*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(n),Math.sin(n),1)}e.setAttribute("position",new Float32BufferAttribute(r,3));t=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(e,t),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$3.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$3),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const _vector$2=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;class SkeletonHelper extends LineSegments{constructor(e){var t=getBoneList(e),r=new BufferGeometry,i=[],n=[],a=new Color(0,0,1),s=new Color(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),n.push(a.r,a.g,a.b),n.push(s.r,s.g,s.b))}r.setAttribute("position",new Float32BufferAttribute(i,3)),r.setAttribute("color",new Float32BufferAttribute(n,3)),super(r,new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var r=this.bones,t=this.geometry,i=t.getAttribute("position");_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<r.length;e++){var n=r[e];n.parent&&n.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,n.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),i.setXYZ(t,_vector$2.x,_vector$2.y,_vector$2.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,n.parent.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),i.setXYZ(t+1,_vector$2.x,_vector$2.y,_vector$2.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function getBoneList(t){var r=[];!0===t.isBone&&r.push(t);for(let e=0;e<t.children.length;e++)r.push.apply(r,getBoneList(t.children[e]));return r}class PointLightHelper extends Mesh{constructor(e,t,r){super(new SphereGeometry(t,4,2),new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=r,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$1=new Vector3,_color1=new Color,_color2=new Color;class HemisphereLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;e=new OctahedronGeometry(t),e.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0),r=e.getAttribute("position"),t=new Float32Array(3*r.count);e.setAttribute("color",new BufferAttribute(t,3)),this.add(new Mesh(e,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var r=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let e=0,t=r.count;e<t;e++){var i=e<t/2?_color1:_color2;r.setXYZ(e,i.r,i.g,i.b)}r.needsUpdate=!0}e.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class GridHelper extends LineSegments{constructor(e=10,i=10,n=4473924,a=8947848){n=new Color(n),a=new Color(a);var s=i/2,o=e/i,l=e/2,h=[],c=[];for(let e=0,t=0,r=-l;e<=i;e++,r+=o){h.push(-l,0,r,l,0,r),h.push(r,0,-l,r,0,l);var u=e===s?n:a;u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3}var e=new BufferGeometry,t=(e.setAttribute("position",new Float32BufferAttribute(h,3)),e.setAttribute("color",new Float32BufferAttribute(c,3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(e,t),this.type="GridHelper"}}class PolarGridHelper extends LineSegments{constructor(t=10,r=16,i=8,n=64,a=4473924,s=8947848){a=new Color(a),s=new Color(s);var o=[],l=[];for(let e=0;e<=r;e++){var h=e/r*(2*Math.PI),c=Math.sin(h)*t,h=Math.cos(h)*t,c=(o.push(0,0,0),o.push(c,0,h),1&e?a:s);l.push(c.r,c.g,c.b),l.push(c.r,c.g,c.b)}for(let e=0;e<=i;e++){var u=1&e?a:s,d=t-t/i*e;for(let e=0;e<n;e++){var p=e/n*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d;o.push(m,0,f),l.push(u.r,u.g,u.b),p=(e+1)/n*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d,o.push(m,0,f),l.push(u.r,u.g,u.b)}}var e=new BufferGeometry,g=(e.setAttribute("position",new Float32BufferAttribute(o,3)),e.setAttribute("color",new Float32BufferAttribute(l,3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(e,g),this.type="PolarGridHelper"}}const _v1=new Vector3,_v2=new Vector3,_v3=new Vector3;class DirectionalLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));e=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(i,e),this.add(this.lightPlane),(i=new BufferGeometry).setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(i,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_v1.setFromMatrixPosition(this.light.matrixWorld),_v2.setFromMatrixPosition(this.light.target.matrixWorld),_v3.subVectors(_v2,_v1),this.lightPlane.lookAt(_v2),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2),this.targetLine.scale.z=_v3.length()}}const _vector=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(e){var t=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1});const i=[],n=[],a={};function s(e,t){o(e),o(t)}function o(e){i.push(0,0,0),n.push(0,0,0),void 0===a[e]&&(a[e]=[]),a[e].push(i.length/3-1)}s("n1","n2"),s("n2","n4"),s("n4","n3"),s("n3","n1"),s("f1","f2"),s("f2","f4"),s("f4","f3"),s("f3","f1"),s("n1","f1"),s("n2","f2"),s("n3","f3"),s("n4","f4"),s("p","n1"),s("p","n2"),s("p","n3"),s("p","n4"),s("u1","u2"),s("u2","u3"),s("u3","u1"),s("c","t"),s("p","c"),s("cn1","cn2"),s("cn3","cn4"),s("cf1","cf2"),s("cf3","cf4"),t.setAttribute("position",new Float32BufferAttribute(i,3)),t.setAttribute("color",new Float32BufferAttribute(n,3)),super(t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();var t=new Color(16755200),r=new Color(16711680),e=new Color(43775),l=new Color(16777215),h=new Color(3355443);this.setColors(t,r,e,l,h)}setColors(e,t,r,i,n){var a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,r.r,r.g,r.b),a.setXYZ(33,r.r,r.g,r.b),a.setXYZ(34,r.r,r.g,r.b),a.setXYZ(35,r.r,r.g,r.b),a.setXYZ(36,r.r,r.g,r.b),a.setXYZ(37,r.r,r.g,r.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,n.r,n.g,n.b),a.setXYZ(41,n.r,n.g,n.b),a.setXYZ(42,n.r,n.g,n.b),a.setXYZ(43,n.r,n.g,n.b),a.setXYZ(44,n.r,n.g,n.b),a.setXYZ(45,n.r,n.g,n.b),a.setXYZ(46,n.r,n.g,n.b),a.setXYZ(47,n.r,n.g,n.b),a.setXYZ(48,n.r,n.g,n.b),a.setXYZ(49,n.r,n.g,n.b),a.needsUpdate=!0}update(){var e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function setPoint(e,t,r,i,n,a,s){_vector.set(n,a,s).unproject(i);var o=t[e];if(void 0!==o){var l=r.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],_vector.x,_vector.y,_vector.z)}}const _box=new Box3;class BoxHelper extends LineSegments{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),n=new BufferGeometry;n.setIndex(new BufferAttribute(r,1)),n.setAttribute("position",new BufferAttribute(i,3)),super(n,new LineBasicMaterial({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){var t,r,i;void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box.setFromObject(this.object),_box.isEmpty()||(e=_box.min,t=_box.max,(i=(r=this.geometry.attributes.position).array)[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere())}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}}class Box3Helper extends LineSegments{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new BufferGeometry;i.setIndex(new BufferAttribute(r,1)),i.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new LineBasicMaterial({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class PlaneHelper extends Line{constructor(e,t=1,r=16776960){var i=new BufferGeometry,i=(i.setAttribute("position",new Float32BufferAttribute([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere(),super(i,new LineBasicMaterial({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t,new BufferGeometry);i.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),i.computeBoundingSphere(),this.add(new Mesh(i,new MeshBasicMaterial({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}}const _axis=new Vector3;let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(e=new Vector3(0,0,1),t=new Vector3(0,0,0),r=1,i=16776960,n=.2*r,a=.2*n){super(),this.type="ArrowHelper",void 0===_lineGeometry&&((_lineGeometry=new BufferGeometry).setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),(_coneGeometry=new CylinderGeometry(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,n,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(_axis.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(_axis,e))}setLength(e,t=.2*e,r=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class AxesHelper extends LineSegments{constructor(e=1){var e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],t=new BufferGeometry,e=(t.setAttribute("position",new Float32BufferAttribute(e,3)),t.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(t,e),this.type="AxesHelper"}setColors(e,t,r){var i=new Color,n=this.geometry.attributes.color.array;return i.set(e),i.toArray(n,0),i.toArray(n,3),i.set(t),i.toArray(n,6),i.toArray(n,9),i.set(r),i.toArray(n,12),i.toArray(n,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ShapePath{constructor(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,r,i){return this.currentPath.quadraticCurveTo(e,t,r,i),this}bezierCurveTo(e,t,r,i,n,a){return this.currentPath.bezierCurveTo(e,t,r,i,n,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(i,e){function t(r){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e],a=new Shape;a.curves=n.curves,i.push(a)}return i}var n=ShapeUtils.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return t(s);let o,l,h;var c=[];if(1===s.length)l=s[0],(h=new Shape).curves=l.curves,c.push(h);else{var u,d,p=!n(s[0].getPoints()),p=i?!p:p,m=[],f=[];let a=[],r=0;f[r]=void 0,a[r]=[];for(let e=0,t=s.length;e<t;e++)o=n(u=(l=s[e]).getPoints()),(i?!o:o)?(!p&&f[r]&&r++,f[r]={s:new Shape,p:u},f[r].s.curves=l.curves,p&&r++,a[r]=[]):a[r].push({h:l,p:u[0]});if(!f[0])return t(s);if(1<f.length){let i=!1,n=0;for(let e=0,t=f.length;e<t;e++)m[e]=[];for(let r=0,e=f.length;r<e;r++){var g=a[r];for(let e=0;e<g.length;e++){var v=g[e];let t=!0;for(let e=0;e<f.length;e++)!function(s,o){var e=o.length;let l=!1;for(let n=e-1,a=0;a<e;n=a++){let e=o[n],t=o[a],r=t.x-e.x,i=t.y-e.y;if(Math.abs(i)>Number.EPSILON){if(i<0&&(e=o[a],r=-r,t=o[n],i=-i),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var h=i*(s.x-e.x)-r*(s.y-e.y);if(0==h)return 1;h<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,f[e].p)||(r!==e&&n++,t?(t=!1,m[e].push(v)):i=!0);t&&m[r].push(v)}}0<n&&!1===i&&(a=m)}for(let r=0,e=f.length;r<e;r++){h=f[r].s,c.push(h);for(let e=0,t=(d=a[r]).length;e<t;e++)h.holes.push(d[e].h)}}return c}}const _tables=_generateTables();function _generateTables(){var e=new ArrayBuffer(4),t=new Float32Array(e),e=new Uint32Array(e),r=new Uint32Array(512),i=new Uint32Array(512);for(let e=0;e<256;++e){var n=e-127;n<-27?(r[e]=0,r[256|e]=32768,i[e]=24,i[256|e]=24):n<-14?(r[e]=1024>>-n-14,r[256|e]=1024>>-n-14|32768,i[e]=-n-1,i[256|e]=-n-1):n<=15?(r[e]=15+n<<10,r[256|e]=15+n<<10|32768,i[e]=13,i[256|e]=13):n<128?(r[e]=31744,r[256|e]=64512,i[e]=24,i[256|e]=24):(r[e]=31744,r[256|e]=64512,i[e]=13,i[256|e]=13)}var a=new Uint32Array(2048),s=new Uint32Array(64),o=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;0==(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,a[r]=e|t}for(let e=1024;e<2048;++e)a[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)s[e]=e<<23;s[31]=1199570944,s[32]=2147483648;for(let e=33;e<63;++e)s[e]=2147483648+(e-32<<23);s[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(o[e]=1024);return{floatView:t,uint32View:e,baseTable:r,shiftTable:i,mantissaTable:a,exponentTable:s,offsetTable:o}}function toHalfFloat(e){65504<Math.abs(e)&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=clamp(e,-65504,65504),_tables.floatView[0]=e;var e=_tables.uint32View[0],t=e>>23&511;return _tables.baseTable[t]+((8388607&e)>>_tables.shiftTable[t])}function fromHalfFloat(e){var t=e>>10;return _tables.uint32View[0]=_tables.mantissaTable[_tables.offsetTable[t]+(1023&e)]+_tables.exponentTable[t],_tables.floatView[0]}var DataUtils=Object.freeze({__proto__:null,toHalfFloat:toHalfFloat,fromHalfFloat:fromHalfFloat});class ParametricGeometry extends BufferGeometry{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class TextGeometry extends BufferGeometry{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function FontLoader(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function Font(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function ImmediateRenderObject(){console.error("THREE.ImmediateRenderObject has been removed.")}class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(e,t,r){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,r),this.samples=4}}class DataTexture2DArray extends DataArrayTexture{constructor(e,t,r,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,r,i)}}class DataTexture3D extends Data3DTexture{constructor(e,t,r,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,r,i)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=REVISION);export { _SRGBAFormat, ACESFilmicToneMapping, AddEquation, AdditiveAnimationBlendMode, AdditiveBlending, AddOperation, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, FlatShading, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, IntType, InvertStencilOp, KeepStencilOp, KeyframeTrack, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipmapLinearFilter, LinearMipMapNearestFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, Loader, LoaderUtils, LoadingManager, LOD, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MOUSE, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipmapLinearFilter, NearestMipMapNearestFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NoToneMapping, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, ParametricGeometry, Path, PCFShadowMap, PCFSoftShadowMap, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PMREMGenerator, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, REVISION, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBFormat, RGFormat, RGIntegerFormat, RingGeometry as RingBufferGeometry, RingGeometry, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SRGBColorSpace, sRGBEncoding, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, TOUCH, Triangle, TriangleFanDrawMode, TrianglesDrawMode, TriangleStripDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, UVMapping, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, VSMShadowMap, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderer, WebGLRenderTarget, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp };
